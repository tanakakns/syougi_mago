{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/vl","vega-lite.js","node_modules/browserify/node_modules/process/browser.js","node_modules/datalib/src/bins/bins.js","node_modules/datalib/src/generate.js","node_modules/datalib/src/import/type.js","node_modules/datalib/src/stats.js","node_modules/datalib/src/time-units.js","node_modules/datalib/src/util.js","src/Encoding.js","src/compile/aggregate.js","src/compile/axis.js","src/compile/bin.js","src/compile/compile.js","src/compile/facet.js","src/compile/filter.js","src/compile/group.js","src/compile/layout.js","src/compile/legend.js","src/compile/marks.js","src/compile/scale.js","src/compile/sort.js","src/compile/stack.js","src/compile/style.js","src/compile/subfacet.js","src/compile/template.js","src/compile/time.js","src/consts.js","src/data.js","src/enc.js","src/field.js","src/globals.js","src/lib/colorbrewer/colorbrewer.js","src/lib/d3-color/class.js","src/lib/d3-color/color.js","src/lib/d3-color/interpolate-lab.js","src/lib/d3-color/map.js","src/schema/schema.js","src/schema/schemautil.js","src/util.js"],"names":["e","exports","module","define","amd","f","window","global","self","vl","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"util","consts","extend","Encoding","compile","data","field","enc","schema","toShorthand","shorthand","./Encoding","./compile/compile","./consts","./data","./enc","./field","./globals","./schema/schema","./util",2,3,"drainQueue","draining","currentQueue","len","queue","noop","process","nextTick","fun","push","setTimeout","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",4,"bins","opt","step","level","minstep","precision","v","eps","maxb","maxbins","base","logb","Math","log","div","min","max","span","steps","bisect","ceil","pow","round","floor","start","stop","unit","value","index","x","lo","hi","mid","cmp","this","EPSILON","date_value","date","date_index","units","dmin","dmax","minb","minbins","find","spec","raw","../time-units","../util",5,"gen","repeat","val","Array","zeros","range","arguments","Infinity","j","random","uniform","undefined","d","samples","map","integer","b","normal","mean","stdev","next","rds","c","y","sqrt",6,"annotation","types","TYPES","type","values","$","isString","isValid","isDate","isNumber","isBoolean","typeAll","fields","keys","reduce","infer","TESTS","splice","inferAll","PARSERS","boolean","number","string","isNaN","Date","parse","all","parsers",7,"stats","unique","results","count","valid","missing","distinct","median","filter","sort","quantile","quartile","q","p","identity","H","h","sum","delta","variance","isArray","M2","modeskew","avg","med","std","extent","dot","Number","rank","mu","idx","comparator","tie","cor","fn","mua","mub","sda","sdb","ra","rb","dist","aa","bb","ab","X","Y","A","mat","B","exp","isFunction","L2","abs","m","R","M","entropy","counts","LN2","mutual","z","px","py","I","info","profile","sd","vals","q1","q3","summary","__summary__","./generate","./import/type",8,"STEPS","entries","format","UTC","getUTCFullYear","getUTCMonth","minuteOfHour","getUTCMinutes","hourOfDay","getUTCHours","dayOfWeek","getUTCDay","dayOfMonth","getUTCDate","monthOfYear","second","minute","hour","day","month","year","timesteps",9,"util_escape_str","replace","escape_str_re","strrep","str","truncateOnWord","rev","cnt","tok","split","truncate_word_re","reverse","w","join","trim","slice","Buffer","isNode","stderr","FNAME","namedfunc","duplicate","obj","JSON","stringify","equal","k","toMap","list","keystr","String","toString","Object","prototype","isObject","isBuffer","array","shift","apply","accessor","mutator","$func","op","$valid","$length","$year","$month","$date","$day","$hour","$minute","$in","sign","NaN","numcmp","stablesort","sortBy","keyFn","indices","sa","sb","startsWith","searchString","lastIndexOf","pad","pos","padchar","truncate","word","ellipsis","l1","l2","./time-units","_process","buffer",10,"vlfield","vlenc","theme","defaults","instantiate","specExtended","merge","_data","_marktype","marktype","_enc","encoding","_config","config","_filter","proto","fromShorthand","delim","assign","fromSpec","specFromShorthand","excludeConfig","toSpec","excludeData","subtract","is","has","encType","et","filterNull","forEach","fieldList","fieldName","Q","containsType","T","O","N","operands","operator","concat","nodata","nofn","isCount","bin","aggregate","fieldTitle","displayName","toUpperCase","scale","axis","band","bandSize","useSmallBand","ROW","COL","size","MAXBINS_DEFAULT","legend","isTypes","toggleSort","support","qField","init","role","text","prop","TEXT","font","isType","isOrdinalScale","isDimension","isMeasure","isAggregate","alwaysNoOcclusion","isStack","color","cardinality","isRaw","hasValues","transpose","oldenc","row","col","direction","mode","toggleFilterNullO","nulls",11,"aggregates","dims","meas","detail","facets","transform","groupby","details","aggregated","../globals",12,"axis_title","def","layout","maxlength","cellWidth","cellHeight","setter","angle","align","baseline","dy","height","titleOffset","axisTitleOffset","axis_labels","time","hasScale","textTemplatePath","maxLabelLength","getter","names","props","defs","isCol","isRow","rowOffset","cellPadding","grid","layer","offset","stroke","opacity","x2","group","mult","orient","ticks","./time",13,"binning","output",14,"marks","facet","stack","style","subfacet","template","mark","mdefs","mdef","addFilters","sorting","hasRow","hasCol","lineType","line","aggResult","hasDetails","from","by","legends","scales","properties","update","axes","filterLessThanZero","../Encoding","./aggregate","./axis","./bin","./facet","./filter","./group","./layout","./legend","./marks","./scale","./sort","./stack","./style","./subfacet","./template","datalib/src/stats",15,"faceting","axesGrp","enter","facetKeys","cellAxes","fill","error","unshift","groupdef","width","trans",16,"BINARY",">",">=","=","!=","<","<=","filters","condition","op1","op2","console","warn","test",17,"_name",18,"vllayout","box","hasX","hasY","xCardinality","yCardinality","padding","colCardinality","rowCardinality","getMaxLength","maxLength",19,"COLOR","SIZE","SHAPE","shape","labels",20,"bar_props","xc","y2","yc","ALPHA","point_props","strokeWidth","line_props","area_props","tick_props","filled_point_props","text_props","fontSize","fontWeight","fontStyle","bg","TABLE","bar","requiredEncoding","supportedEncoding","alpha","area","tick","circle","square","point",21,"scale_domain","domain","STACKED","getDataset","scale_range","bandWidth","zero","nice","outerPadding","points","colorbrewer","interpolateLab","ordinalPalette","palette","ps","interpolate","end","interpolator","../lib/colorbrewer/colorbrewer","../lib/d3-color/interpolate-lab",22,"addSortTransforms","datasetMapping","counter","byClause","dataName","transforms","source","RAW",23,"stacking","dim","isXMeasure","isYMeasure","stacked","y1","y0",24,"estimateOpacity","numPoints","numMultiples","../field",25,"subfaceting","g",26,"table","dataUrl","dataType","url",27,"timeFields","timeFn","tf","fieldFn","func","stat","yearstat","formula","expr","labelLength","substr","isOrdinalFn","isColor",28,"encodingTypes","DETAIL",29,"vldata",30,"encTypes","countRetinal","fieldDef","arr","indexOf","enctype",31,"shorthands","timefns","typeOrder","G","order","typeThenName","toLowerCase","original","typeThenCardinality","getbins","./compile/time",32,"INDEX",33,"YlGn","YlGnBu","GnBu","BuGn","PuBuGn","PuBu","BuPu","RdPu","PuRd","OrRd","YlOrRd","YlOrBr","Purples","Blues","Greens","Oranges","Reds","Greys","PuOr","BrBG","PRGn","PiYG","RdBu","RdGy","RdYlBu","Spectral","RdYlGn","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3",34,"ctor","key","defineProperty","enumerable",35,"d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","m1","m2","vv","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","d3","rgb","d3_hcl_lab","cos","d3_radians","sin","atan2","d3_degrees","d3_lab_xyz","d3_xyz_lab","d3_xyz_rgb","d3_rgbNumber","d3_rgb_hex","hsl","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","get","charAt","parseInt","d3_rgb_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_hslPrototype","brighter","darker","hcl","d3_hclPrototype","d3_lab_K","lab","d3_labPrototype","d3_lab_rgb","lab_rgb","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","set","./map",36,"al","bl","ba","./color",37,"d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_class","object","remove","empty","./class",38,"enum","supportedEnums","supportedTypes","minimum","default","getSupportedRole","supportedRole","defaultTimeFn","scale_type","clone","typicalField","description","onlyOrdinalField","dimension","axisMixin","supportedMarktypes","sortMixin","items","required","bandMixin","legendMixin","textMixin","margin","weight","family","sizeMixin","colorMixin","alphaMixin","maximum","shapeMixin","detailMixin","rowMixin","colMixin","facetMixin","requiredNameType","multiRoleField","measure","quantitativeField","onlyQuantitativeField","formatType","additionalProperties","viewport","gridColor","gridOpacity","singleHeight","singleWidth","largeBandSize","smallBandSize","largeBandMaxCardinality","cellGridColor","cellGridOpacity","cellBackgroundColor","textCellWidth","singleBarOffset","c10palette","c20palette","timeScaleLabelLength","characterWidth","$schema","./schemautil",39,"dest","src","hasOwnProperty","constructor","schemautil","isEmpty","instance","changes","ins",40,"isin","item","thisArg","any","noaugment","msg","datalib/src/bins/bins","datalib/src/generate","datalib/src/util"],"mappings":"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","file":"vega-lite.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nrequire('./globals');\n\nvar util = require('./util'),\n    consts = require('./consts');\n\nvar vl = {};\n\nutil.extend(vl, consts, util);\n\nvl.Encoding = require('./Encoding');\nvl.compile = require('./compile/compile');\nvl.data = require('./data');\nvl.field = require('./field');\nvl.enc = require('./enc');\nvl.schema = require('./schema/schema');\nvl.toShorthand = vl.Encoding.shorthand;\n\nmodule.exports = vl;","!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.vl=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nrequire('./globals');\n\nvar util = require('./util'),\n    consts = require('./consts');\n\nvar vl = {};\n\nutil.extend(vl, consts, util);\n\nvl.Encoding = require('./Encoding');\nvl.compile = require('./compile/compile');\nvl.data = require('./data');\nvl.field = require('./field');\nvl.enc = require('./enc');\nvl.schema = require('./schema/schema');\nvl.toShorthand = vl.Encoding.shorthand;\n\nmodule.exports = vl;\n},{\"./Encoding\":10,\"./compile/compile\":14,\"./consts\":28,\"./data\":29,\"./enc\":30,\"./field\":31,\"./globals\":32,\"./schema/schema\":38,\"./util\":40}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],4:[function(require,module,exports){\nvar util = require('../util');\nvar units = require('../time-units');\nvar EPSILON = 1e-15;\n\nfunction bins(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],      \n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n    \n    // increase step size if too many bins\n    do { step *= base; } while (Math.ceil(span/step) > maxb);\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  opt = opt || {};\n\n  // find time step, then bin\n  var dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n\n},{\"../time-units\":8,\"../util\":9}],5:[function(require,module,exports){\nvar gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n},{}],6:[function(require,module,exports){\nvar util = require('../util');\n\nvar TYPES = '__types__';\n\nvar PARSERS = {\n  boolean: util.boolean,\n  integer: util.number,\n  number:  util.number,\n  date:    util.date,\n  string:  function(x) { return x==='' ? null : x; }\n};\n\nvar TESTS = {\n  boolean: function(x) { return x==='true' || x==='false' || util.isBoolean(x); },\n  integer: function(x) { return TESTS.number(x) && (x=+x) === ~~x; },\n  number: function(x) { return !isNaN(+x) && !util.isDate(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); }\n};\n\nfunction annotation(data, types) {\n  if (!types) return data && data[TYPES] || null;\n  data[TYPES] = types;\n}\n\nfunction type(values, f) {\n  f = util.$(f);\n  var v, i, n;\n\n  // if data array has type annotations, use them\n  if (values[TYPES]) {\n    v = f(values[TYPES]);\n    if (util.isString(v)) return v;\n  }\n\n  for (i=0, n=values.length; !util.isValid(v) && i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n  }\n\n  return util.isDate(v) ? 'date' :\n    util.isNumber(v)    ? 'number' :\n    util.isBoolean(v)   ? 'boolean' :\n    util.isString(v)    ? 'string' : null;\n}\n\nfunction typeAll(data, fields) {\n  if (!data.length) return;\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    return (types[f] = type(data, f), types);\n  }, {});\n}\n\nfunction infer(values, f) {\n  f = util.$(f);\n  var i, j, v;\n\n  // types to test for, in precedence order\n  var types = ['boolean', 'integer', 'number', 'date'];\n\n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (util.isValid(v) && !TESTS[types[j]](v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return 'string';\n  }\n\n  return types[0];\n}\n\nfunction inferAll(data, fields) {\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    var type = infer(data, f);\n    if (PARSERS[type]) types[f] = type;\n    return types;\n  }, {});\n}\n\ntype.annotation = annotation;\ntype.all = typeAll;\ntype.infer = infer;\ntype.inferAll = inferAll;\ntype.parsers = PARSERS;\nmodule.exports = type;\n},{\"../util\":9}],7:[function(require,module,exports){\nvar util = require('./util');\nvar type = require('./import/type');\nvar gen = require('./generate');\nvar stats = {};\n\n// Collect unique values.\n// Output: an array of unique values, in first-observed order\nstats.unique = function(values, f, results) {\n  f = util.$(f);\n  results = results || [];\n  var u = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    results.push(v);\n  }\n  return results;\n};\n\n// Return the length of the input array.\nstats.count = function(values) {\n  return values && values.length || 0;\n};\n\n// Count the number of non-null, non-undefined, non-NaN values.\nstats.count.valid = function(values, f) {\n  f = util.$(f);\n  var v, i, n, valid = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) valid += 1;\n  }\n  return valid;\n};\n\n// Count the number of null or undefined values.\nstats.count.missing = function(values, f) {\n  f = util.$(f);\n  var v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\n// Null, undefined and NaN are each considered distinct values.\nstats.count.distinct = function(values, f) {\n  f = util.$(f);\n  var u = {}, v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Construct a map from distinct values to occurrence counts.\nstats.count.map = function(values, f) {\n  f = util.$(f);\n  var map = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    map[v] = (v in map) ? map[v] + 1 : 1;\n  }\n  return map;\n};\n\n// Compute the median of an array of numbers.\nstats.median = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  return stats.quantile(values, 0.5);\n};\n\n// Computes the quartile boundaries of an array of numbers.\nstats.quartile = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  var q = stats.quantile;\n  return [q(values, 0.25), q(values, 0.50), q(values, 0.75)];\n};\n\n// Compute the quantile of a sorted array of numbers.\n// Adapted from the D3.js implementation.\nstats.quantile = function(values, f, p) {\n  if (p === undefined) { p = f; f = util.identity; }\n  f = util.$(f);\n  var H = (values.length - 1) * p + 1,\n      h = Math.floor(H),\n      v = +f(values[h - 1]),\n      e = H - h;\n  return e ? v + e * (f(values[h]) - v) : v;\n};\n\n// Compute the sum of an array of numbers.\nstats.sum = function(values, f) {\n  f = util.$(f);\n  for (var sum=0, i=0, n=values.length, v; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) sum += v;\n  }\n  return sum;\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  f = util.$(f);\n  var mean = 0, delta, i, n, c, v;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  f = util.$(f);\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum value in an array.\nstats.min = function(values, f) {\n  return stats.extent(values, f)[0];\n};\n\n// Find the maximum value in an array.\nstats.max = function(values, f) {\n  return stats.extent(values, f)[1];\n};\n\n// Find the minimum and maximum of an array of values.\nstats.extent = function(values, f) {\n  f = util.$(f);\n  var a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) a = v;\n      if (v > b) b = v;\n    }\n  }\n  return [a, b];\n};\n\n// Find the integer indices of the minimum and maximum values.\nstats.extent.index = function(values, f) {\n  f = util.$(f);\n  var x = -1, y = -1, a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; x = y = i; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) { a = v; x = i; }\n      if (v > b) { b = v; y = i; }\n    }\n  }\n  return [x, y];\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i, v;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error('Array lengths must match.');\n    }\n    for (i=0; i<values.length; ++i) {\n      v = values[i] * a[i];\n      if (!Number.isNaN(v)) sum += v;\n    }\n  } else {\n    a = util.$(a);\n    b = util.$(b);\n    for (i=0; i<values.length; ++i) {\n      v = a(values[i]) * b(values[i]);\n      if (!Number.isNaN(v)) sum += v;\n    }\n  }\n  return sum;\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  f = util.$(f) || util.identity;\n  var a = values.map(function(v, i) {\n      return {idx: i, val: f(v)};\n    })\n    .sort(util.comparator('val'));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(util.$(b)) : a;\n  a = fn ? values.map(util.$(a)) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, util.$(a)) : stats.rank(values),\n      rb = b ? stats.rank(values, util.$(b)) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b) || util.isString(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      L2 = e === 2 || e == null,\n      n = values.length, s = 0, d, i;\n  if (f) {\n    a = util.$(a);\n    b = util.$(b);\n  }\n  for (i=0; i<n; ++i) {\n    d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n    s += L2 ? d*d : Math.pow(Math.abs(d), e);\n  }\n  return L2 ? Math.sqrt(s) : Math.pow(s, 1/e);\n};\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  f = util.$(f);\n  var i, p, s = 0, H = 0, n = counts.length;\n  for (i=0; i<n; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<n; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p) H += p * Math.log(p);\n  }\n  return -H / Math.LN2;\n};\n\n// Compute the mutual information between two discrete variables.\n// Returns an array of the form [MI, MI_distance] \n// MI_distance is defined as 1 - I(a,b) / H(a,b).\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(util.$(a)) : values,\n      y = counts ? values.map(util.$(b)) : a,\n      z = counts ? values.map(util.$(counts)) : b;\n\n  var px = {},\n      py = {},\n      n = z.length,\n      s = 0, I = 0, H = 0, p, t, i;\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] = 0;\n    py[y[i]] = 0;\n  }\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] += z[i];\n    py[y[i]] += z[i];\n    s += z[i];\n  }\n\n  t = 1 / (s * Math.LN2);\n  for (i=0; i<n; ++i) {\n    if (z[i] === 0) continue;\n    p = (s * z[i]) / (px[x[i]] * py[y[i]]);\n    I += z[i] * t * Math.log(p);\n    H += z[i] * t * Math.log(z[i]/s);\n  }\n\n  return [I, 1 + I/H];\n};\n\n// Compute the mutual information between two discrete variables.\nstats.mutual.info = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[0];\n};\n\n// Compute the mutual information distance between two discrete variables.\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\nstats.mutual.dist = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[1];\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  var mean = 0,\n      valid = 0,\n      missing = 0,\n      distinct = 0,\n      min = null,\n      max = null,\n      M2 = 0,\n      vals = [],\n      u = {}, delta, sd, i, v, x;\n\n  // compute summary stats\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n\n    // update unique values\n    u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n\n    if (v == null) {\n      ++missing;\n    } else if (util.isValid(v)) {\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      if (min===null || x < min) min = x;\n      if (max===null || x > max) max = x;\n      delta = x - mean;\n      mean = mean + delta / (++valid);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (valid - 1);\n  sd = Math.sqrt(M2);\n\n  // sort values for median and iqr\n  vals.sort(util.cmp);\n\n  return {\n    type:     type(values, f),\n    unique:   u,\n    count:    values.length,\n    valid:    valid,\n    missing:  missing,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   (v = stats.quantile(vals, 0.5)),\n    q1:       stats.quantile(vals, 0.25),\n    q3:       stats.quantile(vals, 0.75),\n    modeskew: sd === 0 ? 0 : (mean - v) / sd\n  };\n};\n\n// Compute profiles for all variables in a data set.\nstats.summary = function(data, fields) {\n  fields = fields || util.keys(data[0]);\n  var s = fields.map(function(f) {\n    var p = stats.profile(data, util.$(f));\n    return (p.field = f, p);\n  });\n  return (s.__summary__ = true, s);\n};\n\nmodule.exports = stats;\n},{\"./generate\":5,\"./import/type\":6,\"./util\":9}],8:[function(require,module,exports){\nvar STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction isNumber(d) { return typeof d === 'number'; }\n\nvar entries = [\n  {\n    type: 'second',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M:%S.%L',\n    date: function(d) {\n      return new Date(d * 1e3);\n    },\n    unit: function(d) {\n      return (+d / 1e3);\n    }\n  },\n  {\n    type: 'minute',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M',\n    date: function(d) {\n      return new Date(d * 6e4);\n    },\n    unit: function(d) {\n      return ~~(+d / 6e4);\n    }\n  },\n  {\n    type: 'hour',\n    minstep: 1,\n    format: '%Y %b %-d %H:00',\n    date: function(d) {\n      return new Date(d * 36e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 36e5);\n    }\n  },\n  {\n    type: 'day',\n    minstep: 1,\n    step: [1, 7],\n    format: '%Y %b %-d',\n    date: function(d) {\n      return new Date(d * 864e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 864e5);\n    }\n  },\n  {\n    type: 'month',\n    minstep: 1,\n    step: [1, 3, 6],\n    format: '%b %Y',\n    date: function(d) {\n      return new Date(Date.UTC(~~(d / 12), d % 12, 1));\n    },\n    unit: function(d) {\n      if (isNumber(d)) d = new Date(d);\n      return 12 * d.getUTCFullYear() + d.getUTCMonth();\n    }\n  },\n  {\n    type: 'year',\n    minstep: 1,\n    format: '%Y',\n    date: function(d) {\n      return new Date(Date.UTC(d, 0, 1));\n    },\n    unit: function(d) {\n      return (isNumber(d) ? new Date(d) : d).getUTCFullYear();\n    }\n  }\n];\n\nvar minuteOfHour = {\n  type: 'minuteOfHour',\n  min: 0,\n  max: 59,\n  minstep: 1,\n  format: '%M',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMinutes();\n  }\n};\n\nvar hourOfDay = {\n  type: 'hourOfDay',\n  min: 0,\n  max: 23,\n  minstep: 1,\n  format: '%H',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCHours();\n  }\n};\n\nvar dayOfWeek = {\n  type: 'dayOfWeek',\n  min: 0,\n  max: 6,\n  step: [1],\n  format: '%a',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 4 + d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDay();\n  }\n};\n\nvar dayOfMonth = {\n  type: 'dayOfMonth',\n  min: 1,\n  max: 31,\n  step: [1],\n  format: '%-d',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDate();\n  }\n};\n\nvar monthOfYear = {\n  type: 'monthOfYear',\n  min: 0,\n  max: 11,\n  step: [1],\n  format: '%b',\n  date: function(d) {\n    return new Date(Date.UTC(1970, d % 12, 1));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMonth();\n  }\n};\n\nvar units = {\n  'second':       entries[0],\n  'minute':       entries[1],\n  'hour':         entries[2],\n  'day':          entries[3],\n  'month':        entries[4],\n  'year':         entries[5],\n  'minuteOfHour': minuteOfHour,\n  'hourOfDay':    hourOfDay,\n  'dayOfWeek':    dayOfWeek,\n  'dayOfMonth':   dayOfMonth,\n  'monthOfYear':  monthOfYear,\n  'timesteps':    entries\n};\n\nunits.find = function(span, minb, maxb) {\n  var i, len, bins, step = STEPS[0];\n\n  for (i = 1, len = STEPS.length; i < len; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return entries[STEPS[i - 1][1]];\n      }\n      if (bins >= minb) {\n        return entries[step[1]];\n      }\n    }\n  }\n  return entries[STEPS[STEPS.length - 1][1]];\n};\n\nmodule.exports = units;\n\n},{}],9:[function(require,module,exports){\n(function (process){\nvar Buffer = require('buffer').Buffer;\nvar units = require('./time-units');\nvar u = module.exports = {};\n\n// where are we?\n\nu.isNode = typeof process !== 'undefined' &&\n           typeof process.stderr !== 'undefined';\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && !Number.isNaN(obj);\n};\n\nu.isBuffer = (Buffer && Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\nu.date = function(s) {\n  return s == null || s === '' ? null : Date.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? ('\\''+util_escape_str(x)+'\\'') : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, '$1\\\\\\'');\n}\n\n// data access functions\n\nu.field = function(f) {\n  return String(f).split('\\\\.')\n    .map(function(d) { return d.split('.'); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += '.' + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nu.accessor = function(f) {\n  var s;\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, (s = u.field(f)).length > 1 ?\n      function(x) { return s.reduce(function(x,f) { return x[f]; }, x); } :\n      function(x) { return x[f]; }\n    );\n};\n\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\nu.$year   = u.$func('year', units.year.unit);\nu.$month  = u.$func('month', units.monthOfYear.unit);\nu.$date   = u.$func('date', units.dayOfMonth.unit);\nu.$day    = u.$func('day', units.dayOfWeek.unit);\nu.$hour   = u.$func('hour', units.hourOfDay.unit);\nu.$minute = u.$func('minute', units.minuteOfHour.unit);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null && b === null) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n\n// string functions\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nu.startsWith = String.prototype.startsWith ?\n  function(string, searchString) {\n    return string.startsWith(searchString);\n  } :\n  function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n\n}).call(this,require('_process'))\n\n},{\"./time-units\":8,\"_process\":3,\"buffer\":2}],10:[function(require,module,exports){\n'use strict';\n\nrequire('./globals');\n\nvar consts = require('./consts'),\n  util = require('./util'),\n  vlfield = require('./field'),\n  vlenc = require('./enc'),\n  schema = require('./schema/schema');\n\nmodule.exports = (function() {\n  function Encoding(spec, theme) {\n    var defaults = schema.instantiate(),\n      specExtended = schema.util.merge(defaults, theme || {}, spec) ;\n\n    this._data = specExtended.data;\n    this._marktype = specExtended.marktype;\n    this._enc = specExtended.encoding;\n    this._config = specExtended.config;\n    this._filter = specExtended.filter;\n  }\n\n  var proto = Encoding.prototype;\n\n  Encoding.fromShorthand = function(shorthand, data, config, theme) {\n    var c = consts.shorthand,\n        split = shorthand.split(c.delim),\n        marktype = split.shift().split(c.assign)[1].trim(),\n        enc = vlenc.fromShorthand(split);\n\n    return new Encoding({\n      data: data,\n      marktype: marktype,\n      encoding: enc,\n      config: config,\n      filter: []\n    }, theme);\n  };\n\n  Encoding.fromSpec = function(spec, theme) {\n    return new Encoding(spec, theme);\n  };\n\n  proto.toShorthand = function() {\n    var c = consts.shorthand;\n    return 'mark' + c.assign + this._marktype +\n      c.delim + vlenc.shorthand(this._enc);\n  };\n\n  Encoding.shorthand = function (spec) {\n    var c = consts.shorthand;\n    return 'mark' + c.assign + spec.marktype +\n      c.delim + vlenc.shorthand(spec.encoding);\n  };\n\n  Encoding.specFromShorthand = function(shorthand, data, config, excludeConfig) {\n    return Encoding.fromShorthand(shorthand, data, config).toSpec(excludeConfig);\n  };\n\n  proto.toSpec = function(excludeConfig, excludeData) {\n    var enc = util.duplicate(this._enc),\n      spec;\n\n    spec = {\n      marktype: this._marktype,\n      encoding: enc,\n      filter: this._filter\n    };\n\n    if (!excludeConfig) {\n      spec.config = util.duplicate(this._config);\n    }\n\n    if (!excludeData) {\n      spec.data = util.duplicate(this._data);\n    }\n\n    // remove defaults\n    var defaults = schema.instantiate();\n    return schema.util.subtract(spec, defaults);\n  };\n\n\n  proto.marktype = function() {\n    return this._marktype;\n  };\n\n  proto.is = function(m) {\n    return this._marktype === m;\n  };\n\n  proto.has = function(encType) {\n    // equivalent to calling vlenc.has(this._enc, encType)\n    return this._enc[encType].name !== undefined;\n  };\n\n  proto.enc = function(et) {\n    return this._enc[et];\n  };\n\n  proto.filter = function() {\n    var filterNull = [],\n      fields = this.fields(),\n      self = this;\n\n    util.forEach(fields, function(fieldList, fieldName) {\n      if (fieldName === '*') return; //count\n\n      if ((self.config('filterNull').Q && fieldList.containsType[Q]) ||\n          (self.config('filterNull').T && fieldList.containsType[T]) ||\n          (self.config('filterNull').O && fieldList.containsType[O]) ||\n          (self.config('filterNull').N && fieldList.containsType[N])) {\n        filterNull.push({\n          operands: [fieldName],\n          operator: 'notNull'\n        });\n      }\n    });\n\n    return filterNull.concat(this._filter);\n  };\n\n  // get \"field\" property for vega\n  proto.field = function(et, nodata, nofn) {\n    if (!this.has(et)) return null;\n\n    var f = (nodata ? '' : 'data.');\n\n    if (vlfield.isCount(this._enc[et])) {\n      return f + 'count';\n    } else if (!nofn && this._enc[et].bin) {\n      return f + 'bin_' + this._enc[et].name;\n    } else if (!nofn && this._enc[et].aggregate) {\n      return f + this._enc[et].aggregate + '_' + this._enc[et].name;\n    } else if (!nofn && this._enc[et].fn) {\n      return f + this._enc[et].fn + '_' + this._enc[et].name;\n    } else {\n      return f + this._enc[et].name;\n    }\n  };\n\n  proto.fieldName = function(et) {\n    return this._enc[et].name;\n  };\n\n  /*\n   * return key-value pairs of field name and list of fields of that field name\n   */\n  proto.fields = function() {\n    return vlenc.fields(this._enc);\n  };\n\n  proto.fieldTitle = function(et) {\n    if (vlfield.isCount(this._enc[et])) {\n      return vlfield.count.displayName;\n    }\n    var fn = this._enc[et].aggregate || this._enc[et].fn || (this._enc[et].bin && 'bin');\n    if (fn) {\n      return fn.toUpperCase() + '(' + this._enc[et].name + ')';\n    } else {\n      return this._enc[et].name;\n    }\n  };\n\n  proto.scale = function(et) {\n    return this._enc[et].scale || {};\n  };\n\n  proto.axis = function(et) {\n    return this._enc[et].axis || {};\n  };\n\n  proto.band = function(et) {\n    return this._enc[et].band || {};\n  };\n\n  proto.bandSize = function(encType, useSmallBand) {\n    useSmallBand = useSmallBand ||\n      //isBandInSmallMultiples\n      (encType === Y && this.has(ROW) && this.has(Y)) ||\n      (encType === X && this.has(COL) && this.has(X));\n\n    // if band.size is explicitly specified, follow the specification, otherwise draw value from config.\n    return this.band(encType).size ||\n      this.config(useSmallBand ? 'smallBandSize' : 'largeBandSize');\n  };\n\n  proto.aggregate = function(et) {\n    return this._enc[et].aggregate;\n  };\n\n  // returns false if binning is disabled, otherwise an object with binning properties\n  proto.bin = function(et) {\n    var bin = this._enc[et].bin;\n    if (bin === {})\n      return false;\n    if (bin === true)\n      return {\n        maxbins: schema.MAXBINS_DEFAULT\n      };\n    return bin;\n  };\n\n  proto.legend = function(et) {\n    return this._enc[et].legend;\n  };\n\n  proto.value = function(et) {\n    return this._enc[et].value;\n  };\n\n  proto.fn = function(et) {\n    return this._enc[et].fn;\n  };\n\n  proto.sort = function(et, stats) {\n    var sort = this._enc[et].sort,\n      enc = this._enc,\n      isTypes = vlfield.isTypes;\n\n    if ((!sort || sort.length===0) &&\n        // FIXME\n        Encoding.toggleSort.support({enc:this._enc}, stats, true) && //HACK\n        this.config('toggleSort') === Q\n      ) {\n      var qField = isTypes(enc.x, [N, O]) ? enc.y : enc.x;\n\n      if (isTypes(enc[et], [N, O])) {\n        sort = [{\n          name: qField.name,\n          aggregate: qField.aggregate,\n          type: qField.type,\n          reverse: true\n        }];\n      }\n    }\n\n    return sort;\n  };\n\n  proto.length = function() {\n    return util.keys(this._enc).length;\n  };\n\n  proto.map = function(f) {\n    return vlenc.map(this._enc, f);\n  };\n\n  proto.reduce = function(f, init) {\n    return vlenc.reduce(this._enc, f, init);\n  };\n\n  proto.forEach = function(f) {\n    return vlenc.forEach(this._enc, f);\n  };\n\n  proto.type = function(et) {\n    return this.has(et) ? this._enc[et].type : null;\n  };\n\n  proto.role = function(et) {\n    return this.has(et) ? vlfield.role(this._enc[et]) : null;\n  };\n\n  proto.text = function(prop) {\n    var text = this._enc[TEXT].text;\n    return prop ? text[prop] : text;\n  };\n\n  proto.font = function(prop) {\n    var font = this._enc[TEXT].font;\n    return prop ? font[prop] : font;\n  };\n\n  proto.isType = function(et, type) {\n    var field = this.enc(et);\n    return field && Encoding.isType(field, type);\n  };\n\n  Encoding.isType = vlfield.isType;\n\n  Encoding.isOrdinalScale = function(encoding, encType) {\n    return vlfield.isOrdinalScale(encoding.enc(encType));\n  };\n\n  Encoding.isDimension = function(encoding, encType) {\n    return vlfield.isDimension(encoding.enc(encType));\n  };\n\n  Encoding.isMeasure = function(encoding, encType) {\n    return vlfield.isMeasure(encoding.enc(encType));\n  };\n\n  proto.isOrdinalScale = function(encType) {\n    return this.has(encType) && Encoding.isOrdinalScale(this, encType);\n  };\n\n  proto.isDimension = function(encType) {\n    return this.has(encType) && Encoding.isDimension(this, encType);\n  };\n\n  proto.isMeasure = function(encType) {\n    return this.has(encType) && Encoding.isMeasure(this, encType);\n  };\n\n  proto.isAggregate = function() {\n    return vlenc.isAggregate(this._enc);\n  };\n\n  Encoding.isAggregate = function(spec) {\n    return vlenc.isAggregate(spec.encoding);\n  };\n\n  Encoding.alwaysNoOcclusion = function(spec) {\n    // FIXME raw OxQ with # of rows = # of O\n    return vlenc.isAggregate(spec.encoding);\n  };\n\n  Encoding.isStack = function(spec) {\n    // FIXME update this once we have control for stack ...\n    return (spec.marktype === 'bar' || spec.marktype === 'area') &&\n      spec.encoding.color;\n  };\n\n  proto.isStack = function() {\n    // FIXME update this once we have control for stack ...\n    return (this.is('bar') || this.is('area')) && this.has('color');\n  };\n\n  proto.cardinality = function(encType, stats) {\n    return vlfield.cardinality(this.enc(encType), stats, this.config('filterNull'));\n  };\n\n  proto.isRaw = function() {\n    return !this.isAggregate();\n  };\n\n  proto.data = function(name) {\n    return this._data[name];\n  };\n\n   // returns whether the encoding has values embedded\n  proto.hasValues = function() {\n    var vals = this.data('values');\n    return vals && vals.length;\n  };\n\n  proto.config = function(name) {\n    return this._config[name];\n  };\n\n  Encoding.transpose = function(spec) {\n    var oldenc = spec.encoding,\n      enc = util.duplicate(spec.encoding);\n    enc.x = oldenc.y;\n    enc.y = oldenc.x;\n    enc.row = oldenc.col;\n    enc.col = oldenc.row;\n    spec.encoding = enc;\n    return spec;\n  };\n\n  // FIXME: REMOVE everything below here\n\n  Encoding.toggleSort = function(spec) {\n    spec.config = spec.config || {};\n    spec.config.toggleSort = spec.config.toggleSort === Q ? N : Q;\n    return spec;\n  };\n\n\n  Encoding.toggleSort.direction = function(spec) {\n    if (!Encoding.toggleSort.support(spec)) { return; }\n    var enc = spec.encoding;\n    return enc.x.type === N ? 'x' : 'y';\n  };\n\n  Encoding.toggleSort.mode = function(spec) {\n    return spec.config.toggleSort;\n  };\n\n  Encoding.toggleSort.support = function(spec, stats) {\n    var enc = spec.encoding,\n      isTypes = vlfield.isTypes;\n\n    if (vlenc.has(enc, ROW) || vlenc.has(enc, COL) ||\n      !vlenc.has(enc, X) || !vlenc.has(enc, Y) ||\n      !Encoding.alwaysNoOcclusion(spec, stats)) {\n      return false;\n    }\n\n    return ( isTypes(enc.x, [N,O]) && vlfield.isMeasure(enc.y)) ? 'x' :\n      ( isTypes(enc.y, [N,O]) && vlfield.isMeasure(enc.x)) ? 'y' : false;\n  };\n\n  Encoding.toggleFilterNullO = function(spec) {\n    spec.config = spec.config || {};\n    spec.config.filterNull = spec.config.filterNull || { //FIXME\n      T: true,\n      Q: true\n    };\n    spec.config.filterNull.O = !spec.config.filterNull.O;\n    return spec;\n  };\n\n  Encoding.toggleFilterNullO.support = function(spec, stats) {\n    var fields = vlenc.fields(spec.encoding);\n    for (var fieldName in fields) {\n      var fieldList = fields[fieldName];\n      if (fieldList.containsType.O && fieldName in stats && stats[fieldName].nulls > 0) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  return Encoding;\n})();\n\n},{\"./consts\":28,\"./enc\":30,\"./field\":31,\"./globals\":32,\"./schema/schema\":38,\"./util\":40}],11:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar util = require('../util');\n\nmodule.exports = aggregates;\n\nfunction aggregates(spec, encoding, opt) {\n  opt = opt || {};\n\n  var dims = {}, meas = {}, detail = {}, facets = {},\n    data = spec.data[1]; // currently data[0] is raw and data[1] is table\n\n  encoding.forEach(function(field, encType) {\n    if (field.aggregate) {\n      if (field.aggregate === 'count') {\n        meas.count = {op: 'count', field: '*'};\n      }else {\n        meas[field.aggregate + '|'+ field.name] = {\n          op: field.aggregate,\n          field: 'data.'+ field.name\n        };\n      }\n    } else {\n      dims[field.name] = encoding.field(encType);\n      if (encType == ROW || encType == COL) {\n        facets[field.name] = dims[field.name];\n      }else if (encType !== X && encType !== Y) {\n        detail[field.name] = dims[field.name];\n      }\n    }\n  });\n  dims = util.vals(dims);\n  meas = util.vals(meas);\n\n  if (meas.length > 0) {\n    if (!data.transform) data.transform = [];\n    data.transform.push({\n      type: 'aggregate',\n      groupby: dims,\n      fields: meas\n    });\n  }\n  return {\n    details: util.vals(detail),\n    dims: dims,\n    facets: util.vals(facets),\n    aggregated: meas.length > 0\n  };\n}\n\n},{\"../globals\":32,\"../util\":40}],12:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar util = require('../util'),\n  setter = util.setter,\n  getter = util.getter,\n  time = require('./time');\n\nvar axis = module.exports = {};\n\naxis.names = function(props) {\n  return util.keys(util.keys(props).reduce(function(a, x) {\n    var s = props[x].scale;\n    if (s === X || s === Y) a[props[x].scale] = 1;\n    return a;\n  }, {}));\n};\n\naxis.defs = function(names, encoding, layout, stats, opt) {\n  return names.reduce(function(a, name) {\n    a.push(axis.def(name, encoding, layout, stats, opt));\n    return a;\n  }, []);\n};\n\naxis.def = function(name, encoding, layout, stats, opt) {\n  var type = name;\n  var isCol = name == COL, isRow = name == ROW;\n  var rowOffset = axisTitleOffset(encoding, layout, Y) + 20,\n    cellPadding = layout.cellPadding;\n\n\n  if (isCol) type = 'x';\n  if (isRow) type = 'y';\n\n  var def = {\n    type: type,\n    scale: name\n  };\n\n  if (encoding.axis(name).grid) {\n    def.grid = true;\n    def.layer = 'back';\n\n    if (isCol) {\n      // set grid property -- put the lines on the right the cell\n      setter(def, ['properties', 'grid'], {\n        x: {\n          offset: layout.cellWidth * (1+ cellPadding/2.0),\n          // default value(s) -- vega doesn't do recursive merge\n          scale: 'col'\n        },\n        y: {\n          value: -layout.cellHeight * (cellPadding/2),\n        },\n        stroke: { value: encoding.config('cellGridColor') },\n        opacity: { value: encoding.config('cellGridOpacity') }\n      });\n    } else if (isRow) {\n      // set grid property -- put the lines on the top\n      setter(def, ['properties', 'grid'], {\n        y: {\n          offset: -layout.cellHeight * (cellPadding/2),\n          // default value(s) -- vega doesn't do recursive merge\n          scale: 'row'\n        },\n        x: {\n          value: rowOffset\n        },\n        x2: {\n          offset: rowOffset + (layout.cellWidth * 0.05),\n          // default value(s) -- vega doesn't do recursive merge\n          group: 'mark.group.width',\n          mult: 1\n        },\n        stroke: { value: encoding.config('cellGridColor') },\n        opacity: { value: encoding.config('cellGridOpacity') }\n      });\n    } else {\n      setter(def, ['properties', 'grid'], {\n        stroke: { value: encoding.config('gridColor') },\n        opacity: { value: encoding.config('gridOpacity') }\n      });\n    }\n  }\n\n  if (encoding.axis(name).title) {\n    def = axis_title(def, name, encoding, layout, opt);\n  }\n\n  if (isRow || isCol) {\n    setter(def, ['properties', 'ticks'], {\n      opacity: {value: 0}\n    });\n    setter(def, ['properties', 'majorTicks'], {\n      opacity: {value: 0}\n    });\n    setter(def, ['properties', 'axis'], {\n      opacity: {value: 0}\n    });\n  }\n\n  if (isCol) {\n    def.orient = 'top';\n  }\n\n  if (isRow) {\n    def.offset = rowOffset;\n  }\n\n  if (name == X) {\n    if (encoding.has(Y) && encoding.isOrdinalScale(Y) && encoding.cardinality(Y, stats) > 30) {\n      def.orient = 'top';\n    }\n\n    if (encoding.isDimension(X) || encoding.isType(X, T)) {\n      setter(def, ['properties','labels'], {\n        angle: {value: 270},\n        align: {value: 'right'},\n        baseline: {value: 'middle'}\n      });\n    } else { // Q\n      def.ticks = 5;\n    }\n  }\n\n  def = axis_labels(def, name, encoding, layout, opt);\n\n  return def;\n};\n\nfunction axis_title(def, name, encoding, layout, opt) {\n  // jshint unused:false\n\n  var maxlength = null,\n    fieldTitle = encoding.fieldTitle(name);\n  if (name===X) {\n    maxlength = layout.cellWidth / encoding.config('characterWidth');\n  } else if (name === Y) {\n    maxlength = layout.cellHeight / encoding.config('characterWidth');\n  }\n\n  def.title = maxlength ? util.truncate(fieldTitle, maxlength) : fieldTitle;\n\n  if (name === ROW) {\n    setter(def, ['properties','title'], {\n      angle: {value: 0},\n      align: {value: 'right'},\n      baseline: {value: 'middle'},\n      dy: {value: (-layout.height/2) -20}\n    });\n  }\n\n  def.titleOffset = axisTitleOffset(encoding, layout, name);\n  return def;\n}\n\nfunction axis_labels(def, name, encoding, layout, opt) {\n  // jshint unused:false\n\n  var fn;\n  // add custom label for time type\n  if (encoding.isType(name, T) && (fn = encoding.fn(name)) && (time.hasScale(fn))) {\n    setter(def, ['properties','labels','text','scale'], 'time-'+ fn);\n  }\n\n  var textTemplatePath = ['properties','labels','text','template'];\n  if (encoding.axis(name).format) {\n    def.format = encoding.axis(name).format;\n  } else if (encoding.isType(name, Q)) {\n    setter(def, textTemplatePath, '{{data | number:\\'.3s\\'}}');\n  } else if (encoding.isType(name, T)) {\n    if (!encoding.fn(name)) {\n      setter(def, textTemplatePath, '{{data | time:\\'%Y-%m-%d\\'}}');\n    } else if (encoding.fn(name) === 'year') {\n      setter(def, textTemplatePath, '{{data | number:\\'d\\'}}');\n    }\n  } else if (encoding.isType(name, [N, O]) && encoding.axis(name).maxLabelLength) {\n    setter(def, textTemplatePath, '{{data | truncate:' + encoding.axis(name).maxLabelLength + '}}');\n  }\n\n  return def;\n}\n\nfunction axisTitleOffset(encoding, layout, name) {\n  var value = encoding.axis(name).titleOffset;\n  if (value) {\n    return value;\n  }\n  switch (name) {\n    case ROW: return 0;\n    case COL: return 35;\n  }\n  return getter(layout, [name, 'axisTitleOffset']);\n}\n\n},{\"../globals\":32,\"../util\":40,\"./time\":27}],13:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nmodule.exports = binning;\n\nfunction binning(spec, encoding, opt) {\n  opt = opt || {};\n\n  if (!spec.transform) spec.transform = [];\n\n  encoding.forEach(function(field, encType) {\n    if (encoding.bin(encType)) {\n      spec.transform.push({\n        type: 'bin',\n        field: 'data.' + field.name,\n        output: 'data.bin_' + field.name,\n        maxbins: encoding.bin(encType).maxbins\n      });\n    }\n  });\n}\n\n},{\"../globals\":32}],14:[function(require,module,exports){\n'use strict';\n\nvar summary = module.exports = require('datalib/src/stats').summary;\n\nrequire('../globals');\n\nmodule.exports = compile;\n\nvar Encoding = require('../Encoding'),\n  axis = compile.axis = require('./axis'),\n  filter = compile.filter = require('./filter'),\n  legend = compile.legend = require('./legend'),\n  marks = compile.marks = require('./marks'),\n  scale = compile.scale = require('./scale');\n\ncompile.aggregate = require('./aggregate');\ncompile.bin = require('./bin');\ncompile.facet = require('./facet');\ncompile.group = require('./group');\ncompile.layout = require('./layout');\ncompile.sort = require('./sort');\ncompile.stack = require('./stack');\ncompile.style = require('./style');\ncompile.subfacet = require('./subfacet');\ncompile.template = require('./template');\ncompile.time = require('./time');\n\nfunction compile(spec, stats, theme) {\n  return compile.encoding(Encoding.fromSpec(spec, theme), stats);\n}\n\ncompile.shorthand = function (shorthand, stats, config, theme) {\n  return compile.encoding(Encoding.fromShorthand(shorthand, config, theme), stats);\n};\n\ncompile.encoding = function (encoding, stats) {\n  // no need to pass stats if you pass in the data\n  if (!stats && encoding.hasValues()) {\n    stats = summary(encoding.data('values')).reduce(function(s, p) {\n      s[p.field] = p;\n      return s;\n    }, {});\n  }\n\n  var layout = compile.layout(encoding, stats),\n    style = compile.style(encoding, stats),\n    spec = compile.template(encoding, layout, stats),\n    group = spec.marks[0],\n    mark = marks[encoding.marktype()],\n    mdefs = marks.def(mark, encoding, layout, style),\n    mdef = mdefs[0];  // TODO: remove this dirty hack by refactoring the whole flow\n\n  filter.addFilters(spec, encoding);\n  var sorting = compile.sort(spec, encoding, stats);\n\n  var hasRow = encoding.has(ROW), hasCol = encoding.has(COL);\n\n  for (var i = 0; i < mdefs.length; i++) {\n    group.marks.push(mdefs[i]);\n  }\n\n  compile.bin(spec.data[1], encoding);\n\n  var lineType = marks[encoding.marktype()].line;\n\n  spec = compile.time(spec, encoding);\n\n  // handle subfacets\n  var aggResult = compile.aggregate(spec, encoding),\n    details = aggResult.details,\n    hasDetails = details && details.length > 0,\n    stack = hasDetails && compile.stack(spec, encoding, mdef, aggResult.facets);\n\n  if (hasDetails && (stack || lineType)) {\n    //subfacet to group stack / line together in one group\n    compile.subfacet(group, mdef, details, stack, encoding);\n  }\n\n  // auto-sort line/area values\n  //TODO(kanitw): have some config to turn off auto-sort for line (for line chart that encodes temporal information)\n  if (lineType) {\n    var f = (encoding.isMeasure(X) && encoding.isDimension(Y)) ? Y : X;\n    if (!mdef.from) mdef.from = {};\n    // TODO: why - ?\n    mdef.from.transform = [{type: 'sort', by: '-' + encoding.field(f)}];\n  }\n\n  // Small Multiples\n  if (hasRow || hasCol) {\n    spec = compile.facet(group, encoding, layout, style, sorting, spec, mdef, stack, stats);\n    spec.legends = legend.defs(encoding);\n  } else {\n    group.scales = scale.defs(scale.names(mdef.properties.update), encoding, layout, stats, style, sorting, {stack: stack});\n    group.axes = axis.defs(axis.names(mdef.properties.update), encoding, layout, stats);\n    group.legends = legend.defs(encoding);\n  }\n\n  filter.filterLessThanZero(spec, encoding);\n\n  return spec;\n};\n\n\n},{\"../Encoding\":10,\"../globals\":32,\"./aggregate\":11,\"./axis\":12,\"./bin\":13,\"./facet\":15,\"./filter\":16,\"./group\":17,\"./layout\":18,\"./legend\":19,\"./marks\":20,\"./scale\":21,\"./sort\":22,\"./stack\":23,\"./style\":24,\"./subfacet\":25,\"./template\":26,\"./time\":27,\"datalib/src/stats\":7}],15:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar util = require('../util');\n\nvar axis = require('./axis'),\n  groupdef = require('./group').def,\n  scale = require('./scale');\n\nmodule.exports = faceting;\n\nfunction faceting(group, encoding, layout, style, sorting, spec, mdef, stack, stats) {\n  var enter = group.properties.enter;\n  var facetKeys = [], cellAxes = [], from, axesGrp;\n\n  var hasRow = encoding.has(ROW), hasCol = encoding.has(COL);\n\n  enter.fill = {value: encoding.config('cellBackgroundColor')};\n\n  //move \"from\" to cell level and add facet transform\n  group.from = {data: group.marks[0].from.data};\n\n  // Hack, this needs to be refactored\n  for (var i = 0; i < group.marks.length; i++) {\n    var mark = group.marks[i];\n    if (mark.from.transform) {\n      delete mark.from.data; //need to keep transform for subfacetting case\n    } else {\n      delete mark.from;\n    }\n  }\n\n  if (hasRow) {\n    if (!encoding.isDimension(ROW)) {\n      util.error('Row encoding should be ordinal.');\n    }\n    enter.y = {scale: ROW, field: 'keys.' + facetKeys.length};\n    enter.height = {'value': layout.cellHeight}; // HACK\n\n    facetKeys.push(encoding.field(ROW));\n\n    if (hasCol) {\n      from = util.duplicate(group.from);\n      from.transform = from.transform || [];\n      from.transform.unshift({type: 'facet', keys: [encoding.field(COL)]});\n    }\n\n    axesGrp = groupdef('x-axes', {\n        axes: encoding.has(X) ? axis.defs(['x'], encoding, layout, stats) : undefined,\n        x: hasCol ? {scale: COL, field: 'keys.0'} : {value: 0},\n        width: hasCol && {'value': layout.cellWidth}, //HACK?\n        from: from\n      });\n\n    spec.marks.unshift(axesGrp); // need to prepend so it appears under the plots\n    (spec.axes = spec.axes || []);\n    spec.axes.push.apply(spec.axes, axis.defs(['row'], encoding, layout, stats));\n  } else { // doesn't have row\n    if (encoding.has(X)) {\n      //keep x axis in the cell\n      cellAxes.push.apply(cellAxes, axis.defs(['x'], encoding, layout, stats));\n    }\n  }\n\n  if (hasCol) {\n    if (!encoding.isDimension(COL)) {\n      util.error('Col encoding should be ordinal.');\n    }\n    enter.x = {scale: COL, field: 'keys.' + facetKeys.length};\n    enter.width = {'value': layout.cellWidth}; // HACK\n\n    facetKeys.push(encoding.field(COL));\n\n    if (hasRow) {\n      from = util.duplicate(group.from);\n      from.transform = from.transform || [];\n      from.transform.unshift({type: 'facet', keys: [encoding.field(ROW)]});\n    }\n\n    axesGrp = groupdef('y-axes', {\n      axes: encoding.has(Y) ? axis.defs(['y'], encoding, layout, stats) : undefined,\n      y: hasRow && {scale: ROW, field: 'keys.0'},\n      x: hasRow && {value: 0},\n      height: hasRow && {'value': layout.cellHeight}, //HACK?\n      from: from\n    });\n\n    spec.marks.unshift(axesGrp); // need to prepend so it appears under the plots\n    (spec.axes = spec.axes || []);\n    spec.axes.push.apply(spec.axes, axis.defs(['col'], encoding, layout, stats));\n  } else { // doesn't have col\n    if (encoding.has(Y)) {\n      cellAxes.push.apply(cellAxes, axis.defs(['y'], encoding, layout, stats));\n    }\n  }\n\n  // assuming equal cellWidth here\n  // TODO: support heterogenous cellWidth (maybe by using multiple scales?)\n  spec.scales = (spec.scales || []).concat(scale.defs(\n    scale.names(enter).concat(scale.names(mdef.properties.update)),\n    encoding,\n    layout,\n    stats,\n    style,\n    sorting,\n    {stack: stack, facet: true}\n  )); // row/col scales + cell scales\n\n  if (cellAxes.length > 0) {\n    group.axes = cellAxes;\n  }\n\n  // add facet transform\n  var trans = (group.from.transform || (group.from.transform = []));\n  trans.unshift({type: 'facet', keys: facetKeys});\n\n  return spec;\n}\n\n},{\"../globals\":32,\"../util\":40,\"./axis\":12,\"./group\":17,\"./scale\":21}],16:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar filter = module.exports = {};\n\nvar BINARY = {\n  '>':  true,\n  '>=': true,\n  '=':  true,\n  '!=': true,\n  '<':  true,\n  '<=': true\n};\n\nfilter.addFilters = function(spec, encoding) {\n  var filters = encoding.filter(),\n    data = spec.data[0];  // apply filters to raw data before aggregation\n\n  if (!data.transform)\n    data.transform = [];\n\n  // add custom filters\n  for (var i in filters) {\n    var filter = filters[i];\n\n    var condition = '';\n    var operator = filter.operator;\n    var operands = filter.operands;\n\n    if (BINARY[operator]) {\n      // expects a field and a value\n      if (operator === '=') {\n        operator = '==';\n      }\n\n      var op1 = operands[0];\n      var op2 = operands[1];\n      condition = 'd.data.' + op1 + operator + op2;\n    } else if (operator === 'notNull') {\n      // expects a number of fields\n      for (var j in operands) {\n        condition += 'd.data.' + operands[j] + '!==null';\n        if (j < operands.length - 1) {\n          condition += ' && ';\n        }\n      }\n    } else {\n      console.warn('Unsupported operator: ', operator);\n    }\n\n    data.transform.push({\n      type: 'filter',\n      test: condition\n    });\n  }\n};\n\n// remove less than 0 values if we use log function\nfilter.filterLessThanZero = function(spec, encoding) {\n  encoding.forEach(function(field, encType) {\n    if (encoding.scale(encType).type === 'log') {\n      spec.data[1].transform.push({\n        type: 'filter',\n        test: 'd.' + encoding.field(encType) + '>0'\n      });\n    }\n  });\n};\n\n\n},{\"../globals\":32}],17:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  def: groupdef\n};\n\nfunction groupdef(name, opt) {\n  opt = opt || {};\n  return {\n    _name: name || undefined,\n    type: 'group',\n    from: opt.from,\n    properties: {\n      enter: {\n        x: opt.x || undefined,\n        y: opt.y || undefined,\n        width: opt.width || {group: 'width'},\n        height: opt.height || {group: 'height'}\n      }\n    },\n    scales: opt.scales || undefined,\n    axes: opt.axes || undefined,\n    marks: opt.marks || []\n  };\n}\n\n},{}],18:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar util = require('../util'),\n  setter = util.setter;\n\nmodule.exports = vllayout;\n\nfunction vllayout(encoding, stats) {\n  var layout = box(encoding, stats);\n  layout = offset(encoding, stats, layout);\n  return layout;\n}\n\n/*\n  HACK to set chart size\n  NOTE: this fails for plots driven by derived values (e.g., aggregates)\n  One solution is to update Vega to support auto-sizing\n  In the meantime, auto-padding (mostly) does the trick\n */\nfunction box(encoding, stats) {\n  var hasRow = encoding.has(ROW),\n      hasCol = encoding.has(COL),\n      hasX = encoding.has(X),\n      hasY = encoding.has(Y),\n      marktype = encoding.marktype();\n\n  // FIXME/HACK we need to take filter into account\n  var xCardinality = hasX && encoding.isDimension(X) ? encoding.cardinality(X, stats) : 1,\n    yCardinality = hasY && encoding.isDimension(Y) ? encoding.cardinality(Y, stats) : 1;\n\n  var useSmallBand = xCardinality > encoding.config('largeBandMaxCardinality') ||\n    yCardinality > encoding.config('largeBandMaxCardinality');\n\n  var cellWidth, cellHeight, cellPadding = encoding.config('cellPadding');\n\n  // set cellWidth\n  if (hasX) {\n    if (encoding.isOrdinalScale(X)) {\n      // for ordinal, hasCol or not doesn't matter -- we scale based on cardinality\n      cellWidth = (xCardinality + encoding.band(X).padding) * encoding.bandSize(X, useSmallBand);\n    } else {\n      cellWidth = hasCol || hasRow ? encoding.enc(COL).width :  encoding.config('singleWidth');\n    }\n  } else {\n    if (marktype === TEXT) {\n      cellWidth = encoding.config('textCellWidth');\n    } else {\n      cellWidth = encoding.bandSize(X);\n    }\n  }\n\n  // set cellHeight\n  if (hasY) {\n    if (encoding.isOrdinalScale(Y)) {\n      // for ordinal, hasCol or not doesn't matter -- we scale based on cardinality\n      cellHeight = (yCardinality + encoding.band(Y).padding) * encoding.bandSize(Y, useSmallBand);\n    } else {\n      cellHeight = hasCol || hasRow ? encoding.enc(ROW).height :  encoding.config('singleHeight');\n    }\n  } else {\n    cellHeight = encoding.bandSize(Y);\n  }\n\n  // Cell bands use rangeBands(). There are n-1 padding.  Outerpadding = 0 for cells\n\n  var width = cellWidth, height = cellHeight;\n  if (hasCol) {\n    var colCardinality = encoding.cardinality(COL, stats);\n    width = cellWidth * ((1 + cellPadding) * (colCardinality - 1) + 1);\n  }\n  if (hasRow) {\n    var rowCardinality =  encoding.cardinality(ROW, stats);\n    height = cellHeight * ((1 + cellPadding) * (rowCardinality - 1) + 1);\n  }\n\n  return {\n    // width and height of the whole cell\n    cellWidth: cellWidth,\n    cellHeight: cellHeight,\n    cellPadding: cellPadding,\n    // width and height of the chart\n    width: width,\n    height: height,\n    // information about x and y, such as band size\n    x: {useSmallBand: useSmallBand},\n    y: {useSmallBand: useSmallBand}\n  };\n}\n\nfunction getMaxLength(encoding, stats, et) {\n  // FIXME determine constant for Q and T in a nicer way\n  return encoding.isType(et, Q) ? 20 :\n    encoding.isType(et, T) ? 20 :\n    stats[encoding.fieldName(et)].max;\n}\n\nfunction offset(encoding, stats, layout) {\n  [X, Y].forEach(function (x) {\n    var maxLength;\n    if (encoding.isDimension(x) || encoding.isType(x, T)) {\n      maxLength =  getMaxLength(encoding, stats, x);\n    } else if (encoding.aggregate(x) === 'count') {\n      //assign default value for count as it won't have stats\n      maxLength =  3;\n    } else if (encoding.isType(x, Q)) {\n      if (x===X) {\n        maxLength = 3;\n      } else { // Y\n        //assume that default formating is always shorter than 7\n        maxLength = Math.min(getMaxLength(encoding, stats, x), 7);\n      }\n    }\n    setter(layout,[x, 'axisTitleOffset'], encoding.config('characterWidth') *  maxLength + 20);\n  });\n  return layout;\n}\n\n},{\"../globals\":32,\"../util\":40}],19:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar time = require('./time');\n\nvar legend = module.exports = {};\n\nlegend.defs = function(encoding) {\n  var defs = [];\n  // TODO: support alpha\n\n  if (encoding.has(COLOR) && encoding.legend(COLOR)) {\n    defs.push(legend.def(COLOR, encoding, {\n      fill: COLOR,\n      orient: 'right'\n    }));\n  }\n\n  if (encoding.has(SIZE) && encoding.legend(SIZE)) {\n    defs.push(legend.def(SIZE, encoding, {\n      size: SIZE,\n      orient: defs.length === 1 ? 'left' : 'right'\n    }));\n  }\n\n  if (encoding.has(SHAPE) && encoding.legend(SHAPE)) {\n    if (defs.length === 2) {\n      // TODO: fix this\n      console.error('Vega-lite currently only supports two legends');\n      return defs;\n    }\n    defs.push(legend.def(SHAPE, encoding, {\n      shape: SHAPE,\n      orient: defs.length === 1 ? 'left' : 'right'\n    }));\n  }\n\n  return defs;\n};\n\nlegend.def = function(name, encoding, props) {\n  var def = props, fn;\n\n  def.title = encoding.fieldTitle(name);\n\n  if (encoding.isType(name, T) && (fn = encoding.fn(name)) &&\n    time.hasScale(fn)) {\n    var properties = def.properties = def.properties || {},\n      labels = properties.labels = properties.labels || {},\n      text = labels.text = labels.text || {};\n\n    text.scale = 'time-'+ fn;\n  }\n\n  return def;\n};\n\n},{\"../globals\":32,\"./time\":27}],20:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar marks = module.exports = {};\n\nmarks.def = function(mark, encoding, layout, style) {\n  var defs = [];\n\n  // to add a background to text, we need to add it before the text\n  if (encoding.marktype() === TEXT && encoding.has(COLOR)) {\n    var bg = {\n      x: {value: 0},\n      y: {value: 0},\n      x2: {value: layout.cellWidth},\n      y2: {value: layout.cellHeight},\n      fill: {scale: COLOR, field: encoding.field(COLOR)}\n    };\n    defs.push({\n      type: 'rect',\n      from: {data: TABLE},\n      properties: {enter: bg, update: bg}\n    });\n  }\n\n  // add the mark def for the main thing\n  var p = mark.prop(encoding, layout, style);\n  defs.push({\n    type: mark.type,\n    from: {data: TABLE},\n    properties: {enter: p, update: p}\n  });\n\n  return defs;\n};\n\nmarks.bar = {\n  type: 'rect',\n  stack: true,\n  prop: bar_props,\n  requiredEncoding: ['x', 'y'],\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, size: 1, color: 1, alpha: 1}\n};\n\nmarks.line = {\n  type: 'line',\n  line: true,\n  prop: line_props,\n  requiredEncoding: ['x', 'y'],\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, color: 1, alpha: 1, detail:1}\n};\n\nmarks.area = {\n  type: 'area',\n  stack: true,\n  line: true,\n  requiredEncoding: ['x', 'y'],\n  prop: area_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, color: 1, alpha: 1}\n};\n\nmarks.tick = {\n  type: 'rect',\n  prop: tick_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, color: 1, alpha: 1, detail: 1}\n};\n\nmarks.circle = {\n  type: 'symbol',\n  prop: filled_point_props('circle'),\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, size: 1, color: 1, alpha: 1, detail: 1}\n};\n\nmarks.square = {\n  type: 'symbol',\n  prop: filled_point_props('square'),\n  supportedEncoding: marks.circle.supportedEncoding\n};\n\nmarks.point = {\n  type: 'symbol',\n  prop: point_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, size: 1, color: 1, alpha: 1, shape: 1, detail: 1}\n};\n\nmarks.text = {\n  type: 'text',\n  prop: text_props,\n  requiredEncoding: ['text'],\n  supportedEncoding: {row: 1, col: 1, size: 1, color: 1, alpha: 1, text: 1}\n};\n\nfunction bar_props(e, layout, style) {\n  // jshint unused:false\n\n  var p = {};\n\n  // x's and width\n  if (e.isMeasure(X)) {\n    p.x = {scale: X, field: e.field(X)};\n    if (!e.has(Y) || e.isDimension(Y)) {\n      p.x2 = {value: 0};\n    }\n  } else {\n    if (e.has(X)) { // is ordinal\n       p.xc = {scale: X, field: e.field(X)};\n    } else {\n       p.x = {value: 0, offset: e.config('singleBarOffset')};\n    }\n  }\n\n  // width\n  if (!p.x2) {\n    if (!e.has(X) || e.isOrdinalScale(X)) { // no X or X is ordinal\n      if (e.has(SIZE)) {\n        p.width = {scale: SIZE, field: e.field(SIZE)};\n      } else {\n        p.width = {\n          value: e.bandSize(X, layout.x.useSmallBand),\n          offset: -1\n        };\n      }\n    } else { // X is Quant or Time Scale\n      p.width = {value: 2};\n    }\n  }\n\n  // y's & height\n  if (e.isMeasure(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n    p.y2 = {group: 'height'};\n  } else {\n    if (e.has(Y)) { // is ordinal\n      p.yc = {scale: Y, field: e.field(Y)};\n    } else {\n      p.y2 = {group: 'height', offset: -e.config('singleBarOffset')};\n    }\n\n    if (e.has(SIZE)) {\n      p.height = {scale: SIZE, field: e.field(SIZE)};\n    } else {\n      p.height = {\n        value: e.bandSize(Y, layout.y.useSmallBand),\n        offset: -1\n      };\n    }\n  }\n\n\n\n  // fill\n  if (e.has(COLOR)) {\n    p.fill = {scale: COLOR, field: e.field(COLOR)};\n  } else {\n    p.fill = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  }\n\n  return p;\n}\n\nfunction point_props(e, layout, style) {\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n  } else if (!e.has(X)) {\n    p.x = {value: e.bandSize(X, layout.x.useSmallBand) / 2};\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n  } else if (!e.has(Y)) {\n    p.y = {value: e.bandSize(Y, layout.y.useSmallBand) / 2};\n  }\n\n  // size\n  if (e.has(SIZE)) {\n    p.size = {scale: SIZE, field: e.field(SIZE)};\n  } else if (!e.has(SIZE)) {\n    p.size = {value: e.value(SIZE)};\n  }\n\n  // shape\n  if (e.has(SHAPE)) {\n    p.shape = {scale: SHAPE, field: e.field(SHAPE)};\n  } else if (!e.has(SHAPE)) {\n    p.shape = {value: e.value(SHAPE)};\n  }\n\n  // stroke\n  if (e.has(COLOR)) {\n    p.stroke = {scale: COLOR, field: e.field(COLOR)};\n  } else if (!e.has(COLOR)) {\n    p.stroke = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  } else if (!e.has(COLOR)) {\n    p.opacity = {value: style.opacity};\n  }\n\n  p.strokeWidth = {value: e.config('strokeWidth')};\n\n  return p;\n}\n\nfunction line_props(e,layout, style) {\n  // jshint unused:false\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n  } else if (!e.has(X)) {\n    p.x = {value: 0};\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n  } else if (!e.has(Y)) {\n    p.y = {group: 'height'};\n  }\n\n  // stroke\n  if (e.has(COLOR)) {\n    p.stroke = {scale: COLOR, field: e.field(COLOR)};\n  } else if (!e.has(COLOR)) {\n    p.stroke = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  }\n\n  p.strokeWidth = {value: e.config('strokeWidth')};\n\n  return p;\n}\n\nfunction area_props(e, layout, style) {\n  // jshint unused:false\n  var p = {};\n\n  // x\n  if (e.isMeasure(X)) {\n    p.x = {scale: X, field: e.field(X)};\n    if (e.isDimension(Y)) {\n      p.x2 = {scale: X, value: 0};\n      p.orient = {value: 'horizontal'};\n    }\n  } else if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n  } else {\n    p.x = {value: 0};\n  }\n\n  // y\n  if (e.isMeasure(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n    p.y2 = {scale: Y, value: 0};\n  } else if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n  } else {\n    p.y = {group: 'height'};\n  }\n\n  // stroke\n  if (e.has(COLOR)) {\n    p.fill = {scale: COLOR, field: e.field(COLOR)};\n  } else if (!e.has(COLOR)) {\n    p.fill = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  }\n\n  return p;\n}\n\nfunction tick_props(e, layout, style) {\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n    if (e.isDimension(X)) {\n      p.x.offset = -e.bandSize(X, layout.x.useSmallBand) / 3;\n    }\n  } else if (!e.has(X)) {\n    p.x = {value: 0};\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n    if (e.isDimension(Y)) {\n      p.y.offset = -e.bandSize(Y, layout.y.useSmallBand) / 3;\n    }\n  } else if (!e.has(Y)) {\n    p.y = {value: 0};\n  }\n\n  // width\n  if (!e.has(X) || e.isDimension(X)) {\n    p.width = {value: e.bandSize(X, layout.y.useSmallBand) / 1.5};\n  } else {\n    p.width = {value: 1};\n  }\n\n  // height\n  if (!e.has(Y) || e.isDimension(Y)) {\n    p.height = {value: e.bandSize(Y, layout.y.useSmallBand) / 1.5};\n  } else {\n    p.height = {value: 1};\n  }\n\n  // fill\n  if (e.has(COLOR)) {\n    p.fill = {scale: COLOR, field: e.field(COLOR)};\n  } else {\n    p.fill = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  } else if (!e.has(COLOR)) {\n    p.opacity = {value: style.opacity};\n  }\n\n  return p;\n}\n\nfunction filled_point_props(shape) {\n  return function(e, layout, style) {\n    var p = {};\n\n    // x\n    if (e.has(X)) {\n      p.x = {scale: X, field: e.field(X)};\n    } else if (!e.has(X)) {\n      p.x = {value: e.bandSize(X, layout.x.useSmallBand) / 2};\n    }\n\n    // y\n    if (e.has(Y)) {\n      p.y = {scale: Y, field: e.field(Y)};\n    } else if (!e.has(Y)) {\n      p.y = {value: e.bandSize(Y, layout.y.useSmallBand) / 2};\n    }\n\n    // size\n    if (e.has(SIZE)) {\n      p.size = {scale: SIZE, field: e.field(SIZE)};\n    } else if (!e.has(X)) {\n      p.size = {value: e.value(SIZE)};\n    }\n\n    // shape\n    p.shape = {value: shape};\n\n    // fill\n    if (e.has(COLOR)) {\n      p.fill = {scale: COLOR, field: e.field(COLOR)};\n    } else if (!e.has(COLOR)) {\n      p.fill = {value: e.value(COLOR)};\n    }\n\n    // alpha\n    if (e.has(ALPHA)) {\n      p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n    } else if (e.value(ALPHA) !== undefined) {\n      p.opacity = {value: e.value(ALPHA)};\n    } else if (!e.has(COLOR)) {\n      p.opacity = {value: style.opacity};\n    }\n\n    return p;\n  };\n}\n\nfunction text_props(e, layout, style) {\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n  } else if (!e.has(X)) {\n    if (e.has(TEXT) && e.isType(TEXT, Q)) {\n      p.x = {value: layout.cellWidth-5};\n    } else {\n      p.x = {value: e.bandSize(X, layout.x.useSmallBand) / 2};\n    }\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n  } else if (!e.has(Y)) {\n    p.y = {value: e.bandSize(Y, layout.y.useSmallBand) / 2};\n  }\n\n  // size\n  if (e.has(SIZE)) {\n    p.fontSize = {scale: SIZE, field: e.field(SIZE)};\n  } else if (!e.has(SIZE)) {\n    p.fontSize = {value: e.font('size')};\n  }\n\n  // fill\n  // color should be set to background\n  p.fill = {value: 'black'};\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  } else {\n    p.opacity = {value: style.opacity};\n  }\n\n  // text\n  if (e.has(TEXT)) {\n    if (e.isType(TEXT, Q)) {\n      p.text = {template: '{{' + e.field(TEXT) + ' | number:\\'.3s\\'}}'};\n      p.align = {value: 'right'};\n    } else {\n      p.text = {field: e.field(TEXT)};\n    }\n  } else {\n    p.text = {value: 'Abc'};\n  }\n\n  p.font = {value: e.font('family')};\n  p.fontWeight = {value: e.font('weight')};\n  p.fontStyle = {value: e.font('style')};\n  p.baseline = {value: e.text('baseline')};\n\n  return p;\n}\n\n},{\"../globals\":32}],21:[function(require,module,exports){\n'use strict';\nrequire('../globals');\nvar util = require('../util'),\n  time = require('./time'),\n  colorbrewer = require('../lib/colorbrewer/colorbrewer'),\n  interpolateLab = require('../lib/d3-color/interpolate-lab');\n\nvar scale = module.exports = {};\n\nscale.names = function(props) {\n  return util.keys(util.keys(props).reduce(function(a, x) {\n    if (props[x] && props[x].scale) a[props[x].scale] = 1;\n    return a;\n  }, {}));\n};\n\nscale.defs = function(names, encoding, layout, stats, style, sorting, opt) {\n  opt = opt || {};\n\n  return names.reduce(function(a, name) {\n    var s = {\n      name: name,\n      type: scale.type(name, encoding),\n      domain: scale_domain(name, encoding, sorting, opt)\n    };\n    if (s.type === 'ordinal' && !encoding.bin(name) && encoding.sort(name).length === 0) {\n      s.sort = true;\n    }\n\n    scale_range(s, encoding, layout, stats, style, opt);\n\n    return (a.push(s), a);\n  }, []);\n};\n\nscale.type = function(name, encoding) {\n\n  switch (encoding.type(name)) {\n    case N: //fall through\n    case O: return 'ordinal';\n    case T:\n      var fn = encoding.fn(name);\n      return (fn && time.scale.type(fn, name)) || 'time';\n    case Q:\n      if (encoding.bin(name)) {\n        return name === COLOR ? 'linear' : 'ordinal';\n      }\n      return encoding.scale(name).type;\n  }\n};\n\nfunction scale_domain(name, encoding, sorting, opt) {\n  if (encoding.isType(name, T)) {\n    var range = time.scale.domain(encoding.fn(name), name);\n    if(range) return range;\n  }\n\n  return name == opt.stack ?\n    {\n      data: STACKED,\n      field: 'data.' + (opt.facet ? 'max_' : '') + 'sum_' + encoding.field(name, true)\n    } :\n    {data: sorting.getDataset(name), field: encoding.field(name)};\n}\n\nfunction scale_range(s, encoding, layout, stats, style, opt) {\n  // jshint unused:false\n  var spec = encoding.scale(s.name);\n  switch (s.name) {\n    case X:\n      if (s.type === 'ordinal') {\n        s.bandWidth = encoding.bandSize(X, layout.x.useSmallBand);\n      } else {\n        s.range = layout.cellWidth ? [0, layout.cellWidth] : 'width';\n\n        if (encoding.isType(s.name,T) && encoding.fn(s.name) === 'year') {\n          s.zero = false;\n        } else {\n          s.zero = spec.zero === undefined ? true : spec.zero;\n        }\n\n        s.reverse = spec.reverse;\n      }\n      s.round = true;\n      if (s.type === 'time') {\n        s.nice = encoding.fn(s.name);\n      }else {\n        s.nice = true;\n      }\n      break;\n    case Y:\n      if (s.type === 'ordinal') {\n        s.bandWidth = encoding.bandSize(Y, layout.y.useSmallBand);\n      } else {\n        s.range = layout.cellHeight ? [layout.cellHeight, 0] : 'height';\n\n        if (encoding.isType(s.name,T) && encoding.fn(s.name) === 'year') {\n          s.zero = false;\n        } else {\n          s.zero = spec.zero === undefined ? true : spec.zero;\n        }\n\n        s.reverse = spec.reverse;\n      }\n\n      s.round = true;\n\n      if (s.type === 'time') {\n        s.nice = encoding.fn(s.name) || encoding.config('timeScaleNice');\n      }else {\n        s.nice = true;\n      }\n      break;\n    case ROW: // support only ordinal\n      s.bandWidth = layout.cellHeight;\n      s.round = true;\n      s.nice = true;\n      break;\n    case COL: // support only ordinal\n      s.bandWidth = layout.cellWidth;\n      s.round = true;\n      s.nice = true;\n      break;\n    case SIZE:\n      if (encoding.is('bar')) {\n        // FIXME this is definitely incorrect\n        // but let's fix it later since bar size is a bad encoding anyway\n        s.range = [3, Math.max(encoding.bandSize(X), encoding.bandSize(Y))];\n      } else if (encoding.is(TEXT)) {\n        s.range = [8, 40];\n      } else { //point\n        var bandSize = Math.min(encoding.bandSize(X), encoding.bandSize(Y)) - 1;\n        s.range = [10, 0.8 * bandSize*bandSize];\n      }\n      s.round = true;\n      s.zero = false;\n      break;\n    case SHAPE:\n      s.range = 'shapes';\n      break;\n    case COLOR:\n      s.range = scale.color(s, encoding, stats);\n      break;\n    case ALPHA:\n      s.range = [0.2, 1.0];\n      break;\n    default:\n      throw new Error('Unknown encoding name: '+ s.name);\n  }\n\n  switch (s.name) {\n    case ROW:\n    case COL:\n      s.padding = encoding.config('cellPadding');\n      s.outerPadding = 0;\n      break;\n    case X:\n    case Y:\n      if (s.type === 'ordinal') { //&& !s.bandWidth\n        s.points = true;\n        s.padding = encoding.band(s.name).padding;\n      }\n  }\n}\n\nscale.color = function(s, encoding, stats) {\n  var range = encoding.scale(COLOR).range,\n    cardinality = encoding.cardinality(COLOR, stats),\n    type = encoding.type(COLOR);\n\n  if (range === undefined) {\n    var ordinalPalette = encoding.config('ordinalPalette');\n    if (s.type === 'ordinal') {\n      if (type === N) {\n        // use categorical color scale\n        if (cardinality <= 10) {\n          range = 'category10-k';\n        } else {\n          range = 'category20';\n        }\n      } else {\n        if (cardinality <= 2) {\n          range = [colorbrewer[ordinalPalette][3][0], colorbrewer[ordinalPalette][3][2]];\n        } else {\n          range = ordinalPalette;\n        }\n      }\n    } else { //time or quantitative\n      var palette = colorbrewer[ordinalPalette][9];\n      range = [palette[0], palette[8]];\n      s.zero = false;\n    }\n  }\n  return scale.color.palette(range, cardinality, type);\n};\n\nscale.color.palette = function(range, cardinality, type) {\n  switch (range) {\n    case 'category10-k':\n      // tableau's category 10, ordered by perceptual kernel study results\n      // https://github.com/uwdata/perceptual-kernels\n      return ['#2ca02c', '#e377c2', '#7f7f7f', '#17becf', '#8c564b', '#d62728', '#bcbd22', '#9467bd', '#ff7f0e', '#1f77b4'];\n\n    // d3/tableau category10/20/20b/20c\n    case 'category10':\n      return ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf'];\n\n    case 'category20':\n      return ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\n\n    case 'category20b':\n      return ['#393b79', '#5254a3', '#6b6ecf', '#9c9ede', '#637939', '#8ca252', '#b5cf6b', '#cedb9c', '#8c6d31', '#bd9e39', '#e7ba52', '#e7cb94', '#843c39', '#ad494a', '#d6616b', '#e7969c', '#7b4173', '#a55194', '#ce6dbd', '#de9ed6'];\n\n    case 'category20c':\n      return ['#3182bd', '#6baed6', '#9ecae1', '#c6dbef', '#e6550d', '#fd8d3c', '#fdae6b', '#fdd0a2', '#31a354', '#74c476', '#a1d99b', '#c7e9c0', '#756bb1', '#9e9ac8', '#bcbddc', '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9'];\n  }\n\n  if (range in colorbrewer) {\n    var palette = colorbrewer[range],\n      ps = 5;\n\n    // if cardinality pre-defined, use it.\n    if (cardinality in palette) return palette[cardinality];\n\n    // if not, use the highest cardinality one for nominal\n    if (type === N) {\n      return palette[Math.max.apply(null, util.keys(palette))];\n    }\n\n    // otherwise, interpolate\n    return scale.color.interpolate(palette[ps][0], palette[ps][ps-1], cardinality);\n  }\n\n  return range;\n};\n\nscale.color.interpolate = function (start, end, cardinality) {\n  var interpolator = interpolateLab(start, end);\n  return util.range(cardinality).map(function(i) { return interpolator(i*1.0/(cardinality-1)); });\n};\n\n\n},{\"../globals\":32,\"../lib/colorbrewer/colorbrewer\":33,\"../lib/d3-color/interpolate-lab\":36,\"../util\":40,\"./time\":27}],22:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nmodule.exports = addSortTransforms;\n\n// adds new transforms that produce sorted fields\nfunction addSortTransforms(spec, encoding, stats, opt) {\n  // jshint unused:false\n\n  var datasetMapping = {};\n  var counter = 0;\n\n  encoding.forEach(function(field, encType) {\n    var sortBy = encoding.sort(encType, stats);\n    if (sortBy.length > 0) {\n      var fields = sortBy.map(function(d) {\n        return {\n          op: d.aggregate,\n          field: 'data.' + d.name\n        };\n      });\n\n      var byClause = sortBy.map(function(d) {\n        var reverse = (d.reverse ? '-' : '');\n        return reverse + 'data.' + (d.aggregate==='count' ? 'count' : (d.aggregate + '_' + d.name));\n      });\n\n      var dataName = 'sorted' + counter++;\n\n      var transforms = [\n        {\n          type: 'aggregate',\n          groupby: ['data.' + field.name],\n          fields: fields\n        },\n        {\n          type: 'sort',\n          by: byClause\n        }\n      ];\n\n      spec.data.push({\n        name: dataName,\n        source: RAW,\n        transform: transforms\n      });\n\n      datasetMapping[encType] = dataName;\n    }\n  });\n\n  return {\n    spec: spec,\n    getDataset: function(encType) {\n      var data = datasetMapping[encType];\n      if (!data) {\n        return TABLE;\n      }\n      return data;\n    }\n  };\n}\n\n},{\"../globals\":32}],23:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar  marks = require('./marks');\n\nmodule.exports = stacking;\n\nfunction stacking(spec, encoding, mdef, facets) {\n  if (!marks[encoding.marktype()].stack) return false;\n\n  // TODO: add || encoding.has(LOD) here once LOD is implemented\n  if (!encoding.has(COLOR)) return false;\n\n  var dim=null, val=null, idx =null,\n    isXMeasure = encoding.isMeasure(X),\n    isYMeasure = encoding.isMeasure(Y);\n\n  if (isXMeasure && !isYMeasure) {\n    dim = Y;\n    val = X;\n    idx = 0;\n  } else if (isYMeasure && !isXMeasure) {\n    dim = X;\n    val = Y;\n    idx = 1;\n  } else {\n    return null; // no stack encoding\n  }\n\n  // add transform to compute sums for scale\n  var stacked = {\n    name: STACKED,\n    source: TABLE,\n    transform: [{\n      type: 'aggregate',\n      groupby: [encoding.field(dim)].concat(facets), // dim and other facets\n      fields: [{op: 'sum', field: encoding.field(val)}] // TODO check if field with aggregate is correct?\n    }]\n  };\n\n  if (facets && facets.length > 0) {\n    stacked.transform.push({ //calculate max for each facet\n      type: 'aggregate',\n      groupby: facets,\n      fields: [{op: 'max', field: 'data.sum_' + encoding.field(val, true)}]\n    });\n  }\n\n  spec.data.push(stacked);\n\n  // add stack transform to mark\n  mdef.from.transform = [{\n    type: 'stack',\n    point: encoding.field(dim),\n    height: encoding.field(val),\n    output: {y1: val, y0: val + '2'}\n  }];\n\n  // TODO: This is super hack-ish -- consolidate into modular mark properties?\n  mdef.properties.update[val] = mdef.properties.enter[val] = {scale: val, field: val};\n  mdef.properties.update[val + '2'] = mdef.properties.enter[val + '2'] = {scale: val, field: val + '2'};\n\n  return val; //return stack encoding\n}\n\n},{\"../globals\":32,\"./marks\":20}],24:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar vlfield = require('../field');\n\nmodule.exports = function(encoding, stats) {\n  return {\n    opacity: estimateOpacity(encoding, stats),\n  };\n};\n\nfunction estimateOpacity(encoding,stats) {\n  if (!stats) {\n    return 1;\n  }\n\n  var numPoints = 0;\n\n  if (encoding.isAggregate()) { // aggregate plot\n    numPoints = 1;\n\n    //  get number of points in each \"cell\"\n    //  by calculating product of cardinality\n    //  for each non faceting and non-ordinal X / Y fields\n    //  note that ordinal x,y are not include since we can\n    //  consider that ordinal x are subdividing the cell into subcells anyway\n    encoding.forEach(function(field, encType) {\n\n      if (encType !== ROW && encType !== COL &&\n          !((encType === X || encType === Y) &&\n          vlfield.isOrdinalScale(field))\n        ) {\n        numPoints *= encoding.cardinality(encType, stats);\n      }\n    });\n\n  } else { // raw plot\n    numPoints = stats.count;\n\n    // small multiples divide number of points\n    var numMultiples = 1;\n    if (encoding.has(ROW)) {\n      numMultiples *= encoding.cardinality(ROW, stats);\n    }\n    if (encoding.has(COL)) {\n      numMultiples *= encoding.cardinality(COL, stats);\n    }\n    numPoints /= numMultiples;\n  }\n\n  var opacity = 0;\n  if (numPoints < 20) {\n    opacity = 1;\n  } else if (numPoints < 200) {\n    opacity = 0.7;\n  } else if (numPoints < 1000 || encoding.is('tick')) {\n    opacity = 0.6;\n  } else {\n    opacity = 0.3;\n  }\n\n  return opacity;\n}\n\n\n},{\"../field\":31,\"../globals\":32}],25:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar groupdef = require('./group').def;\n\nmodule.exports = subfaceting;\n\nfunction subfaceting(group, mdef, details, stack, encoding) {\n  var m = group.marks,\n    g = groupdef('subfacet', {marks: m});\n\n  group.marks = [g];\n  g.from = mdef.from;\n  delete mdef.from;\n\n  //TODO test LOD -- we should support stack / line without color (LOD) field\n  var trans = (g.from.transform || (g.from.transform = []));\n  trans.unshift({type: 'facet', keys: details});\n\n  if (stack && encoding.has(COLOR)) {\n    trans.unshift({type: 'sort', by: encoding.field(COLOR)});\n  }\n}\n\n},{\"../globals\":32,\"./group\":17}],26:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar groupdef = require('./group').def,\n  vlfield = require('../field');\n\nmodule.exports = template;\n\nfunction template(encoding, layout, stats) {\n  // jshint unused:false\n\n  var data = {name: RAW, format: {}},\n    table = {name: TABLE, source: RAW},\n    dataUrl = encoding.data('url'),\n    dataType = encoding.data('formatType'),\n    values = encoding.data('values');\n\n  if (encoding.hasValues()) {\n    data.values = values;\n  } else {\n    data.url = dataUrl;\n    data.format.type = dataType;\n  }\n\n  encoding.forEach(function(field, encType) {\n    var name;\n    if (field.type == T) {\n      data.format.parse = data.format.parse || {};\n      data.format.parse[field.name] = 'date';\n    } else if (field.type == Q) {\n      data.format.parse = data.format.parse || {};\n      if (vlfield.isCount(field)) {\n        name = 'count';\n      } else {\n        name = field.name;\n      }\n      data.format.parse[name] = 'number';\n    }\n  });\n\n  return {\n    width: layout.width,\n    height: layout.height,\n    padding: 'auto',\n    data: [data, table],\n    marks: [groupdef('cell', {\n      width: layout.cellWidth ? {value: layout.cellWidth} : undefined,\n      height: layout.cellHeight ? {value: layout.cellHeight} : undefined\n    })]\n  };\n}\n\n},{\"../field\":31,\"../globals\":32,\"./group\":17}],27:[function(require,module,exports){\n'use strict';\n\nvar util = require('../util');\n\nmodule.exports = time;\n\nfunction time(spec, encoding, opt) {\n  // jshint unused:false\n  var timeFields = {}, timeFn = {};\n\n  // find unique formula transformation and bin function\n  encoding.forEach(function(field, encType) {\n    if (field.type === T && field.fn) {\n      timeFields[encoding.field(encType)] = {\n        field: field,\n        encType: encType\n      };\n      timeFn[field.fn] = true;\n    }\n  });\n\n  // add formula transform\n  var data = spec.data[1],\n    transform = data.transform = data.transform || [];\n\n  for (var f in timeFields) {\n    var tf = timeFields[f];\n    time.transform(transform, encoding, tf.encType, tf.field);\n  }\n\n  // add scales\n  var scales = spec.scales = spec.scales || [];\n  for (var fn in timeFn) {\n    time.scale(scales, fn, encoding);\n  }\n  return spec;\n}\n\ntime.cardinality = function(field, stats, filterNull, type) {\n  var fn = field.fn;\n  switch (fn) {\n    case 'seconds': return 60;\n    case 'minutes': return 60;\n    case 'hours': return 24;\n    case 'day': return 7;\n    case 'date': return 31;\n    case 'month': return 12;\n    case 'year':\n      var stat = stats[field.name],\n        yearstat = stats['year_'+field.name];\n\n      if (!yearstat) { return null; }\n\n      return yearstat.distinct -\n        (stat.nulls > 0 && filterNull[type] ? 1 : 0);\n  }\n\n  return null;\n};\n\nfunction fieldFn(func, field) {\n  return 'utc' + func + '(d.data.'+ field.name +')';\n}\n\n/**\n * @return {String} date binning formula of the given field\n */\ntime.formula = function(field) {\n  return fieldFn(field.fn, field);\n};\n\n/** add formula transforms to data */\ntime.transform = function(transform, encoding, encType, field) {\n  transform.push({\n    type: 'formula',\n    field: encoding.field(encType),\n    expr: time.formula(field)\n  });\n};\n\n/** append custom time scales for axis label */\ntime.scale = function(scales, fn, encoding) {\n  var labelLength = encoding.config('timeScaleLabelLength');\n  // TODO add option for shorter scale / custom range\n  switch (fn) {\n    case 'day':\n      scales.push({\n        name: 'time-'+fn,\n        type: 'ordinal',\n        domain: util.range(0, 7),\n        range: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'].map(\n          function(s) { return s.substr(0, labelLength);}\n        )\n      });\n      break;\n    case 'month':\n      scales.push({\n        name: 'time-'+fn,\n        type: 'ordinal',\n        domain: util.range(0, 12),\n        range: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'].map(\n            function(s) { return s.substr(0, labelLength);}\n          )\n      });\n      break;\n  }\n};\n\ntime.isOrdinalFn = function(fn) {\n  switch (fn) {\n    case 'seconds':\n    case 'minutes':\n    case 'hours':\n    case 'day':\n    case 'date':\n    case 'month':\n      return true;\n  }\n  return false;\n};\n\ntime.scale.type = function(fn, name) {\n  if (name === COLOR) {\n    return 'linear'; // this has order\n  }\n\n  return time.isOrdinalFn(fn) || name === COL || name === ROW ? 'ordinal' : 'linear';\n};\n\ntime.scale.domain = function(fn, name) {\n  var isColor = name === COLOR;\n  switch (fn) {\n    case 'seconds':\n    case 'minutes': return isColor ? [0,59] : util.range(0, 60);\n    case 'hours': return isColor ? [0,23] : util.range(0, 24);\n    case 'day': return isColor ? [0,6] : util.range(0, 7);\n    case 'date': return isColor ? [1,31] : util.range(1, 32);\n    case 'month': return isColor ? [0,11] : util.range(0, 12);\n  }\n  return null;\n};\n\n/** whether a particular time function has custom scale for labels implemented in time.scale */\ntime.hasScale = function(fn) {\n  switch (fn) {\n    case 'day':\n    case 'month':\n      return true;\n  }\n  return false;\n};\n\n\n\n},{\"../util\":40}],28:[function(require,module,exports){\n'use strict';\n\nrequire('./globals');\n\nvar consts = module.exports = {};\n\nconsts.encodingTypes = [X, Y, ROW, COL, SIZE, SHAPE, COLOR, ALPHA, TEXT, DETAIL];\n\nconsts.shorthand = {\n  delim:  '|',\n  assign: '=',\n  type:   ',',\n  func:   '_'\n};\n\n},{\"./globals\":32}],29:[function(require,module,exports){\n'use strict';\n\nrequire('./globals');\n\nvar vldata = module.exports = {};\n\n/** Mapping from datalib's inferred type to Vega-lite's type */\nvldata.types = {\n  'boolean': N,\n  'number': Q,\n  'integer': Q,\n  'date': T,\n  'string': N\n};\n\n\n},{\"./globals\":32}],30:[function(require,module,exports){\n// utility for enc\n\n'use strict';\n\nvar consts = require('./consts'),\n  c = consts.shorthand,\n  vlfield = require('./field'),\n  util = require('./util'),\n  schema = require('./schema/schema'),\n  encTypes = schema.encTypes;\n\nvar vlenc = module.exports = {};\n\nvlenc.countRetinal = function(enc) {\n  var count = 0;\n  if (enc.color) count++;\n  if (enc.alpha) count++;\n  if (enc.size) count++;\n  if (enc.shape) count++;\n  return count;\n};\n\nvlenc.has = function(enc, encType) {\n  var fieldDef = enc && enc[encType];\n  return fieldDef && fieldDef.name;\n};\n\nvlenc.isAggregate = function(enc) {\n  for (var k in enc) {\n    if (vlenc.has(enc, k) && enc[k].aggregate) {\n      return true;\n    }\n  }\n  return false;\n};\n\nvlenc.forEach = function(enc, f) {\n  var i = 0;\n  encTypes.forEach(function(k) {\n    if (vlenc.has(enc, k)) {\n      f(enc[k], k, i++);\n    }\n  });\n};\n\nvlenc.map = function(enc, f) {\n  var arr = [];\n  encTypes.forEach(function(k) {\n    if (vlenc.has(enc, k)) {\n      arr.push(f(enc[k], k, enc));\n    }\n  });\n  return arr;\n};\n\nvlenc.reduce = function(enc, f, init) {\n  var r = init;\n  encTypes.forEach(function(k) {\n    if (vlenc.has(enc, k)) {\n      r = f(r, enc[k], k,  enc);\n    }\n  });\n  return r;\n};\n\n/*\n * return key-value pairs of field name and list of fields of that field name\n */\nvlenc.fields = function(enc) {\n  return vlenc.reduce(enc, function (m, field) {\n    var fieldList = m[field.name] = m[field.name] || [],\n      containsType = fieldList.containsType = fieldList.containsType || {};\n\n    if (fieldList.indexOf(field) === -1) {\n      fieldList.push(field);\n      // augment the array with containsType.Q / O / N / T\n      containsType[field.type] = true;\n    }\n    return m;\n  }, {});\n};\n\nvlenc.shorthand = function(enc) {\n  return vlenc.map(enc, function(field, et) {\n    return et + c.assign + vlfield.shorthand(field);\n  }).join(c.delim);\n};\n\nvlenc.fromShorthand = function(shorthand) {\n  var enc = util.isArray(shorthand) ? shorthand : shorthand.split(c.delim);\n  return enc.reduce(function(m, e) {\n    var split = e.split(c.assign),\n        enctype = split[0].trim(),\n        field = split[1];\n\n    m[enctype] = vlfield.fromShorthand(field);\n    return m;\n  }, {});\n};\n},{\"./consts\":28,\"./field\":31,\"./schema/schema\":38,\"./util\":40}],31:[function(require,module,exports){\n'use strict';\n\n// utility for field\n\nrequire('./globals');\n\nvar consts = require('./consts'),\n  c = consts.shorthand,\n  time = require('./compile/time'),\n  util = require('./util'),\n  schema = require('./schema/schema');\n\nvar vlfield = module.exports = {};\n\nvlfield.shorthand = function(f) {\n  var c = consts.shorthand;\n  return (f.aggregate ? f.aggregate + c.func : '') +\n    (f.fn ? f.fn + c.func : '') +\n    (f.bin ? 'bin' + c.func : '') +\n    (f.name || '') + c.type + f.type;\n};\n\nvlfield.shorthands = function(fields, delim) {\n  delim = delim || c.delim;\n  return fields.map(vlfield.shorthand).join(delim);\n};\n\nvlfield.fromShorthand = function(shorthand) {\n  var split = shorthand.split(c.type), i;\n  var o = {\n    name: split[0].trim(),\n    type: split[1].trim()\n  };\n\n  // check aggregate type\n  for (i in schema.aggregate.enum) {\n    var a = schema.aggregate.enum[i];\n    if (o.name.indexOf(a + '_') === 0) {\n      o.name = o.name.substr(a.length + 1);\n      if (a == 'count' && o.name.length === 0) o.name = '*';\n      o.aggregate = a;\n      break;\n    }\n  }\n\n  // check time fn\n  for (i in schema.timefns) {\n    var f = schema.timefns[i];\n    if (o.name && o.name.indexOf(f + '_') === 0) {\n      o.name = o.name.substr(o.length + 1);\n      o.fn = f;\n      break;\n    }\n  }\n\n  // check bin\n  if (o.name && o.name.indexOf('bin_') === 0) {\n    o.name = o.name.substr(4);\n    o.bin = true;\n  }\n\n  return o;\n};\n\nvar typeOrder = {\n  N: 0,\n  O: 1,\n  G: 2,\n  T: 3,\n  Q: 4\n};\n\nvlfield.order = {};\n\nvlfield.order.type = function(field) {\n  if (field.aggregate==='count') return 4;\n  return typeOrder[field.type];\n};\n\nvlfield.order.typeThenName = function(field) {\n  return vlfield.order.type(field) + '_' + field.name.toLowerCase();\n};\n\nvlfield.order.original = function() {\n  return 0; // no swap will occur\n};\n\nvlfield.order.name = function(field) {\n  return field.name;\n};\n\nvlfield.order.typeThenCardinality = function(field, stats){\n  return stats[field.name].distinct;\n};\n\nvar isType = vlfield.isType = function (fieldDef, type) {\n  return fieldDef.type === type;\n};\n\nvar isTypes = vlfield.isTypes = function (fieldDef, types) {\n  for (var t=0; t<types.length; t++) {\n    if(fieldDef.type === types[t]) return true;\n  }\n  return false;\n};\n\n/*\n * Most fields that use ordinal scale are dimensions.\n * However, YEAR(T), YEARMONTH(T) use time scale, not ordinal but are dimensions too.\n */\nvlfield.isOrdinalScale = function(field) {\n  return  isTypes(field, [N, O]) || field.bin ||\n    ( isType(field, T) && field.fn && time.isOrdinalFn(field.fn) );\n};\n\nfunction isDimension(field) {\n  return  isTypes(field, [N, O]) || !!field.bin ||\n    ( isType(field, T) && !!field.fn );\n}\n\n/**\n * For encoding, use encoding.isDimension() to avoid confusion.\n * Or use Encoding.isType if your field is from Encoding (and thus have numeric data type).\n * otherwise, do not specific isType so we can use the default isTypeName here.\n */\nvlfield.isDimension = function(field) {\n  return field && isDimension(field);\n};\n\nvlfield.isMeasure = function(field) {\n  return field && !isDimension(field);\n};\n\nvlfield.role = function(field) {\n  return isDimension(field) ? 'dimension' : 'measure';\n};\n\nvlfield.count = function() {\n  return {name:'*', aggregate: 'count', type: Q, displayName: vlfield.count.displayName};\n};\n\nvlfield.count.displayName = 'Number of Records';\n\nvlfield.isCount = function(field) {\n  return field.aggregate === 'count';\n};\n\n/**\n * For encoding, use encoding.cardinality() to avoid confusion.  Or use Encoding.isType if your field is from Encoding (and thus have numeric data type).\n * otherwise, do not specific isType so we can use the default isTypeName here.\n */\nvlfield.cardinality = function(field, stats, filterNull) {\n  // FIXME need to take filter into account\n\n  var stat = stats[field.name];\n  var type = field.type;\n\n  filterNull = filterNull || {};\n\n  if (field.bin) {\n    var bins = util.getbins(stat, field.bin.maxbins || schema.MAXBINS_DEFAULT);\n    return (bins.stop - bins.start) / bins.step;\n  }\n  if (isType(field, T)) {\n    var cardinality = time.cardinality(field, stats, filterNull, type);\n    if(cardinality !== null) return cardinality;\n    //otherwise use calculation below\n  }\n  if (field.aggregate) {\n    return 1;\n  }\n\n  // remove null\n  return stat.distinct -\n    (stat.nulls > 0 && filterNull[type] ? 1 : 0);\n};\n\n},{\"./compile/time\":27,\"./consts\":28,\"./globals\":32,\"./schema/schema\":38,\"./util\":40}],32:[function(require,module,exports){\n(function (global){\n'use strict';\n\n// declare global constant\nvar g = global || window;\n\ng.TABLE = 'table';\ng.RAW = 'raw';\ng.STACKED = 'stacked';\ng.INDEX = 'index';\n\ng.X = 'x';\ng.Y = 'y';\ng.ROW = 'row';\ng.COL = 'col';\ng.SIZE = 'size';\ng.SHAPE = 'shape';\ng.COLOR = 'color';\ng.ALPHA = 'alpha';\ng.TEXT = 'text';\ng.DETAIL = 'detail';\n\ng.N = 'N';\ng.O = 'O';\ng.Q = 'Q';\ng.T = 'T';\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],33:[function(require,module,exports){\n// This product includes color specifications and designs developed by Cynthia Brewer (http://colorbrewer.org/).\nmodule.exports = {YlGn: {\n3: ['#f7fcb9','#addd8e','#31a354'],\n4: ['#ffffcc','#c2e699','#78c679','#238443'],\n5: ['#ffffcc','#c2e699','#78c679','#31a354','#006837'],\n6: ['#ffffcc','#d9f0a3','#addd8e','#78c679','#31a354','#006837'],\n7: ['#ffffcc','#d9f0a3','#addd8e','#78c679','#41ab5d','#238443','#005a32'],\n8: ['#ffffe5','#f7fcb9','#d9f0a3','#addd8e','#78c679','#41ab5d','#238443','#005a32'],\n9: ['#ffffe5','#f7fcb9','#d9f0a3','#addd8e','#78c679','#41ab5d','#238443','#006837','#004529']\n},YlGnBu: {\n3: ['#edf8b1','#7fcdbb','#2c7fb8'],\n4: ['#ffffcc','#a1dab4','#41b6c4','#225ea8'],\n5: ['#ffffcc','#a1dab4','#41b6c4','#2c7fb8','#253494'],\n6: ['#ffffcc','#c7e9b4','#7fcdbb','#41b6c4','#2c7fb8','#253494'],\n7: ['#ffffcc','#c7e9b4','#7fcdbb','#41b6c4','#1d91c0','#225ea8','#0c2c84'],\n8: ['#ffffd9','#edf8b1','#c7e9b4','#7fcdbb','#41b6c4','#1d91c0','#225ea8','#0c2c84'],\n9: ['#ffffd9','#edf8b1','#c7e9b4','#7fcdbb','#41b6c4','#1d91c0','#225ea8','#253494','#081d58']\n},GnBu: {\n3: ['#e0f3db','#a8ddb5','#43a2ca'],\n4: ['#f0f9e8','#bae4bc','#7bccc4','#2b8cbe'],\n5: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac'],\n6: ['#f0f9e8','#ccebc5','#a8ddb5','#7bccc4','#43a2ca','#0868ac'],\n7: ['#f0f9e8','#ccebc5','#a8ddb5','#7bccc4','#4eb3d3','#2b8cbe','#08589e'],\n8: ['#f7fcf0','#e0f3db','#ccebc5','#a8ddb5','#7bccc4','#4eb3d3','#2b8cbe','#08589e'],\n9: ['#f7fcf0','#e0f3db','#ccebc5','#a8ddb5','#7bccc4','#4eb3d3','#2b8cbe','#0868ac','#084081']\n},BuGn: {\n3: ['#e5f5f9','#99d8c9','#2ca25f'],\n4: ['#edf8fb','#b2e2e2','#66c2a4','#238b45'],\n5: ['#edf8fb','#b2e2e2','#66c2a4','#2ca25f','#006d2c'],\n6: ['#edf8fb','#ccece6','#99d8c9','#66c2a4','#2ca25f','#006d2c'],\n7: ['#edf8fb','#ccece6','#99d8c9','#66c2a4','#41ae76','#238b45','#005824'],\n8: ['#f7fcfd','#e5f5f9','#ccece6','#99d8c9','#66c2a4','#41ae76','#238b45','#005824'],\n9: ['#f7fcfd','#e5f5f9','#ccece6','#99d8c9','#66c2a4','#41ae76','#238b45','#006d2c','#00441b']\n},PuBuGn: {\n3: ['#ece2f0','#a6bddb','#1c9099'],\n4: ['#f6eff7','#bdc9e1','#67a9cf','#02818a'],\n5: ['#f6eff7','#bdc9e1','#67a9cf','#1c9099','#016c59'],\n6: ['#f6eff7','#d0d1e6','#a6bddb','#67a9cf','#1c9099','#016c59'],\n7: ['#f6eff7','#d0d1e6','#a6bddb','#67a9cf','#3690c0','#02818a','#016450'],\n8: ['#fff7fb','#ece2f0','#d0d1e6','#a6bddb','#67a9cf','#3690c0','#02818a','#016450'],\n9: ['#fff7fb','#ece2f0','#d0d1e6','#a6bddb','#67a9cf','#3690c0','#02818a','#016c59','#014636']\n},PuBu: {\n3: ['#ece7f2','#a6bddb','#2b8cbe'],\n4: ['#f1eef6','#bdc9e1','#74a9cf','#0570b0'],\n5: ['#f1eef6','#bdc9e1','#74a9cf','#2b8cbe','#045a8d'],\n6: ['#f1eef6','#d0d1e6','#a6bddb','#74a9cf','#2b8cbe','#045a8d'],\n7: ['#f1eef6','#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#034e7b'],\n8: ['#fff7fb','#ece7f2','#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#034e7b'],\n9: ['#fff7fb','#ece7f2','#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']\n},BuPu: {\n3: ['#e0ecf4','#9ebcda','#8856a7'],\n4: ['#edf8fb','#b3cde3','#8c96c6','#88419d'],\n5: ['#edf8fb','#b3cde3','#8c96c6','#8856a7','#810f7c'],\n6: ['#edf8fb','#bfd3e6','#9ebcda','#8c96c6','#8856a7','#810f7c'],\n7: ['#edf8fb','#bfd3e6','#9ebcda','#8c96c6','#8c6bb1','#88419d','#6e016b'],\n8: ['#f7fcfd','#e0ecf4','#bfd3e6','#9ebcda','#8c96c6','#8c6bb1','#88419d','#6e016b'],\n9: ['#f7fcfd','#e0ecf4','#bfd3e6','#9ebcda','#8c96c6','#8c6bb1','#88419d','#810f7c','#4d004b']\n},RdPu: {\n3: ['#fde0dd','#fa9fb5','#c51b8a'],\n4: ['#feebe2','#fbb4b9','#f768a1','#ae017e'],\n5: ['#feebe2','#fbb4b9','#f768a1','#c51b8a','#7a0177'],\n6: ['#feebe2','#fcc5c0','#fa9fb5','#f768a1','#c51b8a','#7a0177'],\n7: ['#feebe2','#fcc5c0','#fa9fb5','#f768a1','#dd3497','#ae017e','#7a0177'],\n8: ['#fff7f3','#fde0dd','#fcc5c0','#fa9fb5','#f768a1','#dd3497','#ae017e','#7a0177'],\n9: ['#fff7f3','#fde0dd','#fcc5c0','#fa9fb5','#f768a1','#dd3497','#ae017e','#7a0177','#49006a']\n},PuRd: {\n3: ['#e7e1ef','#c994c7','#dd1c77'],\n4: ['#f1eef6','#d7b5d8','#df65b0','#ce1256'],\n5: ['#f1eef6','#d7b5d8','#df65b0','#dd1c77','#980043'],\n6: ['#f1eef6','#d4b9da','#c994c7','#df65b0','#dd1c77','#980043'],\n7: ['#f1eef6','#d4b9da','#c994c7','#df65b0','#e7298a','#ce1256','#91003f'],\n8: ['#f7f4f9','#e7e1ef','#d4b9da','#c994c7','#df65b0','#e7298a','#ce1256','#91003f'],\n9: ['#f7f4f9','#e7e1ef','#d4b9da','#c994c7','#df65b0','#e7298a','#ce1256','#980043','#67001f']\n},OrRd: {\n3: ['#fee8c8','#fdbb84','#e34a33'],\n4: ['#fef0d9','#fdcc8a','#fc8d59','#d7301f'],\n5: ['#fef0d9','#fdcc8a','#fc8d59','#e34a33','#b30000'],\n6: ['#fef0d9','#fdd49e','#fdbb84','#fc8d59','#e34a33','#b30000'],\n7: ['#fef0d9','#fdd49e','#fdbb84','#fc8d59','#ef6548','#d7301f','#990000'],\n8: ['#fff7ec','#fee8c8','#fdd49e','#fdbb84','#fc8d59','#ef6548','#d7301f','#990000'],\n9: ['#fff7ec','#fee8c8','#fdd49e','#fdbb84','#fc8d59','#ef6548','#d7301f','#b30000','#7f0000']\n},YlOrRd: {\n3: ['#ffeda0','#feb24c','#f03b20'],\n4: ['#ffffb2','#fecc5c','#fd8d3c','#e31a1c'],\n5: ['#ffffb2','#fecc5c','#fd8d3c','#f03b20','#bd0026'],\n6: ['#ffffb2','#fed976','#feb24c','#fd8d3c','#f03b20','#bd0026'],\n7: ['#ffffb2','#fed976','#feb24c','#fd8d3c','#fc4e2a','#e31a1c','#b10026'],\n8: ['#ffffcc','#ffeda0','#fed976','#feb24c','#fd8d3c','#fc4e2a','#e31a1c','#b10026'],\n9: ['#ffffcc','#ffeda0','#fed976','#feb24c','#fd8d3c','#fc4e2a','#e31a1c','#bd0026','#800026']\n},YlOrBr: {\n3: ['#fff7bc','#fec44f','#d95f0e'],\n4: ['#ffffd4','#fed98e','#fe9929','#cc4c02'],\n5: ['#ffffd4','#fed98e','#fe9929','#d95f0e','#993404'],\n6: ['#ffffd4','#fee391','#fec44f','#fe9929','#d95f0e','#993404'],\n7: ['#ffffd4','#fee391','#fec44f','#fe9929','#ec7014','#cc4c02','#8c2d04'],\n8: ['#ffffe5','#fff7bc','#fee391','#fec44f','#fe9929','#ec7014','#cc4c02','#8c2d04'],\n9: ['#ffffe5','#fff7bc','#fee391','#fec44f','#fe9929','#ec7014','#cc4c02','#993404','#662506']\n},Purples: {\n3: ['#efedf5','#bcbddc','#756bb1'],\n4: ['#f2f0f7','#cbc9e2','#9e9ac8','#6a51a3'],\n5: ['#f2f0f7','#cbc9e2','#9e9ac8','#756bb1','#54278f'],\n6: ['#f2f0f7','#dadaeb','#bcbddc','#9e9ac8','#756bb1','#54278f'],\n7: ['#f2f0f7','#dadaeb','#bcbddc','#9e9ac8','#807dba','#6a51a3','#4a1486'],\n8: ['#fcfbfd','#efedf5','#dadaeb','#bcbddc','#9e9ac8','#807dba','#6a51a3','#4a1486'],\n9: ['#fcfbfd','#efedf5','#dadaeb','#bcbddc','#9e9ac8','#807dba','#6a51a3','#54278f','#3f007d']\n},Blues: {\n3: ['#deebf7','#9ecae1','#3182bd'],\n4: ['#eff3ff','#bdd7e7','#6baed6','#2171b5'],\n5: ['#eff3ff','#bdd7e7','#6baed6','#3182bd','#08519c'],\n6: ['#eff3ff','#c6dbef','#9ecae1','#6baed6','#3182bd','#08519c'],\n7: ['#eff3ff','#c6dbef','#9ecae1','#6baed6','#4292c6','#2171b5','#084594'],\n8: ['#f7fbff','#deebf7','#c6dbef','#9ecae1','#6baed6','#4292c6','#2171b5','#084594'],\n9: ['#f7fbff','#deebf7','#c6dbef','#9ecae1','#6baed6','#4292c6','#2171b5','#08519c','#08306b']\n},Greens: {\n3: ['#e5f5e0','#a1d99b','#31a354'],\n4: ['#edf8e9','#bae4b3','#74c476','#238b45'],\n5: ['#edf8e9','#bae4b3','#74c476','#31a354','#006d2c'],\n6: ['#edf8e9','#c7e9c0','#a1d99b','#74c476','#31a354','#006d2c'],\n7: ['#edf8e9','#c7e9c0','#a1d99b','#74c476','#41ab5d','#238b45','#005a32'],\n8: ['#f7fcf5','#e5f5e0','#c7e9c0','#a1d99b','#74c476','#41ab5d','#238b45','#005a32'],\n9: ['#f7fcf5','#e5f5e0','#c7e9c0','#a1d99b','#74c476','#41ab5d','#238b45','#006d2c','#00441b']\n},Oranges: {\n3: ['#fee6ce','#fdae6b','#e6550d'],\n4: ['#feedde','#fdbe85','#fd8d3c','#d94701'],\n5: ['#feedde','#fdbe85','#fd8d3c','#e6550d','#a63603'],\n6: ['#feedde','#fdd0a2','#fdae6b','#fd8d3c','#e6550d','#a63603'],\n7: ['#feedde','#fdd0a2','#fdae6b','#fd8d3c','#f16913','#d94801','#8c2d04'],\n8: ['#fff5eb','#fee6ce','#fdd0a2','#fdae6b','#fd8d3c','#f16913','#d94801','#8c2d04'],\n9: ['#fff5eb','#fee6ce','#fdd0a2','#fdae6b','#fd8d3c','#f16913','#d94801','#a63603','#7f2704']\n},Reds: {\n3: ['#fee0d2','#fc9272','#de2d26'],\n4: ['#fee5d9','#fcae91','#fb6a4a','#cb181d'],\n5: ['#fee5d9','#fcae91','#fb6a4a','#de2d26','#a50f15'],\n6: ['#fee5d9','#fcbba1','#fc9272','#fb6a4a','#de2d26','#a50f15'],\n7: ['#fee5d9','#fcbba1','#fc9272','#fb6a4a','#ef3b2c','#cb181d','#99000d'],\n8: ['#fff5f0','#fee0d2','#fcbba1','#fc9272','#fb6a4a','#ef3b2c','#cb181d','#99000d'],\n9: ['#fff5f0','#fee0d2','#fcbba1','#fc9272','#fb6a4a','#ef3b2c','#cb181d','#a50f15','#67000d']\n},Greys: {\n3: ['#f0f0f0','#bdbdbd','#636363'],\n4: ['#f7f7f7','#cccccc','#969696','#525252'],\n5: ['#f7f7f7','#cccccc','#969696','#636363','#252525'],\n6: ['#f7f7f7','#d9d9d9','#bdbdbd','#969696','#636363','#252525'],\n7: ['#f7f7f7','#d9d9d9','#bdbdbd','#969696','#737373','#525252','#252525'],\n8: ['#ffffff','#f0f0f0','#d9d9d9','#bdbdbd','#969696','#737373','#525252','#252525'],\n9: ['#ffffff','#f0f0f0','#d9d9d9','#bdbdbd','#969696','#737373','#525252','#252525','#000000']\n},PuOr: {\n3: ['#f1a340','#f7f7f7','#998ec3'],\n4: ['#e66101','#fdb863','#b2abd2','#5e3c99'],\n5: ['#e66101','#fdb863','#f7f7f7','#b2abd2','#5e3c99'],\n6: ['#b35806','#f1a340','#fee0b6','#d8daeb','#998ec3','#542788'],\n7: ['#b35806','#f1a340','#fee0b6','#f7f7f7','#d8daeb','#998ec3','#542788'],\n8: ['#b35806','#e08214','#fdb863','#fee0b6','#d8daeb','#b2abd2','#8073ac','#542788'],\n9: ['#b35806','#e08214','#fdb863','#fee0b6','#f7f7f7','#d8daeb','#b2abd2','#8073ac','#542788'],\n10: ['#7f3b08','#b35806','#e08214','#fdb863','#fee0b6','#d8daeb','#b2abd2','#8073ac','#542788','#2d004b'],\n11: ['#7f3b08','#b35806','#e08214','#fdb863','#fee0b6','#f7f7f7','#d8daeb','#b2abd2','#8073ac','#542788','#2d004b']\n},BrBG: {\n3: ['#d8b365','#f5f5f5','#5ab4ac'],\n4: ['#a6611a','#dfc27d','#80cdc1','#018571'],\n5: ['#a6611a','#dfc27d','#f5f5f5','#80cdc1','#018571'],\n6: ['#8c510a','#d8b365','#f6e8c3','#c7eae5','#5ab4ac','#01665e'],\n7: ['#8c510a','#d8b365','#f6e8c3','#f5f5f5','#c7eae5','#5ab4ac','#01665e'],\n8: ['#8c510a','#bf812d','#dfc27d','#f6e8c3','#c7eae5','#80cdc1','#35978f','#01665e'],\n9: ['#8c510a','#bf812d','#dfc27d','#f6e8c3','#f5f5f5','#c7eae5','#80cdc1','#35978f','#01665e'],\n10: ['#543005','#8c510a','#bf812d','#dfc27d','#f6e8c3','#c7eae5','#80cdc1','#35978f','#01665e','#003c30'],\n11: ['#543005','#8c510a','#bf812d','#dfc27d','#f6e8c3','#f5f5f5','#c7eae5','#80cdc1','#35978f','#01665e','#003c30']\n},PRGn: {\n3: ['#af8dc3','#f7f7f7','#7fbf7b'],\n4: ['#7b3294','#c2a5cf','#a6dba0','#008837'],\n5: ['#7b3294','#c2a5cf','#f7f7f7','#a6dba0','#008837'],\n6: ['#762a83','#af8dc3','#e7d4e8','#d9f0d3','#7fbf7b','#1b7837'],\n7: ['#762a83','#af8dc3','#e7d4e8','#f7f7f7','#d9f0d3','#7fbf7b','#1b7837'],\n8: ['#762a83','#9970ab','#c2a5cf','#e7d4e8','#d9f0d3','#a6dba0','#5aae61','#1b7837'],\n9: ['#762a83','#9970ab','#c2a5cf','#e7d4e8','#f7f7f7','#d9f0d3','#a6dba0','#5aae61','#1b7837'],\n10: ['#40004b','#762a83','#9970ab','#c2a5cf','#e7d4e8','#d9f0d3','#a6dba0','#5aae61','#1b7837','#00441b'],\n11: ['#40004b','#762a83','#9970ab','#c2a5cf','#e7d4e8','#f7f7f7','#d9f0d3','#a6dba0','#5aae61','#1b7837','#00441b']\n},PiYG: {\n3: ['#e9a3c9','#f7f7f7','#a1d76a'],\n4: ['#d01c8b','#f1b6da','#b8e186','#4dac26'],\n5: ['#d01c8b','#f1b6da','#f7f7f7','#b8e186','#4dac26'],\n6: ['#c51b7d','#e9a3c9','#fde0ef','#e6f5d0','#a1d76a','#4d9221'],\n7: ['#c51b7d','#e9a3c9','#fde0ef','#f7f7f7','#e6f5d0','#a1d76a','#4d9221'],\n8: ['#c51b7d','#de77ae','#f1b6da','#fde0ef','#e6f5d0','#b8e186','#7fbc41','#4d9221'],\n9: ['#c51b7d','#de77ae','#f1b6da','#fde0ef','#f7f7f7','#e6f5d0','#b8e186','#7fbc41','#4d9221'],\n10: ['#8e0152','#c51b7d','#de77ae','#f1b6da','#fde0ef','#e6f5d0','#b8e186','#7fbc41','#4d9221','#276419'],\n11: ['#8e0152','#c51b7d','#de77ae','#f1b6da','#fde0ef','#f7f7f7','#e6f5d0','#b8e186','#7fbc41','#4d9221','#276419']\n},RdBu: {\n3: ['#ef8a62','#f7f7f7','#67a9cf'],\n4: ['#ca0020','#f4a582','#92c5de','#0571b0'],\n5: ['#ca0020','#f4a582','#f7f7f7','#92c5de','#0571b0'],\n6: ['#b2182b','#ef8a62','#fddbc7','#d1e5f0','#67a9cf','#2166ac'],\n7: ['#b2182b','#ef8a62','#fddbc7','#f7f7f7','#d1e5f0','#67a9cf','#2166ac'],\n8: ['#b2182b','#d6604d','#f4a582','#fddbc7','#d1e5f0','#92c5de','#4393c3','#2166ac'],\n9: ['#b2182b','#d6604d','#f4a582','#fddbc7','#f7f7f7','#d1e5f0','#92c5de','#4393c3','#2166ac'],\n10: ['#67001f','#b2182b','#d6604d','#f4a582','#fddbc7','#d1e5f0','#92c5de','#4393c3','#2166ac','#053061'],\n11: ['#67001f','#b2182b','#d6604d','#f4a582','#fddbc7','#f7f7f7','#d1e5f0','#92c5de','#4393c3','#2166ac','#053061']\n},RdGy: {\n3: ['#ef8a62','#ffffff','#999999'],\n4: ['#ca0020','#f4a582','#bababa','#404040'],\n5: ['#ca0020','#f4a582','#ffffff','#bababa','#404040'],\n6: ['#b2182b','#ef8a62','#fddbc7','#e0e0e0','#999999','#4d4d4d'],\n7: ['#b2182b','#ef8a62','#fddbc7','#ffffff','#e0e0e0','#999999','#4d4d4d'],\n8: ['#b2182b','#d6604d','#f4a582','#fddbc7','#e0e0e0','#bababa','#878787','#4d4d4d'],\n9: ['#b2182b','#d6604d','#f4a582','#fddbc7','#ffffff','#e0e0e0','#bababa','#878787','#4d4d4d'],\n10: ['#67001f','#b2182b','#d6604d','#f4a582','#fddbc7','#e0e0e0','#bababa','#878787','#4d4d4d','#1a1a1a'],\n11: ['#67001f','#b2182b','#d6604d','#f4a582','#fddbc7','#ffffff','#e0e0e0','#bababa','#878787','#4d4d4d','#1a1a1a']\n},RdYlBu: {\n3: ['#fc8d59','#ffffbf','#91bfdb'],\n4: ['#d7191c','#fdae61','#abd9e9','#2c7bb6'],\n5: ['#d7191c','#fdae61','#ffffbf','#abd9e9','#2c7bb6'],\n6: ['#d73027','#fc8d59','#fee090','#e0f3f8','#91bfdb','#4575b4'],\n7: ['#d73027','#fc8d59','#fee090','#ffffbf','#e0f3f8','#91bfdb','#4575b4'],\n8: ['#d73027','#f46d43','#fdae61','#fee090','#e0f3f8','#abd9e9','#74add1','#4575b4'],\n9: ['#d73027','#f46d43','#fdae61','#fee090','#ffffbf','#e0f3f8','#abd9e9','#74add1','#4575b4'],\n10: ['#a50026','#d73027','#f46d43','#fdae61','#fee090','#e0f3f8','#abd9e9','#74add1','#4575b4','#313695'],\n11: ['#a50026','#d73027','#f46d43','#fdae61','#fee090','#ffffbf','#e0f3f8','#abd9e9','#74add1','#4575b4','#313695']\n},Spectral: {\n3: ['#fc8d59','#ffffbf','#99d594'],\n4: ['#d7191c','#fdae61','#abdda4','#2b83ba'],\n5: ['#d7191c','#fdae61','#ffffbf','#abdda4','#2b83ba'],\n6: ['#d53e4f','#fc8d59','#fee08b','#e6f598','#99d594','#3288bd'],\n7: ['#d53e4f','#fc8d59','#fee08b','#ffffbf','#e6f598','#99d594','#3288bd'],\n8: ['#d53e4f','#f46d43','#fdae61','#fee08b','#e6f598','#abdda4','#66c2a5','#3288bd'],\n9: ['#d53e4f','#f46d43','#fdae61','#fee08b','#ffffbf','#e6f598','#abdda4','#66c2a5','#3288bd'],\n10: ['#9e0142','#d53e4f','#f46d43','#fdae61','#fee08b','#e6f598','#abdda4','#66c2a5','#3288bd','#5e4fa2'],\n11: ['#9e0142','#d53e4f','#f46d43','#fdae61','#fee08b','#ffffbf','#e6f598','#abdda4','#66c2a5','#3288bd','#5e4fa2']\n},RdYlGn: {\n3: ['#fc8d59','#ffffbf','#91cf60'],\n4: ['#d7191c','#fdae61','#a6d96a','#1a9641'],\n5: ['#d7191c','#fdae61','#ffffbf','#a6d96a','#1a9641'],\n6: ['#d73027','#fc8d59','#fee08b','#d9ef8b','#91cf60','#1a9850'],\n7: ['#d73027','#fc8d59','#fee08b','#ffffbf','#d9ef8b','#91cf60','#1a9850'],\n8: ['#d73027','#f46d43','#fdae61','#fee08b','#d9ef8b','#a6d96a','#66bd63','#1a9850'],\n9: ['#d73027','#f46d43','#fdae61','#fee08b','#ffffbf','#d9ef8b','#a6d96a','#66bd63','#1a9850'],\n10: ['#a50026','#d73027','#f46d43','#fdae61','#fee08b','#d9ef8b','#a6d96a','#66bd63','#1a9850','#006837'],\n11: ['#a50026','#d73027','#f46d43','#fdae61','#fee08b','#ffffbf','#d9ef8b','#a6d96a','#66bd63','#1a9850','#006837']\n},Accent: {\n3: ['#7fc97f','#beaed4','#fdc086'],\n4: ['#7fc97f','#beaed4','#fdc086','#ffff99'],\n5: ['#7fc97f','#beaed4','#fdc086','#ffff99','#386cb0'],\n6: ['#7fc97f','#beaed4','#fdc086','#ffff99','#386cb0','#f0027f'],\n7: ['#7fc97f','#beaed4','#fdc086','#ffff99','#386cb0','#f0027f','#bf5b17'],\n8: ['#7fc97f','#beaed4','#fdc086','#ffff99','#386cb0','#f0027f','#bf5b17','#666666']\n},Dark2: {\n3: ['#1b9e77','#d95f02','#7570b3'],\n4: ['#1b9e77','#d95f02','#7570b3','#e7298a'],\n5: ['#1b9e77','#d95f02','#7570b3','#e7298a','#66a61e'],\n6: ['#1b9e77','#d95f02','#7570b3','#e7298a','#66a61e','#e6ab02'],\n7: ['#1b9e77','#d95f02','#7570b3','#e7298a','#66a61e','#e6ab02','#a6761d'],\n8: ['#1b9e77','#d95f02','#7570b3','#e7298a','#66a61e','#e6ab02','#a6761d','#666666']\n},Paired: {\n3: ['#a6cee3','#1f78b4','#b2df8a'],\n4: ['#a6cee3','#1f78b4','#b2df8a','#33a02c'],\n5: ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99'],\n6: ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c'],\n7: ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f'],\n8: ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00'],\n9: ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6'],\n10: ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a'],\n11: ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a','#ffff99'],\n12: ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a','#ffff99','#b15928']\n},Pastel1: {\n3: ['#fbb4ae','#b3cde3','#ccebc5'],\n4: ['#fbb4ae','#b3cde3','#ccebc5','#decbe4'],\n5: ['#fbb4ae','#b3cde3','#ccebc5','#decbe4','#fed9a6'],\n6: ['#fbb4ae','#b3cde3','#ccebc5','#decbe4','#fed9a6','#ffffcc'],\n7: ['#fbb4ae','#b3cde3','#ccebc5','#decbe4','#fed9a6','#ffffcc','#e5d8bd'],\n8: ['#fbb4ae','#b3cde3','#ccebc5','#decbe4','#fed9a6','#ffffcc','#e5d8bd','#fddaec'],\n9: ['#fbb4ae','#b3cde3','#ccebc5','#decbe4','#fed9a6','#ffffcc','#e5d8bd','#fddaec','#f2f2f2']\n},Pastel2: {\n3: ['#b3e2cd','#fdcdac','#cbd5e8'],\n4: ['#b3e2cd','#fdcdac','#cbd5e8','#f4cae4'],\n5: ['#b3e2cd','#fdcdac','#cbd5e8','#f4cae4','#e6f5c9'],\n6: ['#b3e2cd','#fdcdac','#cbd5e8','#f4cae4','#e6f5c9','#fff2ae'],\n7: ['#b3e2cd','#fdcdac','#cbd5e8','#f4cae4','#e6f5c9','#fff2ae','#f1e2cc'],\n8: ['#b3e2cd','#fdcdac','#cbd5e8','#f4cae4','#e6f5c9','#fff2ae','#f1e2cc','#cccccc']\n},Set1: {\n3: ['#e41a1c','#377eb8','#4daf4a'],\n4: ['#e41a1c','#377eb8','#4daf4a','#984ea3'],\n5: ['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00'],\n6: ['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33'],\n7: ['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628'],\n8: ['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf'],\n9: ['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf','#999999']\n},Set2: {\n3: ['#66c2a5','#fc8d62','#8da0cb'],\n4: ['#66c2a5','#fc8d62','#8da0cb','#e78ac3'],\n5: ['#66c2a5','#fc8d62','#8da0cb','#e78ac3','#a6d854'],\n6: ['#66c2a5','#fc8d62','#8da0cb','#e78ac3','#a6d854','#ffd92f'],\n7: ['#66c2a5','#fc8d62','#8da0cb','#e78ac3','#a6d854','#ffd92f','#e5c494'],\n8: ['#66c2a5','#fc8d62','#8da0cb','#e78ac3','#a6d854','#ffd92f','#e5c494','#b3b3b3']\n},Set3: {\n3: ['#8dd3c7','#ffffb3','#bebada'],\n4: ['#8dd3c7','#ffffb3','#bebada','#fb8072'],\n5: ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3'],\n6: ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462'],\n7: ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69'],\n8: ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5'],\n9: ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9'],\n10: ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9','#bc80bd'],\n11: ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9','#bc80bd','#ccebc5'],\n12: ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9','#bc80bd','#ccebc5','#ffed6f']\n}};\n},{}],34:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function d3_class(ctor, properties) {\n  for (var key in properties) {\n    Object.defineProperty(ctor.prototype, key, {\n      value: properties[key],\n      enumerable: false\n    });\n  }\n};\n},{}],35:[function(require,module,exports){\n'use strict';\n/* jshint ignore:start */\n\nvar d3 = module.exports = {\n  map: require('./map')\n};\n\nd3.color = d3_color;\n\nfunction d3_color() {}\nd3_color.prototype.toString = function() {\n  return this.rgb() + '';\n};\nd3.hsl = d3_hsl;\n\nfunction d3_hsl(h, s, l) {\n\n  return this instanceof d3_hsl ? void(this.h = +h, this.s = +s, this.l = +l) : arguments.length <\n    2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl,\n      d3_hsl) : new d3_hsl(h, s, l);\n}\nvar d3_hslPrototype = d3_hsl.prototype = new d3_color();\nd3_hslPrototype.brighter = function(k) {\n  k = Math.pow(.7, arguments.length ? k : 1);\n  return new d3_hsl(this.h, this.s, this.l / k);\n};\nd3_hslPrototype.darker = function(k) {\n  k = Math.pow(.7, arguments.length ? k : 1);\n  return new d3_hsl(this.h, this.s, k * this.l);\n};\nd3_hslPrototype.rgb = function() {\n  return d3_hsl_rgb(this.h, this.s, this.l);\n};\n\nfunction d3_hsl_rgb(h, s, l) {\n  var m1, m2;\n  h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n  s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n  l = l < 0 ? 0 : l > 1 ? 1 : l;\n  m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n  m1 = 2 * l - m2;\n\n  function v(h) {\n    if (h > 360) h -= 360;\n    else if (h < 0) h += 360;\n    if (h < 60) return m1 + (m2 - m1) * h / 60;\n    if (h < 180) return m2;\n    if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n    return m1;\n  }\n\n  function vv(h) {\n    return Math.round(v(h) * 255);\n  }\n  return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n}\nd3.hcl = d3_hcl;\n\nfunction d3_hcl(h, c, l) {\n  return this instanceof d3_hcl ? void(this.h = +h, this.c = +c, this.l = +l) : arguments.length <\n    2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l,\n      h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(\n      h, c, l);\n}\nvar d3_hclPrototype = d3_hcl.prototype = new d3_color();\nd3_hclPrototype.brighter = function(k) {\n  return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n};\nd3_hclPrototype.darker = function(k) {\n  return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n};\nd3_hclPrototype.rgb = function() {\n  return d3_hcl_lab(this.h, this.c, this.l).rgb();\n};\n\nfunction d3_hcl_lab(h, c, l) {\n  if (isNaN(h)) h = 0;\n  if (isNaN(c)) c = 0;\n  return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n}\nd3.lab = d3_lab;\n\nfunction d3_lab(l, a, b) {\n  return this instanceof d3_lab ? void(this.l = +l, this.a = +a, this.b = +b) : arguments.length <\n    2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h,\n      l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n}\nvar d3_lab_K = 18;\nvar d3_lab_X = .95047,\n  d3_lab_Y = 1,\n  d3_lab_Z = 1.08883;\nvar d3_labPrototype = d3_lab.prototype = new d3_color();\nd3_labPrototype.brighter = function(k) {\n  return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this\n    .b);\n};\nd3_labPrototype.darker = function(k) {\n  return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n};\nd3_labPrototype.rgb = function() {\n  return d3_lab_rgb(this.l, this.a, this.b);\n};\n\nd3.lab_rgb = function d3_lab_rgb(l, a, b) {\n  var y = (l + 16) / 116,\n    x = y + a / 500,\n    z = y - b / 200;\n  x = d3_lab_xyz(x) * d3_lab_X;\n  y = d3_lab_xyz(y) * d3_lab_Y;\n  z = d3_lab_xyz(z) * d3_lab_Z;\n  return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 *\n    x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 *\n    z));\n}\n\nfunction d3_lab_hcl(l, a, b) {\n  return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(\n    NaN, NaN, l);\n}\n\nfunction d3_lab_xyz(x) {\n  return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n}\n\nfunction d3_xyz_lab(x) {\n  return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n}\n\nfunction d3_xyz_rgb(r) {\n  return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n}\nd3.rgb = d3_rgb;\n\nfunction d3_rgb(r, g, b) {\n  return this instanceof d3_rgb ? void(this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length <\n    2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb,\n      d3_hsl_rgb) : new d3_rgb(r, g, b);\n}\n\nfunction d3_rgbNumber(value) {\n  return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n}\n\nfunction d3_rgbString(value) {\n  return d3_rgbNumber(value) + \"\";\n}\nvar d3_rgbPrototype = d3_rgb.prototype = new d3_color();\nd3_rgbPrototype.brighter = function(k) {\n  k = Math.pow(.7, arguments.length ? k : 1);\n  var r = this.r,\n    g = this.g,\n    b = this.b,\n    i = 30;\n  if (!r && !g && !b) return new d3_rgb(i, i, i);\n  if (r && r < i) r = i;\n  if (g && g < i) g = i;\n  if (b && b < i) b = i;\n  return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n};\nd3_rgbPrototype.darker = function(k) {\n  k = Math.pow(.7, arguments.length ? k : 1);\n  return new d3_rgb(k * this.r, k * this.g, k * this.b);\n};\nd3_rgbPrototype.hsl = function() {\n  return d3_rgb_hsl(this.r, this.g, this.b);\n};\nd3_rgbPrototype.toString = function() {\n  return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n};\n\nfunction d3_rgb_hex(v) {\n  return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n}\n\nfunction d3_rgb_parse(format, rgb, hsl) {\n  var r = 0,\n    g = 0,\n    b = 0,\n    m1, m2, color;\n  m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n  if (m1) {\n    m2 = m1[2].split(\",\");\n    switch (m1[1]) {\n      case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n      case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(\n            m2[2]));\n        }\n    }\n  }\n  if (color = d3_rgb_names.get(format.toLowerCase())) {\n    return rgb(color.r, color.g, color.b);\n  }\n  if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n    if (format.length === 4) {\n      r = (color & 3840) >> 4;\n      r = r >> 4 | r;\n      g = color & 240;\n      g = g >> 4 | g;\n      b = color & 15;\n      b = b << 4 | b;\n    } else if (format.length === 7) {\n      r = (color & 16711680) >> 16;\n      g = (color & 65280) >> 8;\n      b = color & 255;\n    }\n  }\n  return rgb(r, g, b);\n}\n\nfunction d3_rgb_hsl(r, g, b) {\n  var min = Math.min(r /= 255, g /= 255, b /= 255),\n    max = Math.max(r, g, b),\n    d = max - min,\n    h, s, l = (max + min) / 2;\n  if (d) {\n    s = l < .5 ? d / (max + min) : d / (2 - max - min);\n    if (r == max) h = (g - b) / d + (g < b ? 6 : 0);\n    else if (g == max) h = (b - r) / d + 2;\n    else h = (r - g) / d + 4;\n    h *= 60;\n  } else {\n    h = NaN;\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new d3_hsl(h, s, l);\n}\n\nfunction d3_rgb_lab(r, g, b) {\n  r = d3_rgb_xyz(r);\n  g = d3_rgb_xyz(g);\n  b = d3_rgb_xyz(b);\n  var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X),\n    y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y),\n    z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n  return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n}\n\nfunction d3_rgb_xyz(r) {\n  return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n}\n\nfunction d3_rgb_parseNumber(c) {\n  var f = parseFloat(c);\n  return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n}\nvar d3_rgb_names = d3.map({\n  aliceblue: 15792383,\n  antiquewhite: 16444375,\n  aqua: 65535,\n  aquamarine: 8388564,\n  azure: 15794175,\n  beige: 16119260,\n  bisque: 16770244,\n  black: 0,\n  blanchedalmond: 16772045,\n  blue: 255,\n  blueviolet: 9055202,\n  brown: 10824234,\n  burlywood: 14596231,\n  cadetblue: 6266528,\n  chartreuse: 8388352,\n  chocolate: 13789470,\n  coral: 16744272,\n  cornflowerblue: 6591981,\n  cornsilk: 16775388,\n  crimson: 14423100,\n  cyan: 65535,\n  darkblue: 139,\n  darkcyan: 35723,\n  darkgoldenrod: 12092939,\n  darkgray: 11119017,\n  darkgreen: 25600,\n  darkgrey: 11119017,\n  darkkhaki: 12433259,\n  darkmagenta: 9109643,\n  darkolivegreen: 5597999,\n  darkorange: 16747520,\n  darkorchid: 10040012,\n  darkred: 9109504,\n  darksalmon: 15308410,\n  darkseagreen: 9419919,\n  darkslateblue: 4734347,\n  darkslategray: 3100495,\n  darkslategrey: 3100495,\n  darkturquoise: 52945,\n  darkviolet: 9699539,\n  deeppink: 16716947,\n  deepskyblue: 49151,\n  dimgray: 6908265,\n  dimgrey: 6908265,\n  dodgerblue: 2003199,\n  firebrick: 11674146,\n  floralwhite: 16775920,\n  forestgreen: 2263842,\n  fuchsia: 16711935,\n  gainsboro: 14474460,\n  ghostwhite: 16316671,\n  gold: 16766720,\n  goldenrod: 14329120,\n  gray: 8421504,\n  green: 32768,\n  greenyellow: 11403055,\n  grey: 8421504,\n  honeydew: 15794160,\n  hotpink: 16738740,\n  indianred: 13458524,\n  indigo: 4915330,\n  ivory: 16777200,\n  khaki: 15787660,\n  lavender: 15132410,\n  lavenderblush: 16773365,\n  lawngreen: 8190976,\n  lemonchiffon: 16775885,\n  lightblue: 11393254,\n  lightcoral: 15761536,\n  lightcyan: 14745599,\n  lightgoldenrodyellow: 16448210,\n  lightgray: 13882323,\n  lightgreen: 9498256,\n  lightgrey: 13882323,\n  lightpink: 16758465,\n  lightsalmon: 16752762,\n  lightseagreen: 2142890,\n  lightskyblue: 8900346,\n  lightslategray: 7833753,\n  lightslategrey: 7833753,\n  lightsteelblue: 11584734,\n  lightyellow: 16777184,\n  lime: 65280,\n  limegreen: 3329330,\n  linen: 16445670,\n  magenta: 16711935,\n  maroon: 8388608,\n  mediumaquamarine: 6737322,\n  mediumblue: 205,\n  mediumorchid: 12211667,\n  mediumpurple: 9662683,\n  mediumseagreen: 3978097,\n  mediumslateblue: 8087790,\n  mediumspringgreen: 64154,\n  mediumturquoise: 4772300,\n  mediumvioletred: 13047173,\n  midnightblue: 1644912,\n  mintcream: 16121850,\n  mistyrose: 16770273,\n  moccasin: 16770229,\n  navajowhite: 16768685,\n  navy: 128,\n  oldlace: 16643558,\n  olive: 8421376,\n  olivedrab: 7048739,\n  orange: 16753920,\n  orangered: 16729344,\n  orchid: 14315734,\n  palegoldenrod: 15657130,\n  palegreen: 10025880,\n  paleturquoise: 11529966,\n  palevioletred: 14381203,\n  papayawhip: 16773077,\n  peachpuff: 16767673,\n  peru: 13468991,\n  pink: 16761035,\n  plum: 14524637,\n  powderblue: 11591910,\n  purple: 8388736,\n  rebeccapurple: 6697881,\n  red: 16711680,\n  rosybrown: 12357519,\n  royalblue: 4286945,\n  saddlebrown: 9127187,\n  salmon: 16416882,\n  sandybrown: 16032864,\n  seagreen: 3050327,\n  seashell: 16774638,\n  sienna: 10506797,\n  silver: 12632256,\n  skyblue: 8900331,\n  slateblue: 6970061,\n  slategray: 7372944,\n  slategrey: 7372944,\n  snow: 16775930,\n  springgreen: 65407,\n  steelblue: 4620980,\n  tan: 13808780,\n  teal: 32896,\n  thistle: 14204888,\n  tomato: 16737095,\n  turquoise: 4251856,\n  violet: 15631086,\n  wheat: 16113331,\n  white: 16777215,\n  whitesmoke: 16119285,\n  yellow: 16776960,\n  yellowgreen: 10145074\n});\nd3_rgb_names.forEach(function(key, value) {\n  d3_rgb_names.set(key, d3_rgbNumber(value));\n});\n/* jshint ignore:end */\n\n},{\"./map\":37}],36:[function(require,module,exports){\n'use strict';\n\nvar d3 = require('./color');\n\nmodule.exports = function (a, b) {\n  a = d3.lab(a);\n  b = d3.lab(b);\n  var al = a.l,\n      aa = a.a,\n      ab = a.b,\n      bl = b.l - al,\n      ba = b.a - aa,\n      bb = b.b - ab;\n  return function(t) {\n    return d3.lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + '';\n  };\n};\n},{\"./color\":35}],37:[function(require,module,exports){\n'use strict';\n/* jshint ignore:start */\nvar d3_class = require('./class');\n\nmodule.exports = function(object, f) {\n  var map = new d3_Map;\n  if (object instanceof d3_Map) {\n    object.forEach(function(key, value) { map.set(key, value); });\n  } else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n    if (arguments.length === 1) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n  } else {\n    for (var key in object) map.set(key, object[key]);\n  }\n  return map;\n};\n\nfunction d3_Map() {\n  this._ = Object.create(null);\n}\n\nvar d3_map_proto = \"__proto__\",\n    d3_map_zero = \"\\0\";\n\nd3_class(d3_Map, {\n  has: d3_map_has,\n  get: function(key) {\n    return this._[d3_map_escape(key)];\n  },\n  set: function(key, value) {\n    return this._[d3_map_escape(key)] = value;\n  },\n  remove: d3_map_remove,\n  keys: d3_map_keys,\n  values: function() {\n    var values = [];\n    for (var key in this._) values.push(this._[key]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var key in this._) entries.push({key: d3_map_unescape(key), value: this._[key]});\n    return entries;\n  },\n  size: d3_map_size,\n  empty: d3_map_empty,\n  forEach: function(f) {\n    for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n  }\n});\n\nfunction d3_map_escape(key) {\n  return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n}\n\nfunction d3_map_unescape(key) {\n  return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n}\n\nfunction d3_map_has(key) {\n  return d3_map_escape(key) in this._;\n}\n\nfunction d3_map_remove(key) {\n  return (key = d3_map_escape(key)) in this._ && delete this._[key];\n}\n\nfunction d3_map_keys() {\n  var keys = [];\n  for (var key in this._) keys.push(d3_map_unescape(key));\n  return keys;\n}\n\nfunction d3_map_size() {\n  var size = 0;\n  for (var key in this._) ++size;\n  return size;\n}\n\nfunction d3_map_empty() {\n  for (var key in this._) return false;\n  return true;\n}\n/* jshint ignore:end */\n},{\"./class\":34}],38:[function(require,module,exports){\n// Package of defining Vega-lite Specification's json schema\n'use strict';\n\nrequire('../globals');\n\nvar schema = module.exports = {},\n  util = require('../util'),\n  toMap = util.toMap,\n  colorbrewer = require('../lib/colorbrewer/colorbrewer');\n\nschema.util = require('./schemautil');\n\nschema.marktype = {\n  type: 'string',\n  enum: ['point', 'tick', 'bar', 'line', 'area', 'circle', 'square', 'text']\n};\n\nschema.aggregate = {\n  type: 'string',\n  enum: ['avg', 'sum', 'median', 'min', 'max', 'count'],\n  supportedEnums: {\n    Q: ['avg', 'median', 'sum', 'min', 'max', 'count'],\n    O: ['median','min','max'],\n    N: [],\n    T: ['avg', 'median', 'min', 'max'],\n    '': ['count']\n  },\n  supportedTypes: toMap([Q, N, O, T, ''])\n};\nschema.band = {\n  type: 'object',\n  properties: {\n    size: {\n      type: 'integer',\n      minimum: 0\n    },\n    padding: {\n      type: 'integer',\n      minimum: 0,\n      default: 1\n    }\n  }\n};\n\nschema.getSupportedRole = function(encType) {\n  return schema.schema.properties.encoding.properties[encType].supportedRole;\n};\n\nschema.timefns = ['year', 'month', 'day', 'date', 'hours', 'minutes', 'seconds'];\n\nschema.defaultTimeFn = 'month';\n\nschema.fn = {\n  type: 'string',\n  enum: schema.timefns,\n  supportedTypes: toMap([T])\n};\n\n//TODO(kanitw): add other type of function here\n\nschema.scale_type = {\n  type: 'string',\n  enum: ['linear', 'log', 'pow', 'sqrt', 'quantile'],\n  default: 'linear',\n  supportedTypes: toMap([Q])\n};\n\nschema.field = {\n  type: 'object',\n  properties: {\n    name: {\n      type: 'string'\n    }\n  }\n};\n\nvar clone = util.duplicate;\nvar merge = schema.util.merge;\n\nschema.MAXBINS_DEFAULT = 15;\n\nvar bin = {\n  type: ['boolean', 'object'],\n  default: false,\n  properties: {\n    maxbins: {\n      type: 'integer',\n      default: schema.MAXBINS_DEFAULT,\n      minimum: 2\n    }\n  },\n  supportedTypes: toMap([Q]) // TODO: add O after finishing #81\n};\n\nvar typicalField = merge(clone(schema.field), {\n  type: 'object',\n  properties: {\n    type: {\n      type: 'string',\n      enum: [N, O, Q, T]\n    },\n    aggregate: schema.aggregate,\n    fn: schema.fn,\n    bin: bin,\n    scale: {\n      type: 'object',\n      properties: {\n        type: schema.scale_type,\n        reverse: {\n          type: 'boolean',\n          default: false,\n          supportedTypes: toMap([Q, T])\n        },\n        zero: {\n          type: 'boolean',\n          description: 'Include zero',\n          default: true,\n          supportedTypes: toMap([Q, T])\n        },\n        nice: {\n          type: 'string',\n          enum: ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'],\n          supportedTypes: toMap([T])\n        }\n      }\n    }\n  }\n});\n\nvar onlyOrdinalField = merge(clone(schema.field), {\n  type: 'object',\n  supportedRole: {\n    dimension: true\n  },\n  properties: {\n    type: {\n      type: 'string',\n      enum: [N, O, Q, T] // ordinal-only field supports Q when bin is applied and T when fn is applied.\n    },\n    fn: schema.fn,\n    bin: bin,\n    aggregate: {\n      type: 'string',\n      enum: ['count'],\n      supportedTypes: toMap([N, O]) // FIXME this looks weird to me\n    }\n  }\n});\n\nvar axisMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true},\n  properties: {\n    axis: {\n      type: 'object',\n      properties: {\n        grid: {\n          type: 'boolean',\n          default: true,\n          description: 'A flag indicate if gridlines should be created in addition to ticks.'\n        },\n        title: {\n          type: 'boolean',\n          default: true,\n          description: 'A title for the axis.'\n        },\n        titleOffset: {\n          type: 'integer',\n          default: undefined,  // auto\n          description: 'A title offset value for the axis.'\n        },\n        format: {\n          type: 'string',\n          default: undefined,  // auto\n          description: 'The formatting pattern for axis labels.'\n        },\n        maxLabelLength: {\n          type: 'integer',\n          default: 25,\n          minimum: 0,\n          description: 'Truncate labels that are too long.'\n        }\n      }\n    }\n  }\n};\n\nvar sortMixin = {\n  type: 'object',\n  properties: {\n    sort: {\n      type: 'array',\n      default: [],\n      items: {\n        type: 'object',\n        supportedTypes: toMap([N, O]),\n        required: ['name', 'aggregate'],\n        name: {\n          type: 'string'\n        },\n        aggregate: {\n          type: 'string',\n          enum: ['avg', 'sum', 'min', 'max', 'count']\n        },\n        reverse: {\n          type: 'boolean',\n          default: false\n        }\n      }\n    }\n  }\n};\n\nvar bandMixin = {\n  type: 'object',\n  properties: {\n    band: schema.band\n  }\n};\n\nvar legendMixin = {\n  type: 'object',\n  properties: {\n    legend: {\n      type: 'boolean',\n      default: true\n    }\n  }\n};\n\nvar textMixin = {\n  type: 'object',\n  supportedMarktypes: {'text': true},\n  properties: {\n    text: {\n      type: 'object',\n      properties: {\n        align: {\n          type: 'string',\n          default: 'left'\n        },\n        baseline: {\n          type: 'string',\n          default: 'middle'\n        },\n        margin: {\n          type: 'integer',\n          default: 4,\n          minimum: 0\n        }\n      }\n    },\n    font: {\n      type: 'object',\n      properties: {\n        weight: {\n          type: 'string',\n          enum: ['normal', 'bold'],\n          default: 'normal'\n        },\n        size: {\n          type: 'integer',\n          default: 10,\n          minimum: 0\n        },\n        family: {\n          type: 'string',\n          default: 'Helvetica Neue'\n        },\n        style: {\n          type: 'string',\n          default: 'normal',\n          enum: ['normal', 'italic']\n        }\n      }\n    }\n  }\n};\n\nvar sizeMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, bar: true, circle: true, square: true, text: true},\n  properties: {\n    value: {\n      type: 'integer',\n      default: 30,\n      minimum: 0\n    }\n  }\n};\n\nvar colorMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, 'text': true},\n  properties: {\n    value: {\n      type: 'string',\n      role: 'color',\n      default: 'steelblue'\n    },\n    scale: {\n      type: 'object',\n      properties: {\n        range: {\n          type: ['string', 'array']\n        }\n      }\n    }\n  }\n};\n\nvar alphaMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, 'text': true},\n  properties: {\n    value: {\n      type: 'number',\n      default: undefined,  // auto\n      minimum: 0,\n      maximum: 1\n    }\n  }\n};\n\nvar shapeMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, circle: true, square: true},\n  properties: {\n    value: {\n      type: 'string',\n      enum: ['circle', 'square', 'cross', 'diamond', 'triangle-up', 'triangle-down'],\n      default: 'circle'\n    }\n  }\n};\n\nvar detailMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, line: true, circle: true, square: true}\n};\n\nvar rowMixin = {\n  properties: {\n    height: {\n      type: 'number',\n      minimum: 0,\n      default: 150\n    },\n    grid: {\n      type: 'boolean',\n      default: true,\n      description: 'A flag indicate if gridlines should be created in addition to ticks.'\n    },\n  }\n};\n\nvar colMixin = {\n  properties: {\n    width: {\n      type: 'number',\n      minimum: 0,\n      default: 150\n    },\n    axis: {\n      properties: {\n        maxLabelLength: {\n          type: 'integer',\n          default: 12,\n          minimum: 0,\n          description: 'Truncate labels that are too long.'\n        }\n      }\n    }\n  }\n};\n\nvar facetMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, text: true},\n  properties: {\n    padding: {\n      type: 'number',\n      minimum: 0,\n      maximum: 1,\n      default: 0.1\n    }\n  }\n};\n\nvar requiredNameType = {\n  required: ['name', 'type']\n};\n\nvar multiRoleField = merge(clone(typicalField), {\n  supportedRole: {\n    measure: true,\n    dimension: true\n  }\n});\n\nvar quantitativeField = merge(clone(typicalField), {\n  supportedRole: {\n    measure: true,\n    dimension: 'ordinal-only' // using alpha / size to encoding category lead to order interpretation\n  }\n});\n\nvar onlyQuantitativeField = merge(clone(typicalField), {\n  supportedRole: {\n    measure: true\n  }\n});\n\nvar x = merge(clone(multiRoleField), axisMixin, bandMixin, requiredNameType, sortMixin);\nvar y = clone(x);\n\nvar facet = merge(clone(onlyOrdinalField), requiredNameType, facetMixin, sortMixin);\nvar row = merge(clone(facet), axisMixin, rowMixin);\nvar col = merge(clone(facet), axisMixin, colMixin);\n\nvar size = merge(clone(quantitativeField), legendMixin, sizeMixin, sortMixin);\nvar color = merge(clone(multiRoleField), legendMixin, colorMixin, sortMixin);\nvar alpha = merge(clone(quantitativeField), alphaMixin, sortMixin);\nvar shape = merge(clone(onlyOrdinalField), legendMixin, shapeMixin, sortMixin);\nvar detail = merge(clone(onlyOrdinalField), detailMixin, sortMixin);\n\n// we only put aggregated measure in pivot table\nvar text = merge(clone(onlyQuantitativeField), textMixin, sortMixin);\n\n// TODO add label\n\nvar filter = {\n  type: 'array',\n  items: {\n    type: 'object',\n    properties: {\n      operands: {\n        type: 'array',\n        items: {\n          type: ['string', 'boolean', 'integer', 'number']\n        }\n      },\n      operator: {\n        type: 'string',\n        enum: ['>', '>=', '=', '!=', '<', '<=', 'notNull']\n      }\n    }\n  }\n};\n\nvar data = {\n  type: 'object',\n  properties: {\n    // data source\n    formatType: {\n      type: 'string',\n      enum: ['json', 'csv'],\n      default: 'json'\n    },\n    url: {\n      type: 'string',\n      default: undefined\n    },\n    values: {\n      type: 'array',\n      description: 'Pass array of objects instead of a url to a file.',\n      items: {\n        type: 'object',\n        additionalProperties: true\n      }\n    }\n  }\n};\n\nvar config = {\n  type: 'object',\n  properties: {\n    // template\n    width: {\n      type: 'integer',\n      default: undefined\n    },\n    height: {\n      type: 'integer',\n      default: undefined\n    },\n    viewport: {\n      type: 'array',\n      items: {\n        type: 'integer'\n      },\n      default: undefined\n    },\n    gridColor: {\n      type: 'string',\n      role: 'color',\n      default: 'black'\n    },\n    gridOpacity: {\n      type: 'number',\n      minimum: 0,\n      maximum: 1,\n      default: 0.08\n    },\n\n    // filter null\n    filterNull: {\n      type: 'object',\n      properties: {\n        O: {type:'boolean', default: false},\n        Q: {type:'boolean', default: true},\n        T: {type:'boolean', default: true}\n      }\n    },\n    toggleSort: {\n      type: 'string',\n      default: O\n    },\n\n    // single plot\n    singleHeight: {\n      // will be overwritten by bandWidth * (cardinality + padding)\n      type: 'integer',\n      default: 200,\n      minimum: 0\n    },\n    singleWidth: {\n      // will be overwritten by bandWidth * (cardinality + padding)\n      type: 'integer',\n      default: 200,\n      minimum: 0\n    },\n    // band size\n    largeBandSize: {\n      type: 'integer',\n      default: 21,\n      minimum: 0\n    },\n    smallBandSize: {\n      //small multiples or single plot with high cardinality\n      type: 'integer',\n      default: 12,\n      minimum: 0\n    },\n    largeBandMaxCardinality: {\n      type: 'integer',\n      default: 10\n    },\n    // small multiples\n    cellPadding: {\n      type: 'number',\n      default: 0.1\n    },\n    cellGridColor: {\n      type: 'string',\n      role: 'color',\n      default: 'black'\n    },\n    cellGridOpacity: {\n      type: 'number',\n      minimum: 0,\n      maximum: 1,\n      default: 0.15\n    },\n    cellBackgroundColor: {\n      type: 'string',\n      role: 'color',\n      default: 'transparent'\n    },\n    textCellWidth: {\n      type: 'integer',\n      default: 90,\n      minimum: 0\n    },\n\n    // marks\n    strokeWidth: {\n      type: 'integer',\n      default: 2,\n      minimum: 0\n    },\n    singleBarOffset: {\n      type: 'integer',\n      default: 5,\n      minimum: 0\n    },\n\n    // color\n    c10palette: {\n      type: 'string',\n      default: 'category10-k',\n      enum: [\n        // Tableau\n        'category10', 'category10-k',\n        // Color Brewer\n        'Pastel1', 'Pastel2', 'Set1', 'Set2', 'Set3'\n      ]\n    },\n    c20palette: {\n      type: 'string',\n      default: 'category20',\n      enum: ['category20', 'category20b', 'category20c']\n    },\n    ordinalPalette: {\n      type: 'string',\n      default: 'BuGn',\n      enum: util.keys(colorbrewer)\n    },\n\n    // scales\n    timeScaleLabelLength: {\n      type: 'integer',\n      default: 3,\n      minimum: 0\n    },\n    // other\n    characterWidth: {\n      type: 'integer',\n      default: 6\n    }\n  }\n};\n\n/** @type Object Schema of a vega-lite specification */\nschema.schema = {\n  $schema: 'http://json-schema.org/draft-04/schema#',\n  description: 'Schema for Vega-lite specification',\n  type: 'object',\n  required: ['marktype', 'encoding', 'data'],\n  properties: {\n    data: data,\n    marktype: schema.marktype,\n    encoding: {\n      type: 'object',\n      properties: {\n        x: x,\n        y: y,\n        row: row,\n        col: col,\n        size: size,\n        color: color,\n        alpha: alpha,\n        shape: shape,\n        text: text,\n        detail: detail\n      }\n    },\n    filter: filter,\n    config: config\n  }\n};\n\nschema.encTypes = util.keys(schema.schema.properties.encoding.properties);\n\n/** Instantiate a verbose vl spec from the schema */\nschema.instantiate = function() {\n  return schema.util.instantiate(schema.schema);\n};\n\n},{\"../globals\":32,\"../lib/colorbrewer/colorbrewer\":33,\"../util\":40,\"./schemautil\":39}],39:[function(require,module,exports){\n'use strict';\n\nvar schemautil = module.exports = {},\n  util = require('../util');\n\nvar isEmpty = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\nschemautil.extend = function(instance, schema) {\n  return schemautil.merge(schemautil.instantiate(schema), instance);\n};\n\n// instantiate a schema\nschemautil.instantiate = function(schema) {\n  var val;\n  if (schema === undefined) {\n    return undefined;\n  } else if ('default' in schema) {\n    val = schema.default;\n    return util.isObject(val) ? util.duplicate(val) : val;\n  } else if (schema.type === 'object') {\n    var instance = {};\n    for (var name in schema.properties) {\n      val = schemautil.instantiate(schema.properties[name]);\n      if (val !== undefined) {\n        instance[name] = val;\n      }\n    }\n    return instance;\n  } else if (schema.type === 'array') {\n    return [];\n  }\n  return undefined;\n};\n\n// remove all defaults from an instance\nschemautil.subtract = function(instance, defaults) {\n  var changes = {};\n  for (var prop in instance) {\n    var def = defaults[prop];\n    var ins = instance[prop];\n    // Note: does not properly subtract arrays\n    if (!defaults || def !== ins) {\n      if (typeof ins === 'object' && !util.isArray(ins) && def) {\n        var c = schemautil.subtract(ins, def);\n        if (!isEmpty(c))\n          changes[prop] = c;\n      } else if (!util.isArray(ins) || ins.length > 0) {\n        changes[prop] = ins;\n      }\n    }\n  }\n  return changes;\n};\n\nschemautil.merge = function(/*dest*, src0, src1, ...*/){\n  var dest = arguments[0];\n  for (var i=1 ; i<arguments.length; i++) {\n    dest = merge(dest, arguments[i]);\n  }\n  return dest;\n};\n\n// recursively merges src into dest\nfunction merge(dest, src) {\n  if (typeof src !== 'object' || src === null) {\n    return dest;\n  }\n\n  for (var p in src) {\n    if (!src.hasOwnProperty(p)) {\n      continue;\n    }\n    if (src[p] === undefined) {\n      continue;\n    }\n    if (typeof src[p] !== 'object' || src[p] === null) {\n      dest[p] = src[p];\n    } else if (typeof dest[p] !== 'object' || dest[p] === null) {\n      dest[p] = merge(src[p].constructor === Array ? [] : {}, src[p]);\n    } else {\n      merge(dest[p], src[p]);\n    }\n  }\n  return dest;\n}\n},{\"../util\":40}],40:[function(require,module,exports){\n'use strict';\n\nvar util = module.exports = require('datalib/src/util');\n\nutil.extend(util, require('datalib/src/generate'));\nutil.bin = require('datalib/src/bins/bins');\n\nutil.isin = function(item, array) {\n  return array.indexOf(item) !== -1;\n};\n\nutil.forEach = function(obj, f, thisArg) {\n  if (obj.forEach) {\n    obj.forEach.call(thisArg, f);\n  } else {\n    for (var k in obj) {\n      f.call(thisArg, obj[k], k , obj);\n    }\n  }\n};\n\nutil.reduce = function(obj, f, init, thisArg) {\n  if (obj.reduce) {\n    return obj.reduce.call(thisArg, f, init);\n  } else {\n    for (var k in obj) {\n      init = f.call(thisArg, init, obj[k], k, obj);\n    }\n    return init;\n  }\n};\n\nutil.map = function(obj, f, thisArg) {\n  if (obj.map) {\n    return obj.map.call(thisArg, f);\n  } else {\n    var output = [];\n    for (var k in obj) {\n      output.push( f.call(thisArg, obj[k], k, obj));\n    }\n  }\n};\n\nutil.any = function(arr, f) {\n  var i = 0, k;\n  for (k in arr) {\n    if (f(arr[k], k, i++)) return true;\n  }\n  return false;\n};\n\nutil.all = function(arr, f) {\n  var i = 0, k;\n  for (k in arr) {\n    if (!f(arr[k], k, i++)) return false;\n  }\n  return true;\n};\n\nutil.getbins = function(stats, maxbins) {\n  return util.bin({\n    min: stats.min,\n    max: stats.max,\n    maxbins: maxbins\n  });\n};\n\n/**\n * x[p[0]]...[p[n]] = val\n * @param noaugment determine whether new object should be added f\n * or non-existing properties along the path\n */\nutil.setter = function(x, p, val, noaugment) {\n  for (var i=0; i<p.length-1; ++i) {\n    if (!noaugment && !(p[i] in x)){\n      x = x[p[i]] = {};\n    } else {\n      x = x[p[i]];\n    }\n  }\n  x[p[i]] = val;\n};\n\n\n/**\n * returns x[p[0]]...[p[n]]\n * @param augment determine whether new object should be added f\n * or non-existing properties along the path\n */\nutil.getter = function(x, p, noaugment) {\n  for (var i=0; i<p.length; ++i) {\n    if (!noaugment && !(p[i] in x)){\n      x = x[p[i]] = {};\n    } else {\n      x = x[p[i]];\n    }\n  }\n  return x;\n};\n\nutil.error = function(msg) {\n  console.error('[VL Error]', msg);\n};\n\n\n},{\"datalib/src/bins/bins\":4,\"datalib/src/generate\":5,\"datalib/src/util\":9}]},{},[1])(1)\n});\n//# sourceMappingURL=data:application/json;base64,\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var util = require('../util');\nvar units = require('../time-units');\nvar EPSILON = 1e-15;\n\nfunction bins(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],      \n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n    \n    // increase step size if too many bins\n    do { step *= base; } while (Math.ceil(span/step) > maxb);\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  opt = opt || {};\n\n  // find time step, then bin\n  var dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n","var gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};","var util = require('../util');\n\nvar TYPES = '__types__';\n\nvar PARSERS = {\n  boolean: util.boolean,\n  integer: util.number,\n  number:  util.number,\n  date:    util.date,\n  string:  function(x) { return x==='' ? null : x; }\n};\n\nvar TESTS = {\n  boolean: function(x) { return x==='true' || x==='false' || util.isBoolean(x); },\n  integer: function(x) { return TESTS.number(x) && (x=+x) === ~~x; },\n  number: function(x) { return !isNaN(+x) && !util.isDate(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); }\n};\n\nfunction annotation(data, types) {\n  if (!types) return data && data[TYPES] || null;\n  data[TYPES] = types;\n}\n\nfunction type(values, f) {\n  f = util.$(f);\n  var v, i, n;\n\n  // if data array has type annotations, use them\n  if (values[TYPES]) {\n    v = f(values[TYPES]);\n    if (util.isString(v)) return v;\n  }\n\n  for (i=0, n=values.length; !util.isValid(v) && i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n  }\n\n  return util.isDate(v) ? 'date' :\n    util.isNumber(v)    ? 'number' :\n    util.isBoolean(v)   ? 'boolean' :\n    util.isString(v)    ? 'string' : null;\n}\n\nfunction typeAll(data, fields) {\n  if (!data.length) return;\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    return (types[f] = type(data, f), types);\n  }, {});\n}\n\nfunction infer(values, f) {\n  f = util.$(f);\n  var i, j, v;\n\n  // types to test for, in precedence order\n  var types = ['boolean', 'integer', 'number', 'date'];\n\n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (util.isValid(v) && !TESTS[types[j]](v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return 'string';\n  }\n\n  return types[0];\n}\n\nfunction inferAll(data, fields) {\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    var type = infer(data, f);\n    if (PARSERS[type]) types[f] = type;\n    return types;\n  }, {});\n}\n\ntype.annotation = annotation;\ntype.all = typeAll;\ntype.infer = infer;\ntype.inferAll = inferAll;\ntype.parsers = PARSERS;\nmodule.exports = type;","var util = require('./util');\nvar type = require('./import/type');\nvar gen = require('./generate');\nvar stats = {};\n\n// Collect unique values.\n// Output: an array of unique values, in first-observed order\nstats.unique = function(values, f, results) {\n  f = util.$(f);\n  results = results || [];\n  var u = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    results.push(v);\n  }\n  return results;\n};\n\n// Return the length of the input array.\nstats.count = function(values) {\n  return values && values.length || 0;\n};\n\n// Count the number of non-null, non-undefined, non-NaN values.\nstats.count.valid = function(values, f) {\n  f = util.$(f);\n  var v, i, n, valid = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) valid += 1;\n  }\n  return valid;\n};\n\n// Count the number of null or undefined values.\nstats.count.missing = function(values, f) {\n  f = util.$(f);\n  var v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\n// Null, undefined and NaN are each considered distinct values.\nstats.count.distinct = function(values, f) {\n  f = util.$(f);\n  var u = {}, v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Construct a map from distinct values to occurrence counts.\nstats.count.map = function(values, f) {\n  f = util.$(f);\n  var map = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    map[v] = (v in map) ? map[v] + 1 : 1;\n  }\n  return map;\n};\n\n// Compute the median of an array of numbers.\nstats.median = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  return stats.quantile(values, 0.5);\n};\n\n// Computes the quartile boundaries of an array of numbers.\nstats.quartile = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  var q = stats.quantile;\n  return [q(values, 0.25), q(values, 0.50), q(values, 0.75)];\n};\n\n// Compute the quantile of a sorted array of numbers.\n// Adapted from the D3.js implementation.\nstats.quantile = function(values, f, p) {\n  if (p === undefined) { p = f; f = util.identity; }\n  f = util.$(f);\n  var H = (values.length - 1) * p + 1,\n      h = Math.floor(H),\n      v = +f(values[h - 1]),\n      e = H - h;\n  return e ? v + e * (f(values[h]) - v) : v;\n};\n\n// Compute the sum of an array of numbers.\nstats.sum = function(values, f) {\n  f = util.$(f);\n  for (var sum=0, i=0, n=values.length, v; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) sum += v;\n  }\n  return sum;\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  f = util.$(f);\n  var mean = 0, delta, i, n, c, v;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  f = util.$(f);\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum value in an array.\nstats.min = function(values, f) {\n  return stats.extent(values, f)[0];\n};\n\n// Find the maximum value in an array.\nstats.max = function(values, f) {\n  return stats.extent(values, f)[1];\n};\n\n// Find the minimum and maximum of an array of values.\nstats.extent = function(values, f) {\n  f = util.$(f);\n  var a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) a = v;\n      if (v > b) b = v;\n    }\n  }\n  return [a, b];\n};\n\n// Find the integer indices of the minimum and maximum values.\nstats.extent.index = function(values, f) {\n  f = util.$(f);\n  var x = -1, y = -1, a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; x = y = i; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) { a = v; x = i; }\n      if (v > b) { b = v; y = i; }\n    }\n  }\n  return [x, y];\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i, v;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error('Array lengths must match.');\n    }\n    for (i=0; i<values.length; ++i) {\n      v = values[i] * a[i];\n      if (!Number.isNaN(v)) sum += v;\n    }\n  } else {\n    a = util.$(a);\n    b = util.$(b);\n    for (i=0; i<values.length; ++i) {\n      v = a(values[i]) * b(values[i]);\n      if (!Number.isNaN(v)) sum += v;\n    }\n  }\n  return sum;\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  f = util.$(f) || util.identity;\n  var a = values.map(function(v, i) {\n      return {idx: i, val: f(v)};\n    })\n    .sort(util.comparator('val'));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(util.$(b)) : a;\n  a = fn ? values.map(util.$(a)) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, util.$(a)) : stats.rank(values),\n      rb = b ? stats.rank(values, util.$(b)) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b) || util.isString(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      L2 = e === 2 || e == null,\n      n = values.length, s = 0, d, i;\n  if (f) {\n    a = util.$(a);\n    b = util.$(b);\n  }\n  for (i=0; i<n; ++i) {\n    d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n    s += L2 ? d*d : Math.pow(Math.abs(d), e);\n  }\n  return L2 ? Math.sqrt(s) : Math.pow(s, 1/e);\n};\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  f = util.$(f);\n  var i, p, s = 0, H = 0, n = counts.length;\n  for (i=0; i<n; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<n; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p) H += p * Math.log(p);\n  }\n  return -H / Math.LN2;\n};\n\n// Compute the mutual information between two discrete variables.\n// Returns an array of the form [MI, MI_distance] \n// MI_distance is defined as 1 - I(a,b) / H(a,b).\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(util.$(a)) : values,\n      y = counts ? values.map(util.$(b)) : a,\n      z = counts ? values.map(util.$(counts)) : b;\n\n  var px = {},\n      py = {},\n      n = z.length,\n      s = 0, I = 0, H = 0, p, t, i;\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] = 0;\n    py[y[i]] = 0;\n  }\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] += z[i];\n    py[y[i]] += z[i];\n    s += z[i];\n  }\n\n  t = 1 / (s * Math.LN2);\n  for (i=0; i<n; ++i) {\n    if (z[i] === 0) continue;\n    p = (s * z[i]) / (px[x[i]] * py[y[i]]);\n    I += z[i] * t * Math.log(p);\n    H += z[i] * t * Math.log(z[i]/s);\n  }\n\n  return [I, 1 + I/H];\n};\n\n// Compute the mutual information between two discrete variables.\nstats.mutual.info = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[0];\n};\n\n// Compute the mutual information distance between two discrete variables.\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\nstats.mutual.dist = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[1];\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  var mean = 0,\n      valid = 0,\n      missing = 0,\n      distinct = 0,\n      min = null,\n      max = null,\n      M2 = 0,\n      vals = [],\n      u = {}, delta, sd, i, v, x;\n\n  // compute summary stats\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n\n    // update unique values\n    u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n\n    if (v == null) {\n      ++missing;\n    } else if (util.isValid(v)) {\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      if (min===null || x < min) min = x;\n      if (max===null || x > max) max = x;\n      delta = x - mean;\n      mean = mean + delta / (++valid);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (valid - 1);\n  sd = Math.sqrt(M2);\n\n  // sort values for median and iqr\n  vals.sort(util.cmp);\n\n  return {\n    type:     type(values, f),\n    unique:   u,\n    count:    values.length,\n    valid:    valid,\n    missing:  missing,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   (v = stats.quantile(vals, 0.5)),\n    q1:       stats.quantile(vals, 0.25),\n    q3:       stats.quantile(vals, 0.75),\n    modeskew: sd === 0 ? 0 : (mean - v) / sd\n  };\n};\n\n// Compute profiles for all variables in a data set.\nstats.summary = function(data, fields) {\n  fields = fields || util.keys(data[0]);\n  var s = fields.map(function(f) {\n    var p = stats.profile(data, util.$(f));\n    return (p.field = f, p);\n  });\n  return (s.__summary__ = true, s);\n};\n\nmodule.exports = stats;","var STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction isNumber(d) { return typeof d === 'number'; }\n\nvar entries = [\n  {\n    type: 'second',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M:%S.%L',\n    date: function(d) {\n      return new Date(d * 1e3);\n    },\n    unit: function(d) {\n      return (+d / 1e3);\n    }\n  },\n  {\n    type: 'minute',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M',\n    date: function(d) {\n      return new Date(d * 6e4);\n    },\n    unit: function(d) {\n      return ~~(+d / 6e4);\n    }\n  },\n  {\n    type: 'hour',\n    minstep: 1,\n    format: '%Y %b %-d %H:00',\n    date: function(d) {\n      return new Date(d * 36e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 36e5);\n    }\n  },\n  {\n    type: 'day',\n    minstep: 1,\n    step: [1, 7],\n    format: '%Y %b %-d',\n    date: function(d) {\n      return new Date(d * 864e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 864e5);\n    }\n  },\n  {\n    type: 'month',\n    minstep: 1,\n    step: [1, 3, 6],\n    format: '%b %Y',\n    date: function(d) {\n      return new Date(Date.UTC(~~(d / 12), d % 12, 1));\n    },\n    unit: function(d) {\n      if (isNumber(d)) d = new Date(d);\n      return 12 * d.getUTCFullYear() + d.getUTCMonth();\n    }\n  },\n  {\n    type: 'year',\n    minstep: 1,\n    format: '%Y',\n    date: function(d) {\n      return new Date(Date.UTC(d, 0, 1));\n    },\n    unit: function(d) {\n      return (isNumber(d) ? new Date(d) : d).getUTCFullYear();\n    }\n  }\n];\n\nvar minuteOfHour = {\n  type: 'minuteOfHour',\n  min: 0,\n  max: 59,\n  minstep: 1,\n  format: '%M',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMinutes();\n  }\n};\n\nvar hourOfDay = {\n  type: 'hourOfDay',\n  min: 0,\n  max: 23,\n  minstep: 1,\n  format: '%H',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCHours();\n  }\n};\n\nvar dayOfWeek = {\n  type: 'dayOfWeek',\n  min: 0,\n  max: 6,\n  step: [1],\n  format: '%a',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 4 + d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDay();\n  }\n};\n\nvar dayOfMonth = {\n  type: 'dayOfMonth',\n  min: 1,\n  max: 31,\n  step: [1],\n  format: '%-d',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDate();\n  }\n};\n\nvar monthOfYear = {\n  type: 'monthOfYear',\n  min: 0,\n  max: 11,\n  step: [1],\n  format: '%b',\n  date: function(d) {\n    return new Date(Date.UTC(1970, d % 12, 1));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMonth();\n  }\n};\n\nvar units = {\n  'second':       entries[0],\n  'minute':       entries[1],\n  'hour':         entries[2],\n  'day':          entries[3],\n  'month':        entries[4],\n  'year':         entries[5],\n  'minuteOfHour': minuteOfHour,\n  'hourOfDay':    hourOfDay,\n  'dayOfWeek':    dayOfWeek,\n  'dayOfMonth':   dayOfMonth,\n  'monthOfYear':  monthOfYear,\n  'timesteps':    entries\n};\n\nunits.find = function(span, minb, maxb) {\n  var i, len, bins, step = STEPS[0];\n\n  for (i = 1, len = STEPS.length; i < len; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return entries[STEPS[i - 1][1]];\n      }\n      if (bins >= minb) {\n        return entries[step[1]];\n      }\n    }\n  }\n  return entries[STEPS[STEPS.length - 1][1]];\n};\n\nmodule.exports = units;\n","var Buffer = require('buffer').Buffer;\nvar units = require('./time-units');\nvar u = module.exports = {};\n\n// where are we?\n\nu.isNode = typeof process !== 'undefined' &&\n           typeof process.stderr !== 'undefined';\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && !Number.isNaN(obj);\n};\n\nu.isBuffer = (Buffer && Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\nu.date = function(s) {\n  return s == null || s === '' ? null : Date.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? ('\\''+util_escape_str(x)+'\\'') : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, '$1\\\\\\'');\n}\n\n// data access functions\n\nu.field = function(f) {\n  return String(f).split('\\\\.')\n    .map(function(d) { return d.split('.'); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += '.' + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nu.accessor = function(f) {\n  var s;\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, (s = u.field(f)).length > 1 ?\n      function(x) { return s.reduce(function(x,f) { return x[f]; }, x); } :\n      function(x) { return x[f]; }\n    );\n};\n\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\nu.$year   = u.$func('year', units.year.unit);\nu.$month  = u.$func('month', units.monthOfYear.unit);\nu.$date   = u.$func('date', units.dayOfMonth.unit);\nu.$day    = u.$func('day', units.dayOfWeek.unit);\nu.$hour   = u.$func('hour', units.hourOfDay.unit);\nu.$minute = u.$func('minute', units.minuteOfHour.unit);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null && b === null) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n\n// string functions\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nu.startsWith = String.prototype.startsWith ?\n  function(string, searchString) {\n    return string.startsWith(searchString);\n  } :\n  function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n","'use strict';\n\nrequire('./globals');\n\nvar consts = require('./consts'),\n  util = require('./util'),\n  vlfield = require('./field'),\n  vlenc = require('./enc'),\n  schema = require('./schema/schema');\n\nmodule.exports = (function() {\n  function Encoding(spec, theme) {\n    var defaults = schema.instantiate(),\n      specExtended = schema.util.merge(defaults, theme || {}, spec) ;\n\n    this._data = specExtended.data;\n    this._marktype = specExtended.marktype;\n    this._enc = specExtended.encoding;\n    this._config = specExtended.config;\n    this._filter = specExtended.filter;\n  }\n\n  var proto = Encoding.prototype;\n\n  Encoding.fromShorthand = function(shorthand, data, config, theme) {\n    var c = consts.shorthand,\n        split = shorthand.split(c.delim),\n        marktype = split.shift().split(c.assign)[1].trim(),\n        enc = vlenc.fromShorthand(split);\n\n    return new Encoding({\n      data: data,\n      marktype: marktype,\n      encoding: enc,\n      config: config,\n      filter: []\n    }, theme);\n  };\n\n  Encoding.fromSpec = function(spec, theme) {\n    return new Encoding(spec, theme);\n  };\n\n  proto.toShorthand = function() {\n    var c = consts.shorthand;\n    return 'mark' + c.assign + this._marktype +\n      c.delim + vlenc.shorthand(this._enc);\n  };\n\n  Encoding.shorthand = function (spec) {\n    var c = consts.shorthand;\n    return 'mark' + c.assign + spec.marktype +\n      c.delim + vlenc.shorthand(spec.encoding);\n  };\n\n  Encoding.specFromShorthand = function(shorthand, data, config, excludeConfig) {\n    return Encoding.fromShorthand(shorthand, data, config).toSpec(excludeConfig);\n  };\n\n  proto.toSpec = function(excludeConfig, excludeData) {\n    var enc = util.duplicate(this._enc),\n      spec;\n\n    spec = {\n      marktype: this._marktype,\n      encoding: enc,\n      filter: this._filter\n    };\n\n    if (!excludeConfig) {\n      spec.config = util.duplicate(this._config);\n    }\n\n    if (!excludeData) {\n      spec.data = util.duplicate(this._data);\n    }\n\n    // remove defaults\n    var defaults = schema.instantiate();\n    return schema.util.subtract(spec, defaults);\n  };\n\n\n  proto.marktype = function() {\n    return this._marktype;\n  };\n\n  proto.is = function(m) {\n    return this._marktype === m;\n  };\n\n  proto.has = function(encType) {\n    // equivalent to calling vlenc.has(this._enc, encType)\n    return this._enc[encType].name !== undefined;\n  };\n\n  proto.enc = function(et) {\n    return this._enc[et];\n  };\n\n  proto.filter = function() {\n    var filterNull = [],\n      fields = this.fields(),\n      self = this;\n\n    util.forEach(fields, function(fieldList, fieldName) {\n      if (fieldName === '*') return; //count\n\n      if ((self.config('filterNull').Q && fieldList.containsType[Q]) ||\n          (self.config('filterNull').T && fieldList.containsType[T]) ||\n          (self.config('filterNull').O && fieldList.containsType[O]) ||\n          (self.config('filterNull').N && fieldList.containsType[N])) {\n        filterNull.push({\n          operands: [fieldName],\n          operator: 'notNull'\n        });\n      }\n    });\n\n    return filterNull.concat(this._filter);\n  };\n\n  // get \"field\" property for vega\n  proto.field = function(et, nodata, nofn) {\n    if (!this.has(et)) return null;\n\n    var f = (nodata ? '' : 'data.');\n\n    if (vlfield.isCount(this._enc[et])) {\n      return f + 'count';\n    } else if (!nofn && this._enc[et].bin) {\n      return f + 'bin_' + this._enc[et].name;\n    } else if (!nofn && this._enc[et].aggregate) {\n      return f + this._enc[et].aggregate + '_' + this._enc[et].name;\n    } else if (!nofn && this._enc[et].fn) {\n      return f + this._enc[et].fn + '_' + this._enc[et].name;\n    } else {\n      return f + this._enc[et].name;\n    }\n  };\n\n  proto.fieldName = function(et) {\n    return this._enc[et].name;\n  };\n\n  /*\n   * return key-value pairs of field name and list of fields of that field name\n   */\n  proto.fields = function() {\n    return vlenc.fields(this._enc);\n  };\n\n  proto.fieldTitle = function(et) {\n    if (vlfield.isCount(this._enc[et])) {\n      return vlfield.count.displayName;\n    }\n    var fn = this._enc[et].aggregate || this._enc[et].fn || (this._enc[et].bin && 'bin');\n    if (fn) {\n      return fn.toUpperCase() + '(' + this._enc[et].name + ')';\n    } else {\n      return this._enc[et].name;\n    }\n  };\n\n  proto.scale = function(et) {\n    return this._enc[et].scale || {};\n  };\n\n  proto.axis = function(et) {\n    return this._enc[et].axis || {};\n  };\n\n  proto.band = function(et) {\n    return this._enc[et].band || {};\n  };\n\n  proto.bandSize = function(encType, useSmallBand) {\n    useSmallBand = useSmallBand ||\n      //isBandInSmallMultiples\n      (encType === Y && this.has(ROW) && this.has(Y)) ||\n      (encType === X && this.has(COL) && this.has(X));\n\n    // if band.size is explicitly specified, follow the specification, otherwise draw value from config.\n    return this.band(encType).size ||\n      this.config(useSmallBand ? 'smallBandSize' : 'largeBandSize');\n  };\n\n  proto.aggregate = function(et) {\n    return this._enc[et].aggregate;\n  };\n\n  // returns false if binning is disabled, otherwise an object with binning properties\n  proto.bin = function(et) {\n    var bin = this._enc[et].bin;\n    if (bin === {})\n      return false;\n    if (bin === true)\n      return {\n        maxbins: schema.MAXBINS_DEFAULT\n      };\n    return bin;\n  };\n\n  proto.legend = function(et) {\n    return this._enc[et].legend;\n  };\n\n  proto.value = function(et) {\n    return this._enc[et].value;\n  };\n\n  proto.fn = function(et) {\n    return this._enc[et].fn;\n  };\n\n  proto.sort = function(et, stats) {\n    var sort = this._enc[et].sort,\n      enc = this._enc,\n      isTypes = vlfield.isTypes;\n\n    if ((!sort || sort.length===0) &&\n        // FIXME\n        Encoding.toggleSort.support({enc:this._enc}, stats, true) && //HACK\n        this.config('toggleSort') === Q\n      ) {\n      var qField = isTypes(enc.x, [N, O]) ? enc.y : enc.x;\n\n      if (isTypes(enc[et], [N, O])) {\n        sort = [{\n          name: qField.name,\n          aggregate: qField.aggregate,\n          type: qField.type,\n          reverse: true\n        }];\n      }\n    }\n\n    return sort;\n  };\n\n  proto.length = function() {\n    return util.keys(this._enc).length;\n  };\n\n  proto.map = function(f) {\n    return vlenc.map(this._enc, f);\n  };\n\n  proto.reduce = function(f, init) {\n    return vlenc.reduce(this._enc, f, init);\n  };\n\n  proto.forEach = function(f) {\n    return vlenc.forEach(this._enc, f);\n  };\n\n  proto.type = function(et) {\n    return this.has(et) ? this._enc[et].type : null;\n  };\n\n  proto.role = function(et) {\n    return this.has(et) ? vlfield.role(this._enc[et]) : null;\n  };\n\n  proto.text = function(prop) {\n    var text = this._enc[TEXT].text;\n    return prop ? text[prop] : text;\n  };\n\n  proto.font = function(prop) {\n    var font = this._enc[TEXT].font;\n    return prop ? font[prop] : font;\n  };\n\n  proto.isType = function(et, type) {\n    var field = this.enc(et);\n    return field && Encoding.isType(field, type);\n  };\n\n  Encoding.isType = vlfield.isType;\n\n  Encoding.isOrdinalScale = function(encoding, encType) {\n    return vlfield.isOrdinalScale(encoding.enc(encType));\n  };\n\n  Encoding.isDimension = function(encoding, encType) {\n    return vlfield.isDimension(encoding.enc(encType));\n  };\n\n  Encoding.isMeasure = function(encoding, encType) {\n    return vlfield.isMeasure(encoding.enc(encType));\n  };\n\n  proto.isOrdinalScale = function(encType) {\n    return this.has(encType) && Encoding.isOrdinalScale(this, encType);\n  };\n\n  proto.isDimension = function(encType) {\n    return this.has(encType) && Encoding.isDimension(this, encType);\n  };\n\n  proto.isMeasure = function(encType) {\n    return this.has(encType) && Encoding.isMeasure(this, encType);\n  };\n\n  proto.isAggregate = function() {\n    return vlenc.isAggregate(this._enc);\n  };\n\n  Encoding.isAggregate = function(spec) {\n    return vlenc.isAggregate(spec.encoding);\n  };\n\n  Encoding.alwaysNoOcclusion = function(spec) {\n    // FIXME raw OxQ with # of rows = # of O\n    return vlenc.isAggregate(spec.encoding);\n  };\n\n  Encoding.isStack = function(spec) {\n    // FIXME update this once we have control for stack ...\n    return (spec.marktype === 'bar' || spec.marktype === 'area') &&\n      spec.encoding.color;\n  };\n\n  proto.isStack = function() {\n    // FIXME update this once we have control for stack ...\n    return (this.is('bar') || this.is('area')) && this.has('color');\n  };\n\n  proto.cardinality = function(encType, stats) {\n    return vlfield.cardinality(this.enc(encType), stats, this.config('filterNull'));\n  };\n\n  proto.isRaw = function() {\n    return !this.isAggregate();\n  };\n\n  proto.data = function(name) {\n    return this._data[name];\n  };\n\n   // returns whether the encoding has values embedded\n  proto.hasValues = function() {\n    var vals = this.data('values');\n    return vals && vals.length;\n  };\n\n  proto.config = function(name) {\n    return this._config[name];\n  };\n\n  Encoding.transpose = function(spec) {\n    var oldenc = spec.encoding,\n      enc = util.duplicate(spec.encoding);\n    enc.x = oldenc.y;\n    enc.y = oldenc.x;\n    enc.row = oldenc.col;\n    enc.col = oldenc.row;\n    spec.encoding = enc;\n    return spec;\n  };\n\n  // FIXME: REMOVE everything below here\n\n  Encoding.toggleSort = function(spec) {\n    spec.config = spec.config || {};\n    spec.config.toggleSort = spec.config.toggleSort === Q ? N : Q;\n    return spec;\n  };\n\n\n  Encoding.toggleSort.direction = function(spec) {\n    if (!Encoding.toggleSort.support(spec)) { return; }\n    var enc = spec.encoding;\n    return enc.x.type === N ? 'x' : 'y';\n  };\n\n  Encoding.toggleSort.mode = function(spec) {\n    return spec.config.toggleSort;\n  };\n\n  Encoding.toggleSort.support = function(spec, stats) {\n    var enc = spec.encoding,\n      isTypes = vlfield.isTypes;\n\n    if (vlenc.has(enc, ROW) || vlenc.has(enc, COL) ||\n      !vlenc.has(enc, X) || !vlenc.has(enc, Y) ||\n      !Encoding.alwaysNoOcclusion(spec, stats)) {\n      return false;\n    }\n\n    return ( isTypes(enc.x, [N,O]) && vlfield.isMeasure(enc.y)) ? 'x' :\n      ( isTypes(enc.y, [N,O]) && vlfield.isMeasure(enc.x)) ? 'y' : false;\n  };\n\n  Encoding.toggleFilterNullO = function(spec) {\n    spec.config = spec.config || {};\n    spec.config.filterNull = spec.config.filterNull || { //FIXME\n      T: true,\n      Q: true\n    };\n    spec.config.filterNull.O = !spec.config.filterNull.O;\n    return spec;\n  };\n\n  Encoding.toggleFilterNullO.support = function(spec, stats) {\n    var fields = vlenc.fields(spec.encoding);\n    for (var fieldName in fields) {\n      var fieldList = fields[fieldName];\n      if (fieldList.containsType.O && fieldName in stats && stats[fieldName].nulls > 0) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  return Encoding;\n})();\n","'use strict';\n\nrequire('../globals');\n\nvar util = require('../util');\n\nmodule.exports = aggregates;\n\nfunction aggregates(spec, encoding, opt) {\n  opt = opt || {};\n\n  var dims = {}, meas = {}, detail = {}, facets = {},\n    data = spec.data[1]; // currently data[0] is raw and data[1] is table\n\n  encoding.forEach(function(field, encType) {\n    if (field.aggregate) {\n      if (field.aggregate === 'count') {\n        meas.count = {op: 'count', field: '*'};\n      }else {\n        meas[field.aggregate + '|'+ field.name] = {\n          op: field.aggregate,\n          field: 'data.'+ field.name\n        };\n      }\n    } else {\n      dims[field.name] = encoding.field(encType);\n      if (encType == ROW || encType == COL) {\n        facets[field.name] = dims[field.name];\n      }else if (encType !== X && encType !== Y) {\n        detail[field.name] = dims[field.name];\n      }\n    }\n  });\n  dims = util.vals(dims);\n  meas = util.vals(meas);\n\n  if (meas.length > 0) {\n    if (!data.transform) data.transform = [];\n    data.transform.push({\n      type: 'aggregate',\n      groupby: dims,\n      fields: meas\n    });\n  }\n  return {\n    details: util.vals(detail),\n    dims: dims,\n    facets: util.vals(facets),\n    aggregated: meas.length > 0\n  };\n}\n","'use strict';\n\nrequire('../globals');\n\nvar util = require('../util'),\n  setter = util.setter,\n  getter = util.getter,\n  time = require('./time');\n\nvar axis = module.exports = {};\n\naxis.names = function(props) {\n  return util.keys(util.keys(props).reduce(function(a, x) {\n    var s = props[x].scale;\n    if (s === X || s === Y) a[props[x].scale] = 1;\n    return a;\n  }, {}));\n};\n\naxis.defs = function(names, encoding, layout, stats, opt) {\n  return names.reduce(function(a, name) {\n    a.push(axis.def(name, encoding, layout, stats, opt));\n    return a;\n  }, []);\n};\n\naxis.def = function(name, encoding, layout, stats, opt) {\n  var type = name;\n  var isCol = name == COL, isRow = name == ROW;\n  var rowOffset = axisTitleOffset(encoding, layout, Y) + 20,\n    cellPadding = layout.cellPadding;\n\n\n  if (isCol) type = 'x';\n  if (isRow) type = 'y';\n\n  var def = {\n    type: type,\n    scale: name\n  };\n\n  if (encoding.axis(name).grid) {\n    def.grid = true;\n    def.layer = 'back';\n\n    if (isCol) {\n      // set grid property -- put the lines on the right the cell\n      setter(def, ['properties', 'grid'], {\n        x: {\n          offset: layout.cellWidth * (1+ cellPadding/2.0),\n          // default value(s) -- vega doesn't do recursive merge\n          scale: 'col'\n        },\n        y: {\n          value: -layout.cellHeight * (cellPadding/2),\n        },\n        stroke: { value: encoding.config('cellGridColor') },\n        opacity: { value: encoding.config('cellGridOpacity') }\n      });\n    } else if (isRow) {\n      // set grid property -- put the lines on the top\n      setter(def, ['properties', 'grid'], {\n        y: {\n          offset: -layout.cellHeight * (cellPadding/2),\n          // default value(s) -- vega doesn't do recursive merge\n          scale: 'row'\n        },\n        x: {\n          value: rowOffset\n        },\n        x2: {\n          offset: rowOffset + (layout.cellWidth * 0.05),\n          // default value(s) -- vega doesn't do recursive merge\n          group: 'mark.group.width',\n          mult: 1\n        },\n        stroke: { value: encoding.config('cellGridColor') },\n        opacity: { value: encoding.config('cellGridOpacity') }\n      });\n    } else {\n      setter(def, ['properties', 'grid'], {\n        stroke: { value: encoding.config('gridColor') },\n        opacity: { value: encoding.config('gridOpacity') }\n      });\n    }\n  }\n\n  if (encoding.axis(name).title) {\n    def = axis_title(def, name, encoding, layout, opt);\n  }\n\n  if (isRow || isCol) {\n    setter(def, ['properties', 'ticks'], {\n      opacity: {value: 0}\n    });\n    setter(def, ['properties', 'majorTicks'], {\n      opacity: {value: 0}\n    });\n    setter(def, ['properties', 'axis'], {\n      opacity: {value: 0}\n    });\n  }\n\n  if (isCol) {\n    def.orient = 'top';\n  }\n\n  if (isRow) {\n    def.offset = rowOffset;\n  }\n\n  if (name == X) {\n    if (encoding.has(Y) && encoding.isOrdinalScale(Y) && encoding.cardinality(Y, stats) > 30) {\n      def.orient = 'top';\n    }\n\n    if (encoding.isDimension(X) || encoding.isType(X, T)) {\n      setter(def, ['properties','labels'], {\n        angle: {value: 270},\n        align: {value: 'right'},\n        baseline: {value: 'middle'}\n      });\n    } else { // Q\n      def.ticks = 5;\n    }\n  }\n\n  def = axis_labels(def, name, encoding, layout, opt);\n\n  return def;\n};\n\nfunction axis_title(def, name, encoding, layout, opt) {\n  // jshint unused:false\n\n  var maxlength = null,\n    fieldTitle = encoding.fieldTitle(name);\n  if (name===X) {\n    maxlength = layout.cellWidth / encoding.config('characterWidth');\n  } else if (name === Y) {\n    maxlength = layout.cellHeight / encoding.config('characterWidth');\n  }\n\n  def.title = maxlength ? util.truncate(fieldTitle, maxlength) : fieldTitle;\n\n  if (name === ROW) {\n    setter(def, ['properties','title'], {\n      angle: {value: 0},\n      align: {value: 'right'},\n      baseline: {value: 'middle'},\n      dy: {value: (-layout.height/2) -20}\n    });\n  }\n\n  def.titleOffset = axisTitleOffset(encoding, layout, name);\n  return def;\n}\n\nfunction axis_labels(def, name, encoding, layout, opt) {\n  // jshint unused:false\n\n  var fn;\n  // add custom label for time type\n  if (encoding.isType(name, T) && (fn = encoding.fn(name)) && (time.hasScale(fn))) {\n    setter(def, ['properties','labels','text','scale'], 'time-'+ fn);\n  }\n\n  var textTemplatePath = ['properties','labels','text','template'];\n  if (encoding.axis(name).format) {\n    def.format = encoding.axis(name).format;\n  } else if (encoding.isType(name, Q)) {\n    setter(def, textTemplatePath, '{{data | number:\\'.3s\\'}}');\n  } else if (encoding.isType(name, T)) {\n    if (!encoding.fn(name)) {\n      setter(def, textTemplatePath, '{{data | time:\\'%Y-%m-%d\\'}}');\n    } else if (encoding.fn(name) === 'year') {\n      setter(def, textTemplatePath, '{{data | number:\\'d\\'}}');\n    }\n  } else if (encoding.isType(name, [N, O]) && encoding.axis(name).maxLabelLength) {\n    setter(def, textTemplatePath, '{{data | truncate:' + encoding.axis(name).maxLabelLength + '}}');\n  }\n\n  return def;\n}\n\nfunction axisTitleOffset(encoding, layout, name) {\n  var value = encoding.axis(name).titleOffset;\n  if (value) {\n    return value;\n  }\n  switch (name) {\n    case ROW: return 0;\n    case COL: return 35;\n  }\n  return getter(layout, [name, 'axisTitleOffset']);\n}\n","'use strict';\n\nrequire('../globals');\n\nmodule.exports = binning;\n\nfunction binning(spec, encoding, opt) {\n  opt = opt || {};\n\n  if (!spec.transform) spec.transform = [];\n\n  encoding.forEach(function(field, encType) {\n    if (encoding.bin(encType)) {\n      spec.transform.push({\n        type: 'bin',\n        field: 'data.' + field.name,\n        output: 'data.bin_' + field.name,\n        maxbins: encoding.bin(encType).maxbins\n      });\n    }\n  });\n}\n","'use strict';\n\nvar summary = module.exports = require('datalib/src/stats').summary;\n\nrequire('../globals');\n\nmodule.exports = compile;\n\nvar Encoding = require('../Encoding'),\n  axis = compile.axis = require('./axis'),\n  filter = compile.filter = require('./filter'),\n  legend = compile.legend = require('./legend'),\n  marks = compile.marks = require('./marks'),\n  scale = compile.scale = require('./scale');\n\ncompile.aggregate = require('./aggregate');\ncompile.bin = require('./bin');\ncompile.facet = require('./facet');\ncompile.group = require('./group');\ncompile.layout = require('./layout');\ncompile.sort = require('./sort');\ncompile.stack = require('./stack');\ncompile.style = require('./style');\ncompile.subfacet = require('./subfacet');\ncompile.template = require('./template');\ncompile.time = require('./time');\n\nfunction compile(spec, stats, theme) {\n  return compile.encoding(Encoding.fromSpec(spec, theme), stats);\n}\n\ncompile.shorthand = function (shorthand, stats, config, theme) {\n  return compile.encoding(Encoding.fromShorthand(shorthand, config, theme), stats);\n};\n\ncompile.encoding = function (encoding, stats) {\n  // no need to pass stats if you pass in the data\n  if (!stats && encoding.hasValues()) {\n    stats = summary(encoding.data('values')).reduce(function(s, p) {\n      s[p.field] = p;\n      return s;\n    }, {});\n  }\n\n  var layout = compile.layout(encoding, stats),\n    style = compile.style(encoding, stats),\n    spec = compile.template(encoding, layout, stats),\n    group = spec.marks[0],\n    mark = marks[encoding.marktype()],\n    mdefs = marks.def(mark, encoding, layout, style),\n    mdef = mdefs[0];  // TODO: remove this dirty hack by refactoring the whole flow\n\n  filter.addFilters(spec, encoding);\n  var sorting = compile.sort(spec, encoding, stats);\n\n  var hasRow = encoding.has(ROW), hasCol = encoding.has(COL);\n\n  for (var i = 0; i < mdefs.length; i++) {\n    group.marks.push(mdefs[i]);\n  }\n\n  compile.bin(spec.data[1], encoding);\n\n  var lineType = marks[encoding.marktype()].line;\n\n  spec = compile.time(spec, encoding);\n\n  // handle subfacets\n  var aggResult = compile.aggregate(spec, encoding),\n    details = aggResult.details,\n    hasDetails = details && details.length > 0,\n    stack = hasDetails && compile.stack(spec, encoding, mdef, aggResult.facets);\n\n  if (hasDetails && (stack || lineType)) {\n    //subfacet to group stack / line together in one group\n    compile.subfacet(group, mdef, details, stack, encoding);\n  }\n\n  // auto-sort line/area values\n  //TODO(kanitw): have some config to turn off auto-sort for line (for line chart that encodes temporal information)\n  if (lineType) {\n    var f = (encoding.isMeasure(X) && encoding.isDimension(Y)) ? Y : X;\n    if (!mdef.from) mdef.from = {};\n    // TODO: why - ?\n    mdef.from.transform = [{type: 'sort', by: '-' + encoding.field(f)}];\n  }\n\n  // Small Multiples\n  if (hasRow || hasCol) {\n    spec = compile.facet(group, encoding, layout, style, sorting, spec, mdef, stack, stats);\n    spec.legends = legend.defs(encoding);\n  } else {\n    group.scales = scale.defs(scale.names(mdef.properties.update), encoding, layout, stats, style, sorting, {stack: stack});\n    group.axes = axis.defs(axis.names(mdef.properties.update), encoding, layout, stats);\n    group.legends = legend.defs(encoding);\n  }\n\n  filter.filterLessThanZero(spec, encoding);\n\n  return spec;\n};\n\n","'use strict';\n\nrequire('../globals');\n\nvar util = require('../util');\n\nvar axis = require('./axis'),\n  groupdef = require('./group').def,\n  scale = require('./scale');\n\nmodule.exports = faceting;\n\nfunction faceting(group, encoding, layout, style, sorting, spec, mdef, stack, stats) {\n  var enter = group.properties.enter;\n  var facetKeys = [], cellAxes = [], from, axesGrp;\n\n  var hasRow = encoding.has(ROW), hasCol = encoding.has(COL);\n\n  enter.fill = {value: encoding.config('cellBackgroundColor')};\n\n  //move \"from\" to cell level and add facet transform\n  group.from = {data: group.marks[0].from.data};\n\n  // Hack, this needs to be refactored\n  for (var i = 0; i < group.marks.length; i++) {\n    var mark = group.marks[i];\n    if (mark.from.transform) {\n      delete mark.from.data; //need to keep transform for subfacetting case\n    } else {\n      delete mark.from;\n    }\n  }\n\n  if (hasRow) {\n    if (!encoding.isDimension(ROW)) {\n      util.error('Row encoding should be ordinal.');\n    }\n    enter.y = {scale: ROW, field: 'keys.' + facetKeys.length};\n    enter.height = {'value': layout.cellHeight}; // HACK\n\n    facetKeys.push(encoding.field(ROW));\n\n    if (hasCol) {\n      from = util.duplicate(group.from);\n      from.transform = from.transform || [];\n      from.transform.unshift({type: 'facet', keys: [encoding.field(COL)]});\n    }\n\n    axesGrp = groupdef('x-axes', {\n        axes: encoding.has(X) ? axis.defs(['x'], encoding, layout, stats) : undefined,\n        x: hasCol ? {scale: COL, field: 'keys.0'} : {value: 0},\n        width: hasCol && {'value': layout.cellWidth}, //HACK?\n        from: from\n      });\n\n    spec.marks.unshift(axesGrp); // need to prepend so it appears under the plots\n    (spec.axes = spec.axes || []);\n    spec.axes.push.apply(spec.axes, axis.defs(['row'], encoding, layout, stats));\n  } else { // doesn't have row\n    if (encoding.has(X)) {\n      //keep x axis in the cell\n      cellAxes.push.apply(cellAxes, axis.defs(['x'], encoding, layout, stats));\n    }\n  }\n\n  if (hasCol) {\n    if (!encoding.isDimension(COL)) {\n      util.error('Col encoding should be ordinal.');\n    }\n    enter.x = {scale: COL, field: 'keys.' + facetKeys.length};\n    enter.width = {'value': layout.cellWidth}; // HACK\n\n    facetKeys.push(encoding.field(COL));\n\n    if (hasRow) {\n      from = util.duplicate(group.from);\n      from.transform = from.transform || [];\n      from.transform.unshift({type: 'facet', keys: [encoding.field(ROW)]});\n    }\n\n    axesGrp = groupdef('y-axes', {\n      axes: encoding.has(Y) ? axis.defs(['y'], encoding, layout, stats) : undefined,\n      y: hasRow && {scale: ROW, field: 'keys.0'},\n      x: hasRow && {value: 0},\n      height: hasRow && {'value': layout.cellHeight}, //HACK?\n      from: from\n    });\n\n    spec.marks.unshift(axesGrp); // need to prepend so it appears under the plots\n    (spec.axes = spec.axes || []);\n    spec.axes.push.apply(spec.axes, axis.defs(['col'], encoding, layout, stats));\n  } else { // doesn't have col\n    if (encoding.has(Y)) {\n      cellAxes.push.apply(cellAxes, axis.defs(['y'], encoding, layout, stats));\n    }\n  }\n\n  // assuming equal cellWidth here\n  // TODO: support heterogenous cellWidth (maybe by using multiple scales?)\n  spec.scales = (spec.scales || []).concat(scale.defs(\n    scale.names(enter).concat(scale.names(mdef.properties.update)),\n    encoding,\n    layout,\n    stats,\n    style,\n    sorting,\n    {stack: stack, facet: true}\n  )); // row/col scales + cell scales\n\n  if (cellAxes.length > 0) {\n    group.axes = cellAxes;\n  }\n\n  // add facet transform\n  var trans = (group.from.transform || (group.from.transform = []));\n  trans.unshift({type: 'facet', keys: facetKeys});\n\n  return spec;\n}\n","'use strict';\n\nrequire('../globals');\n\nvar filter = module.exports = {};\n\nvar BINARY = {\n  '>':  true,\n  '>=': true,\n  '=':  true,\n  '!=': true,\n  '<':  true,\n  '<=': true\n};\n\nfilter.addFilters = function(spec, encoding) {\n  var filters = encoding.filter(),\n    data = spec.data[0];  // apply filters to raw data before aggregation\n\n  if (!data.transform)\n    data.transform = [];\n\n  // add custom filters\n  for (var i in filters) {\n    var filter = filters[i];\n\n    var condition = '';\n    var operator = filter.operator;\n    var operands = filter.operands;\n\n    if (BINARY[operator]) {\n      // expects a field and a value\n      if (operator === '=') {\n        operator = '==';\n      }\n\n      var op1 = operands[0];\n      var op2 = operands[1];\n      condition = 'd.data.' + op1 + operator + op2;\n    } else if (operator === 'notNull') {\n      // expects a number of fields\n      for (var j in operands) {\n        condition += 'd.data.' + operands[j] + '!==null';\n        if (j < operands.length - 1) {\n          condition += ' && ';\n        }\n      }\n    } else {\n      console.warn('Unsupported operator: ', operator);\n    }\n\n    data.transform.push({\n      type: 'filter',\n      test: condition\n    });\n  }\n};\n\n// remove less than 0 values if we use log function\nfilter.filterLessThanZero = function(spec, encoding) {\n  encoding.forEach(function(field, encType) {\n    if (encoding.scale(encType).type === 'log') {\n      spec.data[1].transform.push({\n        type: 'filter',\n        test: 'd.' + encoding.field(encType) + '>0'\n      });\n    }\n  });\n};\n\n","'use strict';\n\nmodule.exports = {\n  def: groupdef\n};\n\nfunction groupdef(name, opt) {\n  opt = opt || {};\n  return {\n    _name: name || undefined,\n    type: 'group',\n    from: opt.from,\n    properties: {\n      enter: {\n        x: opt.x || undefined,\n        y: opt.y || undefined,\n        width: opt.width || {group: 'width'},\n        height: opt.height || {group: 'height'}\n      }\n    },\n    scales: opt.scales || undefined,\n    axes: opt.axes || undefined,\n    marks: opt.marks || []\n  };\n}\n","'use strict';\n\nrequire('../globals');\n\nvar util = require('../util'),\n  setter = util.setter;\n\nmodule.exports = vllayout;\n\nfunction vllayout(encoding, stats) {\n  var layout = box(encoding, stats);\n  layout = offset(encoding, stats, layout);\n  return layout;\n}\n\n/*\n  HACK to set chart size\n  NOTE: this fails for plots driven by derived values (e.g., aggregates)\n  One solution is to update Vega to support auto-sizing\n  In the meantime, auto-padding (mostly) does the trick\n */\nfunction box(encoding, stats) {\n  var hasRow = encoding.has(ROW),\n      hasCol = encoding.has(COL),\n      hasX = encoding.has(X),\n      hasY = encoding.has(Y),\n      marktype = encoding.marktype();\n\n  // FIXME/HACK we need to take filter into account\n  var xCardinality = hasX && encoding.isDimension(X) ? encoding.cardinality(X, stats) : 1,\n    yCardinality = hasY && encoding.isDimension(Y) ? encoding.cardinality(Y, stats) : 1;\n\n  var useSmallBand = xCardinality > encoding.config('largeBandMaxCardinality') ||\n    yCardinality > encoding.config('largeBandMaxCardinality');\n\n  var cellWidth, cellHeight, cellPadding = encoding.config('cellPadding');\n\n  // set cellWidth\n  if (hasX) {\n    if (encoding.isOrdinalScale(X)) {\n      // for ordinal, hasCol or not doesn't matter -- we scale based on cardinality\n      cellWidth = (xCardinality + encoding.band(X).padding) * encoding.bandSize(X, useSmallBand);\n    } else {\n      cellWidth = hasCol || hasRow ? encoding.enc(COL).width :  encoding.config('singleWidth');\n    }\n  } else {\n    if (marktype === TEXT) {\n      cellWidth = encoding.config('textCellWidth');\n    } else {\n      cellWidth = encoding.bandSize(X);\n    }\n  }\n\n  // set cellHeight\n  if (hasY) {\n    if (encoding.isOrdinalScale(Y)) {\n      // for ordinal, hasCol or not doesn't matter -- we scale based on cardinality\n      cellHeight = (yCardinality + encoding.band(Y).padding) * encoding.bandSize(Y, useSmallBand);\n    } else {\n      cellHeight = hasCol || hasRow ? encoding.enc(ROW).height :  encoding.config('singleHeight');\n    }\n  } else {\n    cellHeight = encoding.bandSize(Y);\n  }\n\n  // Cell bands use rangeBands(). There are n-1 padding.  Outerpadding = 0 for cells\n\n  var width = cellWidth, height = cellHeight;\n  if (hasCol) {\n    var colCardinality = encoding.cardinality(COL, stats);\n    width = cellWidth * ((1 + cellPadding) * (colCardinality - 1) + 1);\n  }\n  if (hasRow) {\n    var rowCardinality =  encoding.cardinality(ROW, stats);\n    height = cellHeight * ((1 + cellPadding) * (rowCardinality - 1) + 1);\n  }\n\n  return {\n    // width and height of the whole cell\n    cellWidth: cellWidth,\n    cellHeight: cellHeight,\n    cellPadding: cellPadding,\n    // width and height of the chart\n    width: width,\n    height: height,\n    // information about x and y, such as band size\n    x: {useSmallBand: useSmallBand},\n    y: {useSmallBand: useSmallBand}\n  };\n}\n\nfunction getMaxLength(encoding, stats, et) {\n  // FIXME determine constant for Q and T in a nicer way\n  return encoding.isType(et, Q) ? 20 :\n    encoding.isType(et, T) ? 20 :\n    stats[encoding.fieldName(et)].max;\n}\n\nfunction offset(encoding, stats, layout) {\n  [X, Y].forEach(function (x) {\n    var maxLength;\n    if (encoding.isDimension(x) || encoding.isType(x, T)) {\n      maxLength =  getMaxLength(encoding, stats, x);\n    } else if (encoding.aggregate(x) === 'count') {\n      //assign default value for count as it won't have stats\n      maxLength =  3;\n    } else if (encoding.isType(x, Q)) {\n      if (x===X) {\n        maxLength = 3;\n      } else { // Y\n        //assume that default formating is always shorter than 7\n        maxLength = Math.min(getMaxLength(encoding, stats, x), 7);\n      }\n    }\n    setter(layout,[x, 'axisTitleOffset'], encoding.config('characterWidth') *  maxLength + 20);\n  });\n  return layout;\n}\n","'use strict';\n\nrequire('../globals');\n\nvar time = require('./time');\n\nvar legend = module.exports = {};\n\nlegend.defs = function(encoding) {\n  var defs = [];\n  // TODO: support alpha\n\n  if (encoding.has(COLOR) && encoding.legend(COLOR)) {\n    defs.push(legend.def(COLOR, encoding, {\n      fill: COLOR,\n      orient: 'right'\n    }));\n  }\n\n  if (encoding.has(SIZE) && encoding.legend(SIZE)) {\n    defs.push(legend.def(SIZE, encoding, {\n      size: SIZE,\n      orient: defs.length === 1 ? 'left' : 'right'\n    }));\n  }\n\n  if (encoding.has(SHAPE) && encoding.legend(SHAPE)) {\n    if (defs.length === 2) {\n      // TODO: fix this\n      console.error('Vega-lite currently only supports two legends');\n      return defs;\n    }\n    defs.push(legend.def(SHAPE, encoding, {\n      shape: SHAPE,\n      orient: defs.length === 1 ? 'left' : 'right'\n    }));\n  }\n\n  return defs;\n};\n\nlegend.def = function(name, encoding, props) {\n  var def = props, fn;\n\n  def.title = encoding.fieldTitle(name);\n\n  if (encoding.isType(name, T) && (fn = encoding.fn(name)) &&\n    time.hasScale(fn)) {\n    var properties = def.properties = def.properties || {},\n      labels = properties.labels = properties.labels || {},\n      text = labels.text = labels.text || {};\n\n    text.scale = 'time-'+ fn;\n  }\n\n  return def;\n};\n","'use strict';\n\nrequire('../globals');\n\nvar marks = module.exports = {};\n\nmarks.def = function(mark, encoding, layout, style) {\n  var defs = [];\n\n  // to add a background to text, we need to add it before the text\n  if (encoding.marktype() === TEXT && encoding.has(COLOR)) {\n    var bg = {\n      x: {value: 0},\n      y: {value: 0},\n      x2: {value: layout.cellWidth},\n      y2: {value: layout.cellHeight},\n      fill: {scale: COLOR, field: encoding.field(COLOR)}\n    };\n    defs.push({\n      type: 'rect',\n      from: {data: TABLE},\n      properties: {enter: bg, update: bg}\n    });\n  }\n\n  // add the mark def for the main thing\n  var p = mark.prop(encoding, layout, style);\n  defs.push({\n    type: mark.type,\n    from: {data: TABLE},\n    properties: {enter: p, update: p}\n  });\n\n  return defs;\n};\n\nmarks.bar = {\n  type: 'rect',\n  stack: true,\n  prop: bar_props,\n  requiredEncoding: ['x', 'y'],\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, size: 1, color: 1, alpha: 1}\n};\n\nmarks.line = {\n  type: 'line',\n  line: true,\n  prop: line_props,\n  requiredEncoding: ['x', 'y'],\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, color: 1, alpha: 1, detail:1}\n};\n\nmarks.area = {\n  type: 'area',\n  stack: true,\n  line: true,\n  requiredEncoding: ['x', 'y'],\n  prop: area_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, color: 1, alpha: 1}\n};\n\nmarks.tick = {\n  type: 'rect',\n  prop: tick_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, color: 1, alpha: 1, detail: 1}\n};\n\nmarks.circle = {\n  type: 'symbol',\n  prop: filled_point_props('circle'),\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, size: 1, color: 1, alpha: 1, detail: 1}\n};\n\nmarks.square = {\n  type: 'symbol',\n  prop: filled_point_props('square'),\n  supportedEncoding: marks.circle.supportedEncoding\n};\n\nmarks.point = {\n  type: 'symbol',\n  prop: point_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, size: 1, color: 1, alpha: 1, shape: 1, detail: 1}\n};\n\nmarks.text = {\n  type: 'text',\n  prop: text_props,\n  requiredEncoding: ['text'],\n  supportedEncoding: {row: 1, col: 1, size: 1, color: 1, alpha: 1, text: 1}\n};\n\nfunction bar_props(e, layout, style) {\n  // jshint unused:false\n\n  var p = {};\n\n  // x's and width\n  if (e.isMeasure(X)) {\n    p.x = {scale: X, field: e.field(X)};\n    if (!e.has(Y) || e.isDimension(Y)) {\n      p.x2 = {value: 0};\n    }\n  } else {\n    if (e.has(X)) { // is ordinal\n       p.xc = {scale: X, field: e.field(X)};\n    } else {\n       p.x = {value: 0, offset: e.config('singleBarOffset')};\n    }\n  }\n\n  // width\n  if (!p.x2) {\n    if (!e.has(X) || e.isOrdinalScale(X)) { // no X or X is ordinal\n      if (e.has(SIZE)) {\n        p.width = {scale: SIZE, field: e.field(SIZE)};\n      } else {\n        p.width = {\n          value: e.bandSize(X, layout.x.useSmallBand),\n          offset: -1\n        };\n      }\n    } else { // X is Quant or Time Scale\n      p.width = {value: 2};\n    }\n  }\n\n  // y's & height\n  if (e.isMeasure(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n    p.y2 = {group: 'height'};\n  } else {\n    if (e.has(Y)) { // is ordinal\n      p.yc = {scale: Y, field: e.field(Y)};\n    } else {\n      p.y2 = {group: 'height', offset: -e.config('singleBarOffset')};\n    }\n\n    if (e.has(SIZE)) {\n      p.height = {scale: SIZE, field: e.field(SIZE)};\n    } else {\n      p.height = {\n        value: e.bandSize(Y, layout.y.useSmallBand),\n        offset: -1\n      };\n    }\n  }\n\n\n\n  // fill\n  if (e.has(COLOR)) {\n    p.fill = {scale: COLOR, field: e.field(COLOR)};\n  } else {\n    p.fill = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  }\n\n  return p;\n}\n\nfunction point_props(e, layout, style) {\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n  } else if (!e.has(X)) {\n    p.x = {value: e.bandSize(X, layout.x.useSmallBand) / 2};\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n  } else if (!e.has(Y)) {\n    p.y = {value: e.bandSize(Y, layout.y.useSmallBand) / 2};\n  }\n\n  // size\n  if (e.has(SIZE)) {\n    p.size = {scale: SIZE, field: e.field(SIZE)};\n  } else if (!e.has(SIZE)) {\n    p.size = {value: e.value(SIZE)};\n  }\n\n  // shape\n  if (e.has(SHAPE)) {\n    p.shape = {scale: SHAPE, field: e.field(SHAPE)};\n  } else if (!e.has(SHAPE)) {\n    p.shape = {value: e.value(SHAPE)};\n  }\n\n  // stroke\n  if (e.has(COLOR)) {\n    p.stroke = {scale: COLOR, field: e.field(COLOR)};\n  } else if (!e.has(COLOR)) {\n    p.stroke = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  } else if (!e.has(COLOR)) {\n    p.opacity = {value: style.opacity};\n  }\n\n  p.strokeWidth = {value: e.config('strokeWidth')};\n\n  return p;\n}\n\nfunction line_props(e,layout, style) {\n  // jshint unused:false\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n  } else if (!e.has(X)) {\n    p.x = {value: 0};\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n  } else if (!e.has(Y)) {\n    p.y = {group: 'height'};\n  }\n\n  // stroke\n  if (e.has(COLOR)) {\n    p.stroke = {scale: COLOR, field: e.field(COLOR)};\n  } else if (!e.has(COLOR)) {\n    p.stroke = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  }\n\n  p.strokeWidth = {value: e.config('strokeWidth')};\n\n  return p;\n}\n\nfunction area_props(e, layout, style) {\n  // jshint unused:false\n  var p = {};\n\n  // x\n  if (e.isMeasure(X)) {\n    p.x = {scale: X, field: e.field(X)};\n    if (e.isDimension(Y)) {\n      p.x2 = {scale: X, value: 0};\n      p.orient = {value: 'horizontal'};\n    }\n  } else if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n  } else {\n    p.x = {value: 0};\n  }\n\n  // y\n  if (e.isMeasure(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n    p.y2 = {scale: Y, value: 0};\n  } else if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n  } else {\n    p.y = {group: 'height'};\n  }\n\n  // stroke\n  if (e.has(COLOR)) {\n    p.fill = {scale: COLOR, field: e.field(COLOR)};\n  } else if (!e.has(COLOR)) {\n    p.fill = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  }\n\n  return p;\n}\n\nfunction tick_props(e, layout, style) {\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n    if (e.isDimension(X)) {\n      p.x.offset = -e.bandSize(X, layout.x.useSmallBand) / 3;\n    }\n  } else if (!e.has(X)) {\n    p.x = {value: 0};\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n    if (e.isDimension(Y)) {\n      p.y.offset = -e.bandSize(Y, layout.y.useSmallBand) / 3;\n    }\n  } else if (!e.has(Y)) {\n    p.y = {value: 0};\n  }\n\n  // width\n  if (!e.has(X) || e.isDimension(X)) {\n    p.width = {value: e.bandSize(X, layout.y.useSmallBand) / 1.5};\n  } else {\n    p.width = {value: 1};\n  }\n\n  // height\n  if (!e.has(Y) || e.isDimension(Y)) {\n    p.height = {value: e.bandSize(Y, layout.y.useSmallBand) / 1.5};\n  } else {\n    p.height = {value: 1};\n  }\n\n  // fill\n  if (e.has(COLOR)) {\n    p.fill = {scale: COLOR, field: e.field(COLOR)};\n  } else {\n    p.fill = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  } else if (!e.has(COLOR)) {\n    p.opacity = {value: style.opacity};\n  }\n\n  return p;\n}\n\nfunction filled_point_props(shape) {\n  return function(e, layout, style) {\n    var p = {};\n\n    // x\n    if (e.has(X)) {\n      p.x = {scale: X, field: e.field(X)};\n    } else if (!e.has(X)) {\n      p.x = {value: e.bandSize(X, layout.x.useSmallBand) / 2};\n    }\n\n    // y\n    if (e.has(Y)) {\n      p.y = {scale: Y, field: e.field(Y)};\n    } else if (!e.has(Y)) {\n      p.y = {value: e.bandSize(Y, layout.y.useSmallBand) / 2};\n    }\n\n    // size\n    if (e.has(SIZE)) {\n      p.size = {scale: SIZE, field: e.field(SIZE)};\n    } else if (!e.has(X)) {\n      p.size = {value: e.value(SIZE)};\n    }\n\n    // shape\n    p.shape = {value: shape};\n\n    // fill\n    if (e.has(COLOR)) {\n      p.fill = {scale: COLOR, field: e.field(COLOR)};\n    } else if (!e.has(COLOR)) {\n      p.fill = {value: e.value(COLOR)};\n    }\n\n    // alpha\n    if (e.has(ALPHA)) {\n      p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n    } else if (e.value(ALPHA) !== undefined) {\n      p.opacity = {value: e.value(ALPHA)};\n    } else if (!e.has(COLOR)) {\n      p.opacity = {value: style.opacity};\n    }\n\n    return p;\n  };\n}\n\nfunction text_props(e, layout, style) {\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n  } else if (!e.has(X)) {\n    if (e.has(TEXT) && e.isType(TEXT, Q)) {\n      p.x = {value: layout.cellWidth-5};\n    } else {\n      p.x = {value: e.bandSize(X, layout.x.useSmallBand) / 2};\n    }\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n  } else if (!e.has(Y)) {\n    p.y = {value: e.bandSize(Y, layout.y.useSmallBand) / 2};\n  }\n\n  // size\n  if (e.has(SIZE)) {\n    p.fontSize = {scale: SIZE, field: e.field(SIZE)};\n  } else if (!e.has(SIZE)) {\n    p.fontSize = {value: e.font('size')};\n  }\n\n  // fill\n  // color should be set to background\n  p.fill = {value: 'black'};\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  } else {\n    p.opacity = {value: style.opacity};\n  }\n\n  // text\n  if (e.has(TEXT)) {\n    if (e.isType(TEXT, Q)) {\n      p.text = {template: '{{' + e.field(TEXT) + ' | number:\\'.3s\\'}}'};\n      p.align = {value: 'right'};\n    } else {\n      p.text = {field: e.field(TEXT)};\n    }\n  } else {\n    p.text = {value: 'Abc'};\n  }\n\n  p.font = {value: e.font('family')};\n  p.fontWeight = {value: e.font('weight')};\n  p.fontStyle = {value: e.font('style')};\n  p.baseline = {value: e.text('baseline')};\n\n  return p;\n}\n","'use strict';\nrequire('../globals');\nvar util = require('../util'),\n  time = require('./time'),\n  colorbrewer = require('../lib/colorbrewer/colorbrewer'),\n  interpolateLab = require('../lib/d3-color/interpolate-lab');\n\nvar scale = module.exports = {};\n\nscale.names = function(props) {\n  return util.keys(util.keys(props).reduce(function(a, x) {\n    if (props[x] && props[x].scale) a[props[x].scale] = 1;\n    return a;\n  }, {}));\n};\n\nscale.defs = function(names, encoding, layout, stats, style, sorting, opt) {\n  opt = opt || {};\n\n  return names.reduce(function(a, name) {\n    var s = {\n      name: name,\n      type: scale.type(name, encoding),\n      domain: scale_domain(name, encoding, sorting, opt)\n    };\n    if (s.type === 'ordinal' && !encoding.bin(name) && encoding.sort(name).length === 0) {\n      s.sort = true;\n    }\n\n    scale_range(s, encoding, layout, stats, style, opt);\n\n    return (a.push(s), a);\n  }, []);\n};\n\nscale.type = function(name, encoding) {\n\n  switch (encoding.type(name)) {\n    case N: //fall through\n    case O: return 'ordinal';\n    case T:\n      var fn = encoding.fn(name);\n      return (fn && time.scale.type(fn, name)) || 'time';\n    case Q:\n      if (encoding.bin(name)) {\n        return name === COLOR ? 'linear' : 'ordinal';\n      }\n      return encoding.scale(name).type;\n  }\n};\n\nfunction scale_domain(name, encoding, sorting, opt) {\n  if (encoding.isType(name, T)) {\n    var range = time.scale.domain(encoding.fn(name), name);\n    if(range) return range;\n  }\n\n  return name == opt.stack ?\n    {\n      data: STACKED,\n      field: 'data.' + (opt.facet ? 'max_' : '') + 'sum_' + encoding.field(name, true)\n    } :\n    {data: sorting.getDataset(name), field: encoding.field(name)};\n}\n\nfunction scale_range(s, encoding, layout, stats, style, opt) {\n  // jshint unused:false\n  var spec = encoding.scale(s.name);\n  switch (s.name) {\n    case X:\n      if (s.type === 'ordinal') {\n        s.bandWidth = encoding.bandSize(X, layout.x.useSmallBand);\n      } else {\n        s.range = layout.cellWidth ? [0, layout.cellWidth] : 'width';\n\n        if (encoding.isType(s.name,T) && encoding.fn(s.name) === 'year') {\n          s.zero = false;\n        } else {\n          s.zero = spec.zero === undefined ? true : spec.zero;\n        }\n\n        s.reverse = spec.reverse;\n      }\n      s.round = true;\n      if (s.type === 'time') {\n        s.nice = encoding.fn(s.name);\n      }else {\n        s.nice = true;\n      }\n      break;\n    case Y:\n      if (s.type === 'ordinal') {\n        s.bandWidth = encoding.bandSize(Y, layout.y.useSmallBand);\n      } else {\n        s.range = layout.cellHeight ? [layout.cellHeight, 0] : 'height';\n\n        if (encoding.isType(s.name,T) && encoding.fn(s.name) === 'year') {\n          s.zero = false;\n        } else {\n          s.zero = spec.zero === undefined ? true : spec.zero;\n        }\n\n        s.reverse = spec.reverse;\n      }\n\n      s.round = true;\n\n      if (s.type === 'time') {\n        s.nice = encoding.fn(s.name) || encoding.config('timeScaleNice');\n      }else {\n        s.nice = true;\n      }\n      break;\n    case ROW: // support only ordinal\n      s.bandWidth = layout.cellHeight;\n      s.round = true;\n      s.nice = true;\n      break;\n    case COL: // support only ordinal\n      s.bandWidth = layout.cellWidth;\n      s.round = true;\n      s.nice = true;\n      break;\n    case SIZE:\n      if (encoding.is('bar')) {\n        // FIXME this is definitely incorrect\n        // but let's fix it later since bar size is a bad encoding anyway\n        s.range = [3, Math.max(encoding.bandSize(X), encoding.bandSize(Y))];\n      } else if (encoding.is(TEXT)) {\n        s.range = [8, 40];\n      } else { //point\n        var bandSize = Math.min(encoding.bandSize(X), encoding.bandSize(Y)) - 1;\n        s.range = [10, 0.8 * bandSize*bandSize];\n      }\n      s.round = true;\n      s.zero = false;\n      break;\n    case SHAPE:\n      s.range = 'shapes';\n      break;\n    case COLOR:\n      s.range = scale.color(s, encoding, stats);\n      break;\n    case ALPHA:\n      s.range = [0.2, 1.0];\n      break;\n    default:\n      throw new Error('Unknown encoding name: '+ s.name);\n  }\n\n  switch (s.name) {\n    case ROW:\n    case COL:\n      s.padding = encoding.config('cellPadding');\n      s.outerPadding = 0;\n      break;\n    case X:\n    case Y:\n      if (s.type === 'ordinal') { //&& !s.bandWidth\n        s.points = true;\n        s.padding = encoding.band(s.name).padding;\n      }\n  }\n}\n\nscale.color = function(s, encoding, stats) {\n  var range = encoding.scale(COLOR).range,\n    cardinality = encoding.cardinality(COLOR, stats),\n    type = encoding.type(COLOR);\n\n  if (range === undefined) {\n    var ordinalPalette = encoding.config('ordinalPalette');\n    if (s.type === 'ordinal') {\n      if (type === N) {\n        // use categorical color scale\n        if (cardinality <= 10) {\n          range = 'category10-k';\n        } else {\n          range = 'category20';\n        }\n      } else {\n        if (cardinality <= 2) {\n          range = [colorbrewer[ordinalPalette][3][0], colorbrewer[ordinalPalette][3][2]];\n        } else {\n          range = ordinalPalette;\n        }\n      }\n    } else { //time or quantitative\n      var palette = colorbrewer[ordinalPalette][9];\n      range = [palette[0], palette[8]];\n      s.zero = false;\n    }\n  }\n  return scale.color.palette(range, cardinality, type);\n};\n\nscale.color.palette = function(range, cardinality, type) {\n  switch (range) {\n    case 'category10-k':\n      // tableau's category 10, ordered by perceptual kernel study results\n      // https://github.com/uwdata/perceptual-kernels\n      return ['#2ca02c', '#e377c2', '#7f7f7f', '#17becf', '#8c564b', '#d62728', '#bcbd22', '#9467bd', '#ff7f0e', '#1f77b4'];\n\n    // d3/tableau category10/20/20b/20c\n    case 'category10':\n      return ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf'];\n\n    case 'category20':\n      return ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\n\n    case 'category20b':\n      return ['#393b79', '#5254a3', '#6b6ecf', '#9c9ede', '#637939', '#8ca252', '#b5cf6b', '#cedb9c', '#8c6d31', '#bd9e39', '#e7ba52', '#e7cb94', '#843c39', '#ad494a', '#d6616b', '#e7969c', '#7b4173', '#a55194', '#ce6dbd', '#de9ed6'];\n\n    case 'category20c':\n      return ['#3182bd', '#6baed6', '#9ecae1', '#c6dbef', '#e6550d', '#fd8d3c', '#fdae6b', '#fdd0a2', '#31a354', '#74c476', '#a1d99b', '#c7e9c0', '#756bb1', '#9e9ac8', '#bcbddc', '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9'];\n  }\n\n  if (range in colorbrewer) {\n    var palette = colorbrewer[range],\n      ps = 5;\n\n    // if cardinality pre-defined, use it.\n    if (cardinality in palette) return palette[cardinality];\n\n    // if not, use the highest cardinality one for nominal\n    if (type === N) {\n      return palette[Math.max.apply(null, util.keys(palette))];\n    }\n\n    // otherwise, interpolate\n    return scale.color.interpolate(palette[ps][0], palette[ps][ps-1], cardinality);\n  }\n\n  return range;\n};\n\nscale.color.interpolate = function (start, end, cardinality) {\n  var interpolator = interpolateLab(start, end);\n  return util.range(cardinality).map(function(i) { return interpolator(i*1.0/(cardinality-1)); });\n};\n\n","'use strict';\n\nrequire('../globals');\n\nmodule.exports = addSortTransforms;\n\n// adds new transforms that produce sorted fields\nfunction addSortTransforms(spec, encoding, stats, opt) {\n  // jshint unused:false\n\n  var datasetMapping = {};\n  var counter = 0;\n\n  encoding.forEach(function(field, encType) {\n    var sortBy = encoding.sort(encType, stats);\n    if (sortBy.length > 0) {\n      var fields = sortBy.map(function(d) {\n        return {\n          op: d.aggregate,\n          field: 'data.' + d.name\n        };\n      });\n\n      var byClause = sortBy.map(function(d) {\n        var reverse = (d.reverse ? '-' : '');\n        return reverse + 'data.' + (d.aggregate==='count' ? 'count' : (d.aggregate + '_' + d.name));\n      });\n\n      var dataName = 'sorted' + counter++;\n\n      var transforms = [\n        {\n          type: 'aggregate',\n          groupby: ['data.' + field.name],\n          fields: fields\n        },\n        {\n          type: 'sort',\n          by: byClause\n        }\n      ];\n\n      spec.data.push({\n        name: dataName,\n        source: RAW,\n        transform: transforms\n      });\n\n      datasetMapping[encType] = dataName;\n    }\n  });\n\n  return {\n    spec: spec,\n    getDataset: function(encType) {\n      var data = datasetMapping[encType];\n      if (!data) {\n        return TABLE;\n      }\n      return data;\n    }\n  };\n}\n","'use strict';\n\nrequire('../globals');\n\nvar  marks = require('./marks');\n\nmodule.exports = stacking;\n\nfunction stacking(spec, encoding, mdef, facets) {\n  if (!marks[encoding.marktype()].stack) return false;\n\n  // TODO: add || encoding.has(LOD) here once LOD is implemented\n  if (!encoding.has(COLOR)) return false;\n\n  var dim=null, val=null, idx =null,\n    isXMeasure = encoding.isMeasure(X),\n    isYMeasure = encoding.isMeasure(Y);\n\n  if (isXMeasure && !isYMeasure) {\n    dim = Y;\n    val = X;\n    idx = 0;\n  } else if (isYMeasure && !isXMeasure) {\n    dim = X;\n    val = Y;\n    idx = 1;\n  } else {\n    return null; // no stack encoding\n  }\n\n  // add transform to compute sums for scale\n  var stacked = {\n    name: STACKED,\n    source: TABLE,\n    transform: [{\n      type: 'aggregate',\n      groupby: [encoding.field(dim)].concat(facets), // dim and other facets\n      fields: [{op: 'sum', field: encoding.field(val)}] // TODO check if field with aggregate is correct?\n    }]\n  };\n\n  if (facets && facets.length > 0) {\n    stacked.transform.push({ //calculate max for each facet\n      type: 'aggregate',\n      groupby: facets,\n      fields: [{op: 'max', field: 'data.sum_' + encoding.field(val, true)}]\n    });\n  }\n\n  spec.data.push(stacked);\n\n  // add stack transform to mark\n  mdef.from.transform = [{\n    type: 'stack',\n    point: encoding.field(dim),\n    height: encoding.field(val),\n    output: {y1: val, y0: val + '2'}\n  }];\n\n  // TODO: This is super hack-ish -- consolidate into modular mark properties?\n  mdef.properties.update[val] = mdef.properties.enter[val] = {scale: val, field: val};\n  mdef.properties.update[val + '2'] = mdef.properties.enter[val + '2'] = {scale: val, field: val + '2'};\n\n  return val; //return stack encoding\n}\n","'use strict';\n\nrequire('../globals');\n\nvar vlfield = require('../field');\n\nmodule.exports = function(encoding, stats) {\n  return {\n    opacity: estimateOpacity(encoding, stats),\n  };\n};\n\nfunction estimateOpacity(encoding,stats) {\n  if (!stats) {\n    return 1;\n  }\n\n  var numPoints = 0;\n\n  if (encoding.isAggregate()) { // aggregate plot\n    numPoints = 1;\n\n    //  get number of points in each \"cell\"\n    //  by calculating product of cardinality\n    //  for each non faceting and non-ordinal X / Y fields\n    //  note that ordinal x,y are not include since we can\n    //  consider that ordinal x are subdividing the cell into subcells anyway\n    encoding.forEach(function(field, encType) {\n\n      if (encType !== ROW && encType !== COL &&\n          !((encType === X || encType === Y) &&\n          vlfield.isOrdinalScale(field))\n        ) {\n        numPoints *= encoding.cardinality(encType, stats);\n      }\n    });\n\n  } else { // raw plot\n    numPoints = stats.count;\n\n    // small multiples divide number of points\n    var numMultiples = 1;\n    if (encoding.has(ROW)) {\n      numMultiples *= encoding.cardinality(ROW, stats);\n    }\n    if (encoding.has(COL)) {\n      numMultiples *= encoding.cardinality(COL, stats);\n    }\n    numPoints /= numMultiples;\n  }\n\n  var opacity = 0;\n  if (numPoints < 20) {\n    opacity = 1;\n  } else if (numPoints < 200) {\n    opacity = 0.7;\n  } else if (numPoints < 1000 || encoding.is('tick')) {\n    opacity = 0.6;\n  } else {\n    opacity = 0.3;\n  }\n\n  return opacity;\n}\n\n","'use strict';\n\nrequire('../globals');\n\nvar groupdef = require('./group').def;\n\nmodule.exports = subfaceting;\n\nfunction subfaceting(group, mdef, details, stack, encoding) {\n  var m = group.marks,\n    g = groupdef('subfacet', {marks: m});\n\n  group.marks = [g];\n  g.from = mdef.from;\n  delete mdef.from;\n\n  //TODO test LOD -- we should support stack / line without color (LOD) field\n  var trans = (g.from.transform || (g.from.transform = []));\n  trans.unshift({type: 'facet', keys: details});\n\n  if (stack && encoding.has(COLOR)) {\n    trans.unshift({type: 'sort', by: encoding.field(COLOR)});\n  }\n}\n","'use strict';\n\nrequire('../globals');\n\nvar groupdef = require('./group').def,\n  vlfield = require('../field');\n\nmodule.exports = template;\n\nfunction template(encoding, layout, stats) {\n  // jshint unused:false\n\n  var data = {name: RAW, format: {}},\n    table = {name: TABLE, source: RAW},\n    dataUrl = encoding.data('url'),\n    dataType = encoding.data('formatType'),\n    values = encoding.data('values');\n\n  if (encoding.hasValues()) {\n    data.values = values;\n  } else {\n    data.url = dataUrl;\n    data.format.type = dataType;\n  }\n\n  encoding.forEach(function(field, encType) {\n    var name;\n    if (field.type == T) {\n      data.format.parse = data.format.parse || {};\n      data.format.parse[field.name] = 'date';\n    } else if (field.type == Q) {\n      data.format.parse = data.format.parse || {};\n      if (vlfield.isCount(field)) {\n        name = 'count';\n      } else {\n        name = field.name;\n      }\n      data.format.parse[name] = 'number';\n    }\n  });\n\n  return {\n    width: layout.width,\n    height: layout.height,\n    padding: 'auto',\n    data: [data, table],\n    marks: [groupdef('cell', {\n      width: layout.cellWidth ? {value: layout.cellWidth} : undefined,\n      height: layout.cellHeight ? {value: layout.cellHeight} : undefined\n    })]\n  };\n}\n","'use strict';\n\nvar util = require('../util');\n\nmodule.exports = time;\n\nfunction time(spec, encoding, opt) {\n  // jshint unused:false\n  var timeFields = {}, timeFn = {};\n\n  // find unique formula transformation and bin function\n  encoding.forEach(function(field, encType) {\n    if (field.type === T && field.fn) {\n      timeFields[encoding.field(encType)] = {\n        field: field,\n        encType: encType\n      };\n      timeFn[field.fn] = true;\n    }\n  });\n\n  // add formula transform\n  var data = spec.data[1],\n    transform = data.transform = data.transform || [];\n\n  for (var f in timeFields) {\n    var tf = timeFields[f];\n    time.transform(transform, encoding, tf.encType, tf.field);\n  }\n\n  // add scales\n  var scales = spec.scales = spec.scales || [];\n  for (var fn in timeFn) {\n    time.scale(scales, fn, encoding);\n  }\n  return spec;\n}\n\ntime.cardinality = function(field, stats, filterNull, type) {\n  var fn = field.fn;\n  switch (fn) {\n    case 'seconds': return 60;\n    case 'minutes': return 60;\n    case 'hours': return 24;\n    case 'day': return 7;\n    case 'date': return 31;\n    case 'month': return 12;\n    case 'year':\n      var stat = stats[field.name],\n        yearstat = stats['year_'+field.name];\n\n      if (!yearstat) { return null; }\n\n      return yearstat.distinct -\n        (stat.nulls > 0 && filterNull[type] ? 1 : 0);\n  }\n\n  return null;\n};\n\nfunction fieldFn(func, field) {\n  return 'utc' + func + '(d.data.'+ field.name +')';\n}\n\n/**\n * @return {String} date binning formula of the given field\n */\ntime.formula = function(field) {\n  return fieldFn(field.fn, field);\n};\n\n/** add formula transforms to data */\ntime.transform = function(transform, encoding, encType, field) {\n  transform.push({\n    type: 'formula',\n    field: encoding.field(encType),\n    expr: time.formula(field)\n  });\n};\n\n/** append custom time scales for axis label */\ntime.scale = function(scales, fn, encoding) {\n  var labelLength = encoding.config('timeScaleLabelLength');\n  // TODO add option for shorter scale / custom range\n  switch (fn) {\n    case 'day':\n      scales.push({\n        name: 'time-'+fn,\n        type: 'ordinal',\n        domain: util.range(0, 7),\n        range: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'].map(\n          function(s) { return s.substr(0, labelLength);}\n        )\n      });\n      break;\n    case 'month':\n      scales.push({\n        name: 'time-'+fn,\n        type: 'ordinal',\n        domain: util.range(0, 12),\n        range: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'].map(\n            function(s) { return s.substr(0, labelLength);}\n          )\n      });\n      break;\n  }\n};\n\ntime.isOrdinalFn = function(fn) {\n  switch (fn) {\n    case 'seconds':\n    case 'minutes':\n    case 'hours':\n    case 'day':\n    case 'date':\n    case 'month':\n      return true;\n  }\n  return false;\n};\n\ntime.scale.type = function(fn, name) {\n  if (name === COLOR) {\n    return 'linear'; // this has order\n  }\n\n  return time.isOrdinalFn(fn) || name === COL || name === ROW ? 'ordinal' : 'linear';\n};\n\ntime.scale.domain = function(fn, name) {\n  var isColor = name === COLOR;\n  switch (fn) {\n    case 'seconds':\n    case 'minutes': return isColor ? [0,59] : util.range(0, 60);\n    case 'hours': return isColor ? [0,23] : util.range(0, 24);\n    case 'day': return isColor ? [0,6] : util.range(0, 7);\n    case 'date': return isColor ? [1,31] : util.range(1, 32);\n    case 'month': return isColor ? [0,11] : util.range(0, 12);\n  }\n  return null;\n};\n\n/** whether a particular time function has custom scale for labels implemented in time.scale */\ntime.hasScale = function(fn) {\n  switch (fn) {\n    case 'day':\n    case 'month':\n      return true;\n  }\n  return false;\n};\n\n\n","'use strict';\n\nrequire('./globals');\n\nvar consts = module.exports = {};\n\nconsts.encodingTypes = [X, Y, ROW, COL, SIZE, SHAPE, COLOR, ALPHA, TEXT, DETAIL];\n\nconsts.shorthand = {\n  delim:  '|',\n  assign: '=',\n  type:   ',',\n  func:   '_'\n};\n","'use strict';\n\nrequire('./globals');\n\nvar vldata = module.exports = {};\n\n/** Mapping from datalib's inferred type to Vega-lite's type */\nvldata.types = {\n  'boolean': N,\n  'number': Q,\n  'integer': Q,\n  'date': T,\n  'string': N\n};\n\n","// utility for enc\n\n'use strict';\n\nvar consts = require('./consts'),\n  c = consts.shorthand,\n  vlfield = require('./field'),\n  util = require('./util'),\n  schema = require('./schema/schema'),\n  encTypes = schema.encTypes;\n\nvar vlenc = module.exports = {};\n\nvlenc.countRetinal = function(enc) {\n  var count = 0;\n  if (enc.color) count++;\n  if (enc.alpha) count++;\n  if (enc.size) count++;\n  if (enc.shape) count++;\n  return count;\n};\n\nvlenc.has = function(enc, encType) {\n  var fieldDef = enc && enc[encType];\n  return fieldDef && fieldDef.name;\n};\n\nvlenc.isAggregate = function(enc) {\n  for (var k in enc) {\n    if (vlenc.has(enc, k) && enc[k].aggregate) {\n      return true;\n    }\n  }\n  return false;\n};\n\nvlenc.forEach = function(enc, f) {\n  var i = 0;\n  encTypes.forEach(function(k) {\n    if (vlenc.has(enc, k)) {\n      f(enc[k], k, i++);\n    }\n  });\n};\n\nvlenc.map = function(enc, f) {\n  var arr = [];\n  encTypes.forEach(function(k) {\n    if (vlenc.has(enc, k)) {\n      arr.push(f(enc[k], k, enc));\n    }\n  });\n  return arr;\n};\n\nvlenc.reduce = function(enc, f, init) {\n  var r = init;\n  encTypes.forEach(function(k) {\n    if (vlenc.has(enc, k)) {\n      r = f(r, enc[k], k,  enc);\n    }\n  });\n  return r;\n};\n\n/*\n * return key-value pairs of field name and list of fields of that field name\n */\nvlenc.fields = function(enc) {\n  return vlenc.reduce(enc, function (m, field) {\n    var fieldList = m[field.name] = m[field.name] || [],\n      containsType = fieldList.containsType = fieldList.containsType || {};\n\n    if (fieldList.indexOf(field) === -1) {\n      fieldList.push(field);\n      // augment the array with containsType.Q / O / N / T\n      containsType[field.type] = true;\n    }\n    return m;\n  }, {});\n};\n\nvlenc.shorthand = function(enc) {\n  return vlenc.map(enc, function(field, et) {\n    return et + c.assign + vlfield.shorthand(field);\n  }).join(c.delim);\n};\n\nvlenc.fromShorthand = function(shorthand) {\n  var enc = util.isArray(shorthand) ? shorthand : shorthand.split(c.delim);\n  return enc.reduce(function(m, e) {\n    var split = e.split(c.assign),\n        enctype = split[0].trim(),\n        field = split[1];\n\n    m[enctype] = vlfield.fromShorthand(field);\n    return m;\n  }, {});\n};","'use strict';\n\n// utility for field\n\nrequire('./globals');\n\nvar consts = require('./consts'),\n  c = consts.shorthand,\n  time = require('./compile/time'),\n  util = require('./util'),\n  schema = require('./schema/schema');\n\nvar vlfield = module.exports = {};\n\nvlfield.shorthand = function(f) {\n  var c = consts.shorthand;\n  return (f.aggregate ? f.aggregate + c.func : '') +\n    (f.fn ? f.fn + c.func : '') +\n    (f.bin ? 'bin' + c.func : '') +\n    (f.name || '') + c.type + f.type;\n};\n\nvlfield.shorthands = function(fields, delim) {\n  delim = delim || c.delim;\n  return fields.map(vlfield.shorthand).join(delim);\n};\n\nvlfield.fromShorthand = function(shorthand) {\n  var split = shorthand.split(c.type), i;\n  var o = {\n    name: split[0].trim(),\n    type: split[1].trim()\n  };\n\n  // check aggregate type\n  for (i in schema.aggregate.enum) {\n    var a = schema.aggregate.enum[i];\n    if (o.name.indexOf(a + '_') === 0) {\n      o.name = o.name.substr(a.length + 1);\n      if (a == 'count' && o.name.length === 0) o.name = '*';\n      o.aggregate = a;\n      break;\n    }\n  }\n\n  // check time fn\n  for (i in schema.timefns) {\n    var f = schema.timefns[i];\n    if (o.name && o.name.indexOf(f + '_') === 0) {\n      o.name = o.name.substr(o.length + 1);\n      o.fn = f;\n      break;\n    }\n  }\n\n  // check bin\n  if (o.name && o.name.indexOf('bin_') === 0) {\n    o.name = o.name.substr(4);\n    o.bin = true;\n  }\n\n  return o;\n};\n\nvar typeOrder = {\n  N: 0,\n  O: 1,\n  G: 2,\n  T: 3,\n  Q: 4\n};\n\nvlfield.order = {};\n\nvlfield.order.type = function(field) {\n  if (field.aggregate==='count') return 4;\n  return typeOrder[field.type];\n};\n\nvlfield.order.typeThenName = function(field) {\n  return vlfield.order.type(field) + '_' + field.name.toLowerCase();\n};\n\nvlfield.order.original = function() {\n  return 0; // no swap will occur\n};\n\nvlfield.order.name = function(field) {\n  return field.name;\n};\n\nvlfield.order.typeThenCardinality = function(field, stats){\n  return stats[field.name].distinct;\n};\n\nvar isType = vlfield.isType = function (fieldDef, type) {\n  return fieldDef.type === type;\n};\n\nvar isTypes = vlfield.isTypes = function (fieldDef, types) {\n  for (var t=0; t<types.length; t++) {\n    if(fieldDef.type === types[t]) return true;\n  }\n  return false;\n};\n\n/*\n * Most fields that use ordinal scale are dimensions.\n * However, YEAR(T), YEARMONTH(T) use time scale, not ordinal but are dimensions too.\n */\nvlfield.isOrdinalScale = function(field) {\n  return  isTypes(field, [N, O]) || field.bin ||\n    ( isType(field, T) && field.fn && time.isOrdinalFn(field.fn) );\n};\n\nfunction isDimension(field) {\n  return  isTypes(field, [N, O]) || !!field.bin ||\n    ( isType(field, T) && !!field.fn );\n}\n\n/**\n * For encoding, use encoding.isDimension() to avoid confusion.\n * Or use Encoding.isType if your field is from Encoding (and thus have numeric data type).\n * otherwise, do not specific isType so we can use the default isTypeName here.\n */\nvlfield.isDimension = function(field) {\n  return field && isDimension(field);\n};\n\nvlfield.isMeasure = function(field) {\n  return field && !isDimension(field);\n};\n\nvlfield.role = function(field) {\n  return isDimension(field) ? 'dimension' : 'measure';\n};\n\nvlfield.count = function() {\n  return {name:'*', aggregate: 'count', type: Q, displayName: vlfield.count.displayName};\n};\n\nvlfield.count.displayName = 'Number of Records';\n\nvlfield.isCount = function(field) {\n  return field.aggregate === 'count';\n};\n\n/**\n * For encoding, use encoding.cardinality() to avoid confusion.  Or use Encoding.isType if your field is from Encoding (and thus have numeric data type).\n * otherwise, do not specific isType so we can use the default isTypeName here.\n */\nvlfield.cardinality = function(field, stats, filterNull) {\n  // FIXME need to take filter into account\n\n  var stat = stats[field.name];\n  var type = field.type;\n\n  filterNull = filterNull || {};\n\n  if (field.bin) {\n    var bins = util.getbins(stat, field.bin.maxbins || schema.MAXBINS_DEFAULT);\n    return (bins.stop - bins.start) / bins.step;\n  }\n  if (isType(field, T)) {\n    var cardinality = time.cardinality(field, stats, filterNull, type);\n    if(cardinality !== null) return cardinality;\n    //otherwise use calculation below\n  }\n  if (field.aggregate) {\n    return 1;\n  }\n\n  // remove null\n  return stat.distinct -\n    (stat.nulls > 0 && filterNull[type] ? 1 : 0);\n};\n","'use strict';\n\n// declare global constant\nvar g = global || window;\n\ng.TABLE = 'table';\ng.RAW = 'raw';\ng.STACKED = 'stacked';\ng.INDEX = 'index';\n\ng.X = 'x';\ng.Y = 'y';\ng.ROW = 'row';\ng.COL = 'col';\ng.SIZE = 'size';\ng.SHAPE = 'shape';\ng.COLOR = 'color';\ng.ALPHA = 'alpha';\ng.TEXT = 'text';\ng.DETAIL = 'detail';\n\ng.N = 'N';\ng.O = 'O';\ng.Q = 'Q';\ng.T = 'T';\n","// This product includes color specifications and designs developed by Cynthia Brewer (http://colorbrewer.org/).\nmodule.exports = {YlGn: {\n3: ['#f7fcb9','#addd8e','#31a354'],\n4: ['#ffffcc','#c2e699','#78c679','#238443'],\n5: ['#ffffcc','#c2e699','#78c679','#31a354','#006837'],\n6: ['#ffffcc','#d9f0a3','#addd8e','#78c679','#31a354','#006837'],\n7: ['#ffffcc','#d9f0a3','#addd8e','#78c679','#41ab5d','#238443','#005a32'],\n8: ['#ffffe5','#f7fcb9','#d9f0a3','#addd8e','#78c679','#41ab5d','#238443','#005a32'],\n9: ['#ffffe5','#f7fcb9','#d9f0a3','#addd8e','#78c679','#41ab5d','#238443','#006837','#004529']\n},YlGnBu: {\n3: ['#edf8b1','#7fcdbb','#2c7fb8'],\n4: ['#ffffcc','#a1dab4','#41b6c4','#225ea8'],\n5: ['#ffffcc','#a1dab4','#41b6c4','#2c7fb8','#253494'],\n6: ['#ffffcc','#c7e9b4','#7fcdbb','#41b6c4','#2c7fb8','#253494'],\n7: ['#ffffcc','#c7e9b4','#7fcdbb','#41b6c4','#1d91c0','#225ea8','#0c2c84'],\n8: ['#ffffd9','#edf8b1','#c7e9b4','#7fcdbb','#41b6c4','#1d91c0','#225ea8','#0c2c84'],\n9: ['#ffffd9','#edf8b1','#c7e9b4','#7fcdbb','#41b6c4','#1d91c0','#225ea8','#253494','#081d58']\n},GnBu: {\n3: ['#e0f3db','#a8ddb5','#43a2ca'],\n4: ['#f0f9e8','#bae4bc','#7bccc4','#2b8cbe'],\n5: ['#f0f9e8','#bae4bc','#7bccc4','#43a2ca','#0868ac'],\n6: ['#f0f9e8','#ccebc5','#a8ddb5','#7bccc4','#43a2ca','#0868ac'],\n7: ['#f0f9e8','#ccebc5','#a8ddb5','#7bccc4','#4eb3d3','#2b8cbe','#08589e'],\n8: ['#f7fcf0','#e0f3db','#ccebc5','#a8ddb5','#7bccc4','#4eb3d3','#2b8cbe','#08589e'],\n9: ['#f7fcf0','#e0f3db','#ccebc5','#a8ddb5','#7bccc4','#4eb3d3','#2b8cbe','#0868ac','#084081']\n},BuGn: {\n3: ['#e5f5f9','#99d8c9','#2ca25f'],\n4: ['#edf8fb','#b2e2e2','#66c2a4','#238b45'],\n5: ['#edf8fb','#b2e2e2','#66c2a4','#2ca25f','#006d2c'],\n6: ['#edf8fb','#ccece6','#99d8c9','#66c2a4','#2ca25f','#006d2c'],\n7: ['#edf8fb','#ccece6','#99d8c9','#66c2a4','#41ae76','#238b45','#005824'],\n8: ['#f7fcfd','#e5f5f9','#ccece6','#99d8c9','#66c2a4','#41ae76','#238b45','#005824'],\n9: ['#f7fcfd','#e5f5f9','#ccece6','#99d8c9','#66c2a4','#41ae76','#238b45','#006d2c','#00441b']\n},PuBuGn: {\n3: ['#ece2f0','#a6bddb','#1c9099'],\n4: ['#f6eff7','#bdc9e1','#67a9cf','#02818a'],\n5: ['#f6eff7','#bdc9e1','#67a9cf','#1c9099','#016c59'],\n6: ['#f6eff7','#d0d1e6','#a6bddb','#67a9cf','#1c9099','#016c59'],\n7: ['#f6eff7','#d0d1e6','#a6bddb','#67a9cf','#3690c0','#02818a','#016450'],\n8: ['#fff7fb','#ece2f0','#d0d1e6','#a6bddb','#67a9cf','#3690c0','#02818a','#016450'],\n9: ['#fff7fb','#ece2f0','#d0d1e6','#a6bddb','#67a9cf','#3690c0','#02818a','#016c59','#014636']\n},PuBu: {\n3: ['#ece7f2','#a6bddb','#2b8cbe'],\n4: ['#f1eef6','#bdc9e1','#74a9cf','#0570b0'],\n5: ['#f1eef6','#bdc9e1','#74a9cf','#2b8cbe','#045a8d'],\n6: ['#f1eef6','#d0d1e6','#a6bddb','#74a9cf','#2b8cbe','#045a8d'],\n7: ['#f1eef6','#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#034e7b'],\n8: ['#fff7fb','#ece7f2','#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#034e7b'],\n9: ['#fff7fb','#ece7f2','#d0d1e6','#a6bddb','#74a9cf','#3690c0','#0570b0','#045a8d','#023858']\n},BuPu: {\n3: ['#e0ecf4','#9ebcda','#8856a7'],\n4: ['#edf8fb','#b3cde3','#8c96c6','#88419d'],\n5: ['#edf8fb','#b3cde3','#8c96c6','#8856a7','#810f7c'],\n6: ['#edf8fb','#bfd3e6','#9ebcda','#8c96c6','#8856a7','#810f7c'],\n7: ['#edf8fb','#bfd3e6','#9ebcda','#8c96c6','#8c6bb1','#88419d','#6e016b'],\n8: ['#f7fcfd','#e0ecf4','#bfd3e6','#9ebcda','#8c96c6','#8c6bb1','#88419d','#6e016b'],\n9: ['#f7fcfd','#e0ecf4','#bfd3e6','#9ebcda','#8c96c6','#8c6bb1','#88419d','#810f7c','#4d004b']\n},RdPu: {\n3: ['#fde0dd','#fa9fb5','#c51b8a'],\n4: ['#feebe2','#fbb4b9','#f768a1','#ae017e'],\n5: ['#feebe2','#fbb4b9','#f768a1','#c51b8a','#7a0177'],\n6: ['#feebe2','#fcc5c0','#fa9fb5','#f768a1','#c51b8a','#7a0177'],\n7: ['#feebe2','#fcc5c0','#fa9fb5','#f768a1','#dd3497','#ae017e','#7a0177'],\n8: ['#fff7f3','#fde0dd','#fcc5c0','#fa9fb5','#f768a1','#dd3497','#ae017e','#7a0177'],\n9: ['#fff7f3','#fde0dd','#fcc5c0','#fa9fb5','#f768a1','#dd3497','#ae017e','#7a0177','#49006a']\n},PuRd: {\n3: ['#e7e1ef','#c994c7','#dd1c77'],\n4: ['#f1eef6','#d7b5d8','#df65b0','#ce1256'],\n5: ['#f1eef6','#d7b5d8','#df65b0','#dd1c77','#980043'],\n6: ['#f1eef6','#d4b9da','#c994c7','#df65b0','#dd1c77','#980043'],\n7: ['#f1eef6','#d4b9da','#c994c7','#df65b0','#e7298a','#ce1256','#91003f'],\n8: ['#f7f4f9','#e7e1ef','#d4b9da','#c994c7','#df65b0','#e7298a','#ce1256','#91003f'],\n9: ['#f7f4f9','#e7e1ef','#d4b9da','#c994c7','#df65b0','#e7298a','#ce1256','#980043','#67001f']\n},OrRd: {\n3: ['#fee8c8','#fdbb84','#e34a33'],\n4: ['#fef0d9','#fdcc8a','#fc8d59','#d7301f'],\n5: ['#fef0d9','#fdcc8a','#fc8d59','#e34a33','#b30000'],\n6: ['#fef0d9','#fdd49e','#fdbb84','#fc8d59','#e34a33','#b30000'],\n7: ['#fef0d9','#fdd49e','#fdbb84','#fc8d59','#ef6548','#d7301f','#990000'],\n8: ['#fff7ec','#fee8c8','#fdd49e','#fdbb84','#fc8d59','#ef6548','#d7301f','#990000'],\n9: ['#fff7ec','#fee8c8','#fdd49e','#fdbb84','#fc8d59','#ef6548','#d7301f','#b30000','#7f0000']\n},YlOrRd: {\n3: ['#ffeda0','#feb24c','#f03b20'],\n4: ['#ffffb2','#fecc5c','#fd8d3c','#e31a1c'],\n5: ['#ffffb2','#fecc5c','#fd8d3c','#f03b20','#bd0026'],\n6: ['#ffffb2','#fed976','#feb24c','#fd8d3c','#f03b20','#bd0026'],\n7: ['#ffffb2','#fed976','#feb24c','#fd8d3c','#fc4e2a','#e31a1c','#b10026'],\n8: ['#ffffcc','#ffeda0','#fed976','#feb24c','#fd8d3c','#fc4e2a','#e31a1c','#b10026'],\n9: ['#ffffcc','#ffeda0','#fed976','#feb24c','#fd8d3c','#fc4e2a','#e31a1c','#bd0026','#800026']\n},YlOrBr: {\n3: ['#fff7bc','#fec44f','#d95f0e'],\n4: ['#ffffd4','#fed98e','#fe9929','#cc4c02'],\n5: ['#ffffd4','#fed98e','#fe9929','#d95f0e','#993404'],\n6: ['#ffffd4','#fee391','#fec44f','#fe9929','#d95f0e','#993404'],\n7: ['#ffffd4','#fee391','#fec44f','#fe9929','#ec7014','#cc4c02','#8c2d04'],\n8: ['#ffffe5','#fff7bc','#fee391','#fec44f','#fe9929','#ec7014','#cc4c02','#8c2d04'],\n9: ['#ffffe5','#fff7bc','#fee391','#fec44f','#fe9929','#ec7014','#cc4c02','#993404','#662506']\n},Purples: {\n3: ['#efedf5','#bcbddc','#756bb1'],\n4: ['#f2f0f7','#cbc9e2','#9e9ac8','#6a51a3'],\n5: ['#f2f0f7','#cbc9e2','#9e9ac8','#756bb1','#54278f'],\n6: ['#f2f0f7','#dadaeb','#bcbddc','#9e9ac8','#756bb1','#54278f'],\n7: ['#f2f0f7','#dadaeb','#bcbddc','#9e9ac8','#807dba','#6a51a3','#4a1486'],\n8: ['#fcfbfd','#efedf5','#dadaeb','#bcbddc','#9e9ac8','#807dba','#6a51a3','#4a1486'],\n9: ['#fcfbfd','#efedf5','#dadaeb','#bcbddc','#9e9ac8','#807dba','#6a51a3','#54278f','#3f007d']\n},Blues: {\n3: ['#deebf7','#9ecae1','#3182bd'],\n4: ['#eff3ff','#bdd7e7','#6baed6','#2171b5'],\n5: ['#eff3ff','#bdd7e7','#6baed6','#3182bd','#08519c'],\n6: ['#eff3ff','#c6dbef','#9ecae1','#6baed6','#3182bd','#08519c'],\n7: ['#eff3ff','#c6dbef','#9ecae1','#6baed6','#4292c6','#2171b5','#084594'],\n8: ['#f7fbff','#deebf7','#c6dbef','#9ecae1','#6baed6','#4292c6','#2171b5','#084594'],\n9: ['#f7fbff','#deebf7','#c6dbef','#9ecae1','#6baed6','#4292c6','#2171b5','#08519c','#08306b']\n},Greens: {\n3: ['#e5f5e0','#a1d99b','#31a354'],\n4: ['#edf8e9','#bae4b3','#74c476','#238b45'],\n5: ['#edf8e9','#bae4b3','#74c476','#31a354','#006d2c'],\n6: ['#edf8e9','#c7e9c0','#a1d99b','#74c476','#31a354','#006d2c'],\n7: ['#edf8e9','#c7e9c0','#a1d99b','#74c476','#41ab5d','#238b45','#005a32'],\n8: ['#f7fcf5','#e5f5e0','#c7e9c0','#a1d99b','#74c476','#41ab5d','#238b45','#005a32'],\n9: ['#f7fcf5','#e5f5e0','#c7e9c0','#a1d99b','#74c476','#41ab5d','#238b45','#006d2c','#00441b']\n},Oranges: {\n3: ['#fee6ce','#fdae6b','#e6550d'],\n4: ['#feedde','#fdbe85','#fd8d3c','#d94701'],\n5: ['#feedde','#fdbe85','#fd8d3c','#e6550d','#a63603'],\n6: ['#feedde','#fdd0a2','#fdae6b','#fd8d3c','#e6550d','#a63603'],\n7: ['#feedde','#fdd0a2','#fdae6b','#fd8d3c','#f16913','#d94801','#8c2d04'],\n8: ['#fff5eb','#fee6ce','#fdd0a2','#fdae6b','#fd8d3c','#f16913','#d94801','#8c2d04'],\n9: ['#fff5eb','#fee6ce','#fdd0a2','#fdae6b','#fd8d3c','#f16913','#d94801','#a63603','#7f2704']\n},Reds: {\n3: ['#fee0d2','#fc9272','#de2d26'],\n4: ['#fee5d9','#fcae91','#fb6a4a','#cb181d'],\n5: ['#fee5d9','#fcae91','#fb6a4a','#de2d26','#a50f15'],\n6: ['#fee5d9','#fcbba1','#fc9272','#fb6a4a','#de2d26','#a50f15'],\n7: ['#fee5d9','#fcbba1','#fc9272','#fb6a4a','#ef3b2c','#cb181d','#99000d'],\n8: ['#fff5f0','#fee0d2','#fcbba1','#fc9272','#fb6a4a','#ef3b2c','#cb181d','#99000d'],\n9: ['#fff5f0','#fee0d2','#fcbba1','#fc9272','#fb6a4a','#ef3b2c','#cb181d','#a50f15','#67000d']\n},Greys: {\n3: ['#f0f0f0','#bdbdbd','#636363'],\n4: ['#f7f7f7','#cccccc','#969696','#525252'],\n5: ['#f7f7f7','#cccccc','#969696','#636363','#252525'],\n6: ['#f7f7f7','#d9d9d9','#bdbdbd','#969696','#636363','#252525'],\n7: ['#f7f7f7','#d9d9d9','#bdbdbd','#969696','#737373','#525252','#252525'],\n8: ['#ffffff','#f0f0f0','#d9d9d9','#bdbdbd','#969696','#737373','#525252','#252525'],\n9: ['#ffffff','#f0f0f0','#d9d9d9','#bdbdbd','#969696','#737373','#525252','#252525','#000000']\n},PuOr: {\n3: ['#f1a340','#f7f7f7','#998ec3'],\n4: ['#e66101','#fdb863','#b2abd2','#5e3c99'],\n5: ['#e66101','#fdb863','#f7f7f7','#b2abd2','#5e3c99'],\n6: ['#b35806','#f1a340','#fee0b6','#d8daeb','#998ec3','#542788'],\n7: ['#b35806','#f1a340','#fee0b6','#f7f7f7','#d8daeb','#998ec3','#542788'],\n8: ['#b35806','#e08214','#fdb863','#fee0b6','#d8daeb','#b2abd2','#8073ac','#542788'],\n9: ['#b35806','#e08214','#fdb863','#fee0b6','#f7f7f7','#d8daeb','#b2abd2','#8073ac','#542788'],\n10: ['#7f3b08','#b35806','#e08214','#fdb863','#fee0b6','#d8daeb','#b2abd2','#8073ac','#542788','#2d004b'],\n11: ['#7f3b08','#b35806','#e08214','#fdb863','#fee0b6','#f7f7f7','#d8daeb','#b2abd2','#8073ac','#542788','#2d004b']\n},BrBG: {\n3: ['#d8b365','#f5f5f5','#5ab4ac'],\n4: ['#a6611a','#dfc27d','#80cdc1','#018571'],\n5: ['#a6611a','#dfc27d','#f5f5f5','#80cdc1','#018571'],\n6: ['#8c510a','#d8b365','#f6e8c3','#c7eae5','#5ab4ac','#01665e'],\n7: ['#8c510a','#d8b365','#f6e8c3','#f5f5f5','#c7eae5','#5ab4ac','#01665e'],\n8: ['#8c510a','#bf812d','#dfc27d','#f6e8c3','#c7eae5','#80cdc1','#35978f','#01665e'],\n9: ['#8c510a','#bf812d','#dfc27d','#f6e8c3','#f5f5f5','#c7eae5','#80cdc1','#35978f','#01665e'],\n10: ['#543005','#8c510a','#bf812d','#dfc27d','#f6e8c3','#c7eae5','#80cdc1','#35978f','#01665e','#003c30'],\n11: ['#543005','#8c510a','#bf812d','#dfc27d','#f6e8c3','#f5f5f5','#c7eae5','#80cdc1','#35978f','#01665e','#003c30']\n},PRGn: {\n3: ['#af8dc3','#f7f7f7','#7fbf7b'],\n4: ['#7b3294','#c2a5cf','#a6dba0','#008837'],\n5: ['#7b3294','#c2a5cf','#f7f7f7','#a6dba0','#008837'],\n6: ['#762a83','#af8dc3','#e7d4e8','#d9f0d3','#7fbf7b','#1b7837'],\n7: ['#762a83','#af8dc3','#e7d4e8','#f7f7f7','#d9f0d3','#7fbf7b','#1b7837'],\n8: ['#762a83','#9970ab','#c2a5cf','#e7d4e8','#d9f0d3','#a6dba0','#5aae61','#1b7837'],\n9: ['#762a83','#9970ab','#c2a5cf','#e7d4e8','#f7f7f7','#d9f0d3','#a6dba0','#5aae61','#1b7837'],\n10: ['#40004b','#762a83','#9970ab','#c2a5cf','#e7d4e8','#d9f0d3','#a6dba0','#5aae61','#1b7837','#00441b'],\n11: ['#40004b','#762a83','#9970ab','#c2a5cf','#e7d4e8','#f7f7f7','#d9f0d3','#a6dba0','#5aae61','#1b7837','#00441b']\n},PiYG: {\n3: ['#e9a3c9','#f7f7f7','#a1d76a'],\n4: ['#d01c8b','#f1b6da','#b8e186','#4dac26'],\n5: ['#d01c8b','#f1b6da','#f7f7f7','#b8e186','#4dac26'],\n6: ['#c51b7d','#e9a3c9','#fde0ef','#e6f5d0','#a1d76a','#4d9221'],\n7: ['#c51b7d','#e9a3c9','#fde0ef','#f7f7f7','#e6f5d0','#a1d76a','#4d9221'],\n8: ['#c51b7d','#de77ae','#f1b6da','#fde0ef','#e6f5d0','#b8e186','#7fbc41','#4d9221'],\n9: ['#c51b7d','#de77ae','#f1b6da','#fde0ef','#f7f7f7','#e6f5d0','#b8e186','#7fbc41','#4d9221'],\n10: ['#8e0152','#c51b7d','#de77ae','#f1b6da','#fde0ef','#e6f5d0','#b8e186','#7fbc41','#4d9221','#276419'],\n11: ['#8e0152','#c51b7d','#de77ae','#f1b6da','#fde0ef','#f7f7f7','#e6f5d0','#b8e186','#7fbc41','#4d9221','#276419']\n},RdBu: {\n3: ['#ef8a62','#f7f7f7','#67a9cf'],\n4: ['#ca0020','#f4a582','#92c5de','#0571b0'],\n5: ['#ca0020','#f4a582','#f7f7f7','#92c5de','#0571b0'],\n6: ['#b2182b','#ef8a62','#fddbc7','#d1e5f0','#67a9cf','#2166ac'],\n7: ['#b2182b','#ef8a62','#fddbc7','#f7f7f7','#d1e5f0','#67a9cf','#2166ac'],\n8: ['#b2182b','#d6604d','#f4a582','#fddbc7','#d1e5f0','#92c5de','#4393c3','#2166ac'],\n9: ['#b2182b','#d6604d','#f4a582','#fddbc7','#f7f7f7','#d1e5f0','#92c5de','#4393c3','#2166ac'],\n10: ['#67001f','#b2182b','#d6604d','#f4a582','#fddbc7','#d1e5f0','#92c5de','#4393c3','#2166ac','#053061'],\n11: ['#67001f','#b2182b','#d6604d','#f4a582','#fddbc7','#f7f7f7','#d1e5f0','#92c5de','#4393c3','#2166ac','#053061']\n},RdGy: {\n3: ['#ef8a62','#ffffff','#999999'],\n4: ['#ca0020','#f4a582','#bababa','#404040'],\n5: ['#ca0020','#f4a582','#ffffff','#bababa','#404040'],\n6: ['#b2182b','#ef8a62','#fddbc7','#e0e0e0','#999999','#4d4d4d'],\n7: ['#b2182b','#ef8a62','#fddbc7','#ffffff','#e0e0e0','#999999','#4d4d4d'],\n8: ['#b2182b','#d6604d','#f4a582','#fddbc7','#e0e0e0','#bababa','#878787','#4d4d4d'],\n9: ['#b2182b','#d6604d','#f4a582','#fddbc7','#ffffff','#e0e0e0','#bababa','#878787','#4d4d4d'],\n10: ['#67001f','#b2182b','#d6604d','#f4a582','#fddbc7','#e0e0e0','#bababa','#878787','#4d4d4d','#1a1a1a'],\n11: ['#67001f','#b2182b','#d6604d','#f4a582','#fddbc7','#ffffff','#e0e0e0','#bababa','#878787','#4d4d4d','#1a1a1a']\n},RdYlBu: {\n3: ['#fc8d59','#ffffbf','#91bfdb'],\n4: ['#d7191c','#fdae61','#abd9e9','#2c7bb6'],\n5: ['#d7191c','#fdae61','#ffffbf','#abd9e9','#2c7bb6'],\n6: ['#d73027','#fc8d59','#fee090','#e0f3f8','#91bfdb','#4575b4'],\n7: ['#d73027','#fc8d59','#fee090','#ffffbf','#e0f3f8','#91bfdb','#4575b4'],\n8: ['#d73027','#f46d43','#fdae61','#fee090','#e0f3f8','#abd9e9','#74add1','#4575b4'],\n9: ['#d73027','#f46d43','#fdae61','#fee090','#ffffbf','#e0f3f8','#abd9e9','#74add1','#4575b4'],\n10: ['#a50026','#d73027','#f46d43','#fdae61','#fee090','#e0f3f8','#abd9e9','#74add1','#4575b4','#313695'],\n11: ['#a50026','#d73027','#f46d43','#fdae61','#fee090','#ffffbf','#e0f3f8','#abd9e9','#74add1','#4575b4','#313695']\n},Spectral: {\n3: ['#fc8d59','#ffffbf','#99d594'],\n4: ['#d7191c','#fdae61','#abdda4','#2b83ba'],\n5: ['#d7191c','#fdae61','#ffffbf','#abdda4','#2b83ba'],\n6: ['#d53e4f','#fc8d59','#fee08b','#e6f598','#99d594','#3288bd'],\n7: ['#d53e4f','#fc8d59','#fee08b','#ffffbf','#e6f598','#99d594','#3288bd'],\n8: ['#d53e4f','#f46d43','#fdae61','#fee08b','#e6f598','#abdda4','#66c2a5','#3288bd'],\n9: ['#d53e4f','#f46d43','#fdae61','#fee08b','#ffffbf','#e6f598','#abdda4','#66c2a5','#3288bd'],\n10: ['#9e0142','#d53e4f','#f46d43','#fdae61','#fee08b','#e6f598','#abdda4','#66c2a5','#3288bd','#5e4fa2'],\n11: ['#9e0142','#d53e4f','#f46d43','#fdae61','#fee08b','#ffffbf','#e6f598','#abdda4','#66c2a5','#3288bd','#5e4fa2']\n},RdYlGn: {\n3: ['#fc8d59','#ffffbf','#91cf60'],\n4: ['#d7191c','#fdae61','#a6d96a','#1a9641'],\n5: ['#d7191c','#fdae61','#ffffbf','#a6d96a','#1a9641'],\n6: ['#d73027','#fc8d59','#fee08b','#d9ef8b','#91cf60','#1a9850'],\n7: ['#d73027','#fc8d59','#fee08b','#ffffbf','#d9ef8b','#91cf60','#1a9850'],\n8: ['#d73027','#f46d43','#fdae61','#fee08b','#d9ef8b','#a6d96a','#66bd63','#1a9850'],\n9: ['#d73027','#f46d43','#fdae61','#fee08b','#ffffbf','#d9ef8b','#a6d96a','#66bd63','#1a9850'],\n10: ['#a50026','#d73027','#f46d43','#fdae61','#fee08b','#d9ef8b','#a6d96a','#66bd63','#1a9850','#006837'],\n11: ['#a50026','#d73027','#f46d43','#fdae61','#fee08b','#ffffbf','#d9ef8b','#a6d96a','#66bd63','#1a9850','#006837']\n},Accent: {\n3: ['#7fc97f','#beaed4','#fdc086'],\n4: ['#7fc97f','#beaed4','#fdc086','#ffff99'],\n5: ['#7fc97f','#beaed4','#fdc086','#ffff99','#386cb0'],\n6: ['#7fc97f','#beaed4','#fdc086','#ffff99','#386cb0','#f0027f'],\n7: ['#7fc97f','#beaed4','#fdc086','#ffff99','#386cb0','#f0027f','#bf5b17'],\n8: ['#7fc97f','#beaed4','#fdc086','#ffff99','#386cb0','#f0027f','#bf5b17','#666666']\n},Dark2: {\n3: ['#1b9e77','#d95f02','#7570b3'],\n4: ['#1b9e77','#d95f02','#7570b3','#e7298a'],\n5: ['#1b9e77','#d95f02','#7570b3','#e7298a','#66a61e'],\n6: ['#1b9e77','#d95f02','#7570b3','#e7298a','#66a61e','#e6ab02'],\n7: ['#1b9e77','#d95f02','#7570b3','#e7298a','#66a61e','#e6ab02','#a6761d'],\n8: ['#1b9e77','#d95f02','#7570b3','#e7298a','#66a61e','#e6ab02','#a6761d','#666666']\n},Paired: {\n3: ['#a6cee3','#1f78b4','#b2df8a'],\n4: ['#a6cee3','#1f78b4','#b2df8a','#33a02c'],\n5: ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99'],\n6: ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c'],\n7: ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f'],\n8: ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00'],\n9: ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6'],\n10: ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a'],\n11: ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a','#ffff99'],\n12: ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a','#ffff99','#b15928']\n},Pastel1: {\n3: ['#fbb4ae','#b3cde3','#ccebc5'],\n4: ['#fbb4ae','#b3cde3','#ccebc5','#decbe4'],\n5: ['#fbb4ae','#b3cde3','#ccebc5','#decbe4','#fed9a6'],\n6: ['#fbb4ae','#b3cde3','#ccebc5','#decbe4','#fed9a6','#ffffcc'],\n7: ['#fbb4ae','#b3cde3','#ccebc5','#decbe4','#fed9a6','#ffffcc','#e5d8bd'],\n8: ['#fbb4ae','#b3cde3','#ccebc5','#decbe4','#fed9a6','#ffffcc','#e5d8bd','#fddaec'],\n9: ['#fbb4ae','#b3cde3','#ccebc5','#decbe4','#fed9a6','#ffffcc','#e5d8bd','#fddaec','#f2f2f2']\n},Pastel2: {\n3: ['#b3e2cd','#fdcdac','#cbd5e8'],\n4: ['#b3e2cd','#fdcdac','#cbd5e8','#f4cae4'],\n5: ['#b3e2cd','#fdcdac','#cbd5e8','#f4cae4','#e6f5c9'],\n6: ['#b3e2cd','#fdcdac','#cbd5e8','#f4cae4','#e6f5c9','#fff2ae'],\n7: ['#b3e2cd','#fdcdac','#cbd5e8','#f4cae4','#e6f5c9','#fff2ae','#f1e2cc'],\n8: ['#b3e2cd','#fdcdac','#cbd5e8','#f4cae4','#e6f5c9','#fff2ae','#f1e2cc','#cccccc']\n},Set1: {\n3: ['#e41a1c','#377eb8','#4daf4a'],\n4: ['#e41a1c','#377eb8','#4daf4a','#984ea3'],\n5: ['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00'],\n6: ['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33'],\n7: ['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628'],\n8: ['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf'],\n9: ['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf','#999999']\n},Set2: {\n3: ['#66c2a5','#fc8d62','#8da0cb'],\n4: ['#66c2a5','#fc8d62','#8da0cb','#e78ac3'],\n5: ['#66c2a5','#fc8d62','#8da0cb','#e78ac3','#a6d854'],\n6: ['#66c2a5','#fc8d62','#8da0cb','#e78ac3','#a6d854','#ffd92f'],\n7: ['#66c2a5','#fc8d62','#8da0cb','#e78ac3','#a6d854','#ffd92f','#e5c494'],\n8: ['#66c2a5','#fc8d62','#8da0cb','#e78ac3','#a6d854','#ffd92f','#e5c494','#b3b3b3']\n},Set3: {\n3: ['#8dd3c7','#ffffb3','#bebada'],\n4: ['#8dd3c7','#ffffb3','#bebada','#fb8072'],\n5: ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3'],\n6: ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462'],\n7: ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69'],\n8: ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5'],\n9: ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9'],\n10: ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9','#bc80bd'],\n11: ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9','#bc80bd','#ccebc5'],\n12: ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9','#bc80bd','#ccebc5','#ffed6f']\n}};","'use strict';\n\nmodule.exports = function d3_class(ctor, properties) {\n  for (var key in properties) {\n    Object.defineProperty(ctor.prototype, key, {\n      value: properties[key],\n      enumerable: false\n    });\n  }\n};","'use strict';\n/* jshint ignore:start */\n\nvar d3 = module.exports = {\n  map: require('./map')\n};\n\nd3.color = d3_color;\n\nfunction d3_color() {}\nd3_color.prototype.toString = function() {\n  return this.rgb() + '';\n};\nd3.hsl = d3_hsl;\n\nfunction d3_hsl(h, s, l) {\n\n  return this instanceof d3_hsl ? void(this.h = +h, this.s = +s, this.l = +l) : arguments.length <\n    2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl,\n      d3_hsl) : new d3_hsl(h, s, l);\n}\nvar d3_hslPrototype = d3_hsl.prototype = new d3_color();\nd3_hslPrototype.brighter = function(k) {\n  k = Math.pow(.7, arguments.length ? k : 1);\n  return new d3_hsl(this.h, this.s, this.l / k);\n};\nd3_hslPrototype.darker = function(k) {\n  k = Math.pow(.7, arguments.length ? k : 1);\n  return new d3_hsl(this.h, this.s, k * this.l);\n};\nd3_hslPrototype.rgb = function() {\n  return d3_hsl_rgb(this.h, this.s, this.l);\n};\n\nfunction d3_hsl_rgb(h, s, l) {\n  var m1, m2;\n  h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n  s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n  l = l < 0 ? 0 : l > 1 ? 1 : l;\n  m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n  m1 = 2 * l - m2;\n\n  function v(h) {\n    if (h > 360) h -= 360;\n    else if (h < 0) h += 360;\n    if (h < 60) return m1 + (m2 - m1) * h / 60;\n    if (h < 180) return m2;\n    if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n    return m1;\n  }\n\n  function vv(h) {\n    return Math.round(v(h) * 255);\n  }\n  return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n}\nd3.hcl = d3_hcl;\n\nfunction d3_hcl(h, c, l) {\n  return this instanceof d3_hcl ? void(this.h = +h, this.c = +c, this.l = +l) : arguments.length <\n    2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l,\n      h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(\n      h, c, l);\n}\nvar d3_hclPrototype = d3_hcl.prototype = new d3_color();\nd3_hclPrototype.brighter = function(k) {\n  return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n};\nd3_hclPrototype.darker = function(k) {\n  return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n};\nd3_hclPrototype.rgb = function() {\n  return d3_hcl_lab(this.h, this.c, this.l).rgb();\n};\n\nfunction d3_hcl_lab(h, c, l) {\n  if (isNaN(h)) h = 0;\n  if (isNaN(c)) c = 0;\n  return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n}\nd3.lab = d3_lab;\n\nfunction d3_lab(l, a, b) {\n  return this instanceof d3_lab ? void(this.l = +l, this.a = +a, this.b = +b) : arguments.length <\n    2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h,\n      l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n}\nvar d3_lab_K = 18;\nvar d3_lab_X = .95047,\n  d3_lab_Y = 1,\n  d3_lab_Z = 1.08883;\nvar d3_labPrototype = d3_lab.prototype = new d3_color();\nd3_labPrototype.brighter = function(k) {\n  return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this\n    .b);\n};\nd3_labPrototype.darker = function(k) {\n  return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n};\nd3_labPrototype.rgb = function() {\n  return d3_lab_rgb(this.l, this.a, this.b);\n};\n\nd3.lab_rgb = function d3_lab_rgb(l, a, b) {\n  var y = (l + 16) / 116,\n    x = y + a / 500,\n    z = y - b / 200;\n  x = d3_lab_xyz(x) * d3_lab_X;\n  y = d3_lab_xyz(y) * d3_lab_Y;\n  z = d3_lab_xyz(z) * d3_lab_Z;\n  return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 *\n    x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 *\n    z));\n}\n\nfunction d3_lab_hcl(l, a, b) {\n  return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(\n    NaN, NaN, l);\n}\n\nfunction d3_lab_xyz(x) {\n  return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n}\n\nfunction d3_xyz_lab(x) {\n  return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n}\n\nfunction d3_xyz_rgb(r) {\n  return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n}\nd3.rgb = d3_rgb;\n\nfunction d3_rgb(r, g, b) {\n  return this instanceof d3_rgb ? void(this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length <\n    2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb,\n      d3_hsl_rgb) : new d3_rgb(r, g, b);\n}\n\nfunction d3_rgbNumber(value) {\n  return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n}\n\nfunction d3_rgbString(value) {\n  return d3_rgbNumber(value) + \"\";\n}\nvar d3_rgbPrototype = d3_rgb.prototype = new d3_color();\nd3_rgbPrototype.brighter = function(k) {\n  k = Math.pow(.7, arguments.length ? k : 1);\n  var r = this.r,\n    g = this.g,\n    b = this.b,\n    i = 30;\n  if (!r && !g && !b) return new d3_rgb(i, i, i);\n  if (r && r < i) r = i;\n  if (g && g < i) g = i;\n  if (b && b < i) b = i;\n  return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n};\nd3_rgbPrototype.darker = function(k) {\n  k = Math.pow(.7, arguments.length ? k : 1);\n  return new d3_rgb(k * this.r, k * this.g, k * this.b);\n};\nd3_rgbPrototype.hsl = function() {\n  return d3_rgb_hsl(this.r, this.g, this.b);\n};\nd3_rgbPrototype.toString = function() {\n  return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n};\n\nfunction d3_rgb_hex(v) {\n  return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n}\n\nfunction d3_rgb_parse(format, rgb, hsl) {\n  var r = 0,\n    g = 0,\n    b = 0,\n    m1, m2, color;\n  m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n  if (m1) {\n    m2 = m1[2].split(\",\");\n    switch (m1[1]) {\n      case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n      case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(\n            m2[2]));\n        }\n    }\n  }\n  if (color = d3_rgb_names.get(format.toLowerCase())) {\n    return rgb(color.r, color.g, color.b);\n  }\n  if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n    if (format.length === 4) {\n      r = (color & 3840) >> 4;\n      r = r >> 4 | r;\n      g = color & 240;\n      g = g >> 4 | g;\n      b = color & 15;\n      b = b << 4 | b;\n    } else if (format.length === 7) {\n      r = (color & 16711680) >> 16;\n      g = (color & 65280) >> 8;\n      b = color & 255;\n    }\n  }\n  return rgb(r, g, b);\n}\n\nfunction d3_rgb_hsl(r, g, b) {\n  var min = Math.min(r /= 255, g /= 255, b /= 255),\n    max = Math.max(r, g, b),\n    d = max - min,\n    h, s, l = (max + min) / 2;\n  if (d) {\n    s = l < .5 ? d / (max + min) : d / (2 - max - min);\n    if (r == max) h = (g - b) / d + (g < b ? 6 : 0);\n    else if (g == max) h = (b - r) / d + 2;\n    else h = (r - g) / d + 4;\n    h *= 60;\n  } else {\n    h = NaN;\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new d3_hsl(h, s, l);\n}\n\nfunction d3_rgb_lab(r, g, b) {\n  r = d3_rgb_xyz(r);\n  g = d3_rgb_xyz(g);\n  b = d3_rgb_xyz(b);\n  var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X),\n    y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y),\n    z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n  return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n}\n\nfunction d3_rgb_xyz(r) {\n  return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n}\n\nfunction d3_rgb_parseNumber(c) {\n  var f = parseFloat(c);\n  return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n}\nvar d3_rgb_names = d3.map({\n  aliceblue: 15792383,\n  antiquewhite: 16444375,\n  aqua: 65535,\n  aquamarine: 8388564,\n  azure: 15794175,\n  beige: 16119260,\n  bisque: 16770244,\n  black: 0,\n  blanchedalmond: 16772045,\n  blue: 255,\n  blueviolet: 9055202,\n  brown: 10824234,\n  burlywood: 14596231,\n  cadetblue: 6266528,\n  chartreuse: 8388352,\n  chocolate: 13789470,\n  coral: 16744272,\n  cornflowerblue: 6591981,\n  cornsilk: 16775388,\n  crimson: 14423100,\n  cyan: 65535,\n  darkblue: 139,\n  darkcyan: 35723,\n  darkgoldenrod: 12092939,\n  darkgray: 11119017,\n  darkgreen: 25600,\n  darkgrey: 11119017,\n  darkkhaki: 12433259,\n  darkmagenta: 9109643,\n  darkolivegreen: 5597999,\n  darkorange: 16747520,\n  darkorchid: 10040012,\n  darkred: 9109504,\n  darksalmon: 15308410,\n  darkseagreen: 9419919,\n  darkslateblue: 4734347,\n  darkslategray: 3100495,\n  darkslategrey: 3100495,\n  darkturquoise: 52945,\n  darkviolet: 9699539,\n  deeppink: 16716947,\n  deepskyblue: 49151,\n  dimgray: 6908265,\n  dimgrey: 6908265,\n  dodgerblue: 2003199,\n  firebrick: 11674146,\n  floralwhite: 16775920,\n  forestgreen: 2263842,\n  fuchsia: 16711935,\n  gainsboro: 14474460,\n  ghostwhite: 16316671,\n  gold: 16766720,\n  goldenrod: 14329120,\n  gray: 8421504,\n  green: 32768,\n  greenyellow: 11403055,\n  grey: 8421504,\n  honeydew: 15794160,\n  hotpink: 16738740,\n  indianred: 13458524,\n  indigo: 4915330,\n  ivory: 16777200,\n  khaki: 15787660,\n  lavender: 15132410,\n  lavenderblush: 16773365,\n  lawngreen: 8190976,\n  lemonchiffon: 16775885,\n  lightblue: 11393254,\n  lightcoral: 15761536,\n  lightcyan: 14745599,\n  lightgoldenrodyellow: 16448210,\n  lightgray: 13882323,\n  lightgreen: 9498256,\n  lightgrey: 13882323,\n  lightpink: 16758465,\n  lightsalmon: 16752762,\n  lightseagreen: 2142890,\n  lightskyblue: 8900346,\n  lightslategray: 7833753,\n  lightslategrey: 7833753,\n  lightsteelblue: 11584734,\n  lightyellow: 16777184,\n  lime: 65280,\n  limegreen: 3329330,\n  linen: 16445670,\n  magenta: 16711935,\n  maroon: 8388608,\n  mediumaquamarine: 6737322,\n  mediumblue: 205,\n  mediumorchid: 12211667,\n  mediumpurple: 9662683,\n  mediumseagreen: 3978097,\n  mediumslateblue: 8087790,\n  mediumspringgreen: 64154,\n  mediumturquoise: 4772300,\n  mediumvioletred: 13047173,\n  midnightblue: 1644912,\n  mintcream: 16121850,\n  mistyrose: 16770273,\n  moccasin: 16770229,\n  navajowhite: 16768685,\n  navy: 128,\n  oldlace: 16643558,\n  olive: 8421376,\n  olivedrab: 7048739,\n  orange: 16753920,\n  orangered: 16729344,\n  orchid: 14315734,\n  palegoldenrod: 15657130,\n  palegreen: 10025880,\n  paleturquoise: 11529966,\n  palevioletred: 14381203,\n  papayawhip: 16773077,\n  peachpuff: 16767673,\n  peru: 13468991,\n  pink: 16761035,\n  plum: 14524637,\n  powderblue: 11591910,\n  purple: 8388736,\n  rebeccapurple: 6697881,\n  red: 16711680,\n  rosybrown: 12357519,\n  royalblue: 4286945,\n  saddlebrown: 9127187,\n  salmon: 16416882,\n  sandybrown: 16032864,\n  seagreen: 3050327,\n  seashell: 16774638,\n  sienna: 10506797,\n  silver: 12632256,\n  skyblue: 8900331,\n  slateblue: 6970061,\n  slategray: 7372944,\n  slategrey: 7372944,\n  snow: 16775930,\n  springgreen: 65407,\n  steelblue: 4620980,\n  tan: 13808780,\n  teal: 32896,\n  thistle: 14204888,\n  tomato: 16737095,\n  turquoise: 4251856,\n  violet: 15631086,\n  wheat: 16113331,\n  white: 16777215,\n  whitesmoke: 16119285,\n  yellow: 16776960,\n  yellowgreen: 10145074\n});\nd3_rgb_names.forEach(function(key, value) {\n  d3_rgb_names.set(key, d3_rgbNumber(value));\n});\n/* jshint ignore:end */\n","'use strict';\n\nvar d3 = require('./color');\n\nmodule.exports = function (a, b) {\n  a = d3.lab(a);\n  b = d3.lab(b);\n  var al = a.l,\n      aa = a.a,\n      ab = a.b,\n      bl = b.l - al,\n      ba = b.a - aa,\n      bb = b.b - ab;\n  return function(t) {\n    return d3.lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + '';\n  };\n};","'use strict';\n/* jshint ignore:start */\nvar d3_class = require('./class');\n\nmodule.exports = function(object, f) {\n  var map = new d3_Map;\n  if (object instanceof d3_Map) {\n    object.forEach(function(key, value) { map.set(key, value); });\n  } else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n    if (arguments.length === 1) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n  } else {\n    for (var key in object) map.set(key, object[key]);\n  }\n  return map;\n};\n\nfunction d3_Map() {\n  this._ = Object.create(null);\n}\n\nvar d3_map_proto = \"__proto__\",\n    d3_map_zero = \"\\0\";\n\nd3_class(d3_Map, {\n  has: d3_map_has,\n  get: function(key) {\n    return this._[d3_map_escape(key)];\n  },\n  set: function(key, value) {\n    return this._[d3_map_escape(key)] = value;\n  },\n  remove: d3_map_remove,\n  keys: d3_map_keys,\n  values: function() {\n    var values = [];\n    for (var key in this._) values.push(this._[key]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var key in this._) entries.push({key: d3_map_unescape(key), value: this._[key]});\n    return entries;\n  },\n  size: d3_map_size,\n  empty: d3_map_empty,\n  forEach: function(f) {\n    for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n  }\n});\n\nfunction d3_map_escape(key) {\n  return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n}\n\nfunction d3_map_unescape(key) {\n  return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n}\n\nfunction d3_map_has(key) {\n  return d3_map_escape(key) in this._;\n}\n\nfunction d3_map_remove(key) {\n  return (key = d3_map_escape(key)) in this._ && delete this._[key];\n}\n\nfunction d3_map_keys() {\n  var keys = [];\n  for (var key in this._) keys.push(d3_map_unescape(key));\n  return keys;\n}\n\nfunction d3_map_size() {\n  var size = 0;\n  for (var key in this._) ++size;\n  return size;\n}\n\nfunction d3_map_empty() {\n  for (var key in this._) return false;\n  return true;\n}\n/* jshint ignore:end */","// Package of defining Vega-lite Specification's json schema\n'use strict';\n\nrequire('../globals');\n\nvar schema = module.exports = {},\n  util = require('../util'),\n  toMap = util.toMap,\n  colorbrewer = require('../lib/colorbrewer/colorbrewer');\n\nschema.util = require('./schemautil');\n\nschema.marktype = {\n  type: 'string',\n  enum: ['point', 'tick', 'bar', 'line', 'area', 'circle', 'square', 'text']\n};\n\nschema.aggregate = {\n  type: 'string',\n  enum: ['avg', 'sum', 'median', 'min', 'max', 'count'],\n  supportedEnums: {\n    Q: ['avg', 'median', 'sum', 'min', 'max', 'count'],\n    O: ['median','min','max'],\n    N: [],\n    T: ['avg', 'median', 'min', 'max'],\n    '': ['count']\n  },\n  supportedTypes: toMap([Q, N, O, T, ''])\n};\nschema.band = {\n  type: 'object',\n  properties: {\n    size: {\n      type: 'integer',\n      minimum: 0\n    },\n    padding: {\n      type: 'integer',\n      minimum: 0,\n      default: 1\n    }\n  }\n};\n\nschema.getSupportedRole = function(encType) {\n  return schema.schema.properties.encoding.properties[encType].supportedRole;\n};\n\nschema.timefns = ['year', 'month', 'day', 'date', 'hours', 'minutes', 'seconds'];\n\nschema.defaultTimeFn = 'month';\n\nschema.fn = {\n  type: 'string',\n  enum: schema.timefns,\n  supportedTypes: toMap([T])\n};\n\n//TODO(kanitw): add other type of function here\n\nschema.scale_type = {\n  type: 'string',\n  enum: ['linear', 'log', 'pow', 'sqrt', 'quantile'],\n  default: 'linear',\n  supportedTypes: toMap([Q])\n};\n\nschema.field = {\n  type: 'object',\n  properties: {\n    name: {\n      type: 'string'\n    }\n  }\n};\n\nvar clone = util.duplicate;\nvar merge = schema.util.merge;\n\nschema.MAXBINS_DEFAULT = 15;\n\nvar bin = {\n  type: ['boolean', 'object'],\n  default: false,\n  properties: {\n    maxbins: {\n      type: 'integer',\n      default: schema.MAXBINS_DEFAULT,\n      minimum: 2\n    }\n  },\n  supportedTypes: toMap([Q]) // TODO: add O after finishing #81\n};\n\nvar typicalField = merge(clone(schema.field), {\n  type: 'object',\n  properties: {\n    type: {\n      type: 'string',\n      enum: [N, O, Q, T]\n    },\n    aggregate: schema.aggregate,\n    fn: schema.fn,\n    bin: bin,\n    scale: {\n      type: 'object',\n      properties: {\n        type: schema.scale_type,\n        reverse: {\n          type: 'boolean',\n          default: false,\n          supportedTypes: toMap([Q, T])\n        },\n        zero: {\n          type: 'boolean',\n          description: 'Include zero',\n          default: true,\n          supportedTypes: toMap([Q, T])\n        },\n        nice: {\n          type: 'string',\n          enum: ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'],\n          supportedTypes: toMap([T])\n        }\n      }\n    }\n  }\n});\n\nvar onlyOrdinalField = merge(clone(schema.field), {\n  type: 'object',\n  supportedRole: {\n    dimension: true\n  },\n  properties: {\n    type: {\n      type: 'string',\n      enum: [N, O, Q, T] // ordinal-only field supports Q when bin is applied and T when fn is applied.\n    },\n    fn: schema.fn,\n    bin: bin,\n    aggregate: {\n      type: 'string',\n      enum: ['count'],\n      supportedTypes: toMap([N, O]) // FIXME this looks weird to me\n    }\n  }\n});\n\nvar axisMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true},\n  properties: {\n    axis: {\n      type: 'object',\n      properties: {\n        grid: {\n          type: 'boolean',\n          default: true,\n          description: 'A flag indicate if gridlines should be created in addition to ticks.'\n        },\n        title: {\n          type: 'boolean',\n          default: true,\n          description: 'A title for the axis.'\n        },\n        titleOffset: {\n          type: 'integer',\n          default: undefined,  // auto\n          description: 'A title offset value for the axis.'\n        },\n        format: {\n          type: 'string',\n          default: undefined,  // auto\n          description: 'The formatting pattern for axis labels.'\n        },\n        maxLabelLength: {\n          type: 'integer',\n          default: 25,\n          minimum: 0,\n          description: 'Truncate labels that are too long.'\n        }\n      }\n    }\n  }\n};\n\nvar sortMixin = {\n  type: 'object',\n  properties: {\n    sort: {\n      type: 'array',\n      default: [],\n      items: {\n        type: 'object',\n        supportedTypes: toMap([N, O]),\n        required: ['name', 'aggregate'],\n        name: {\n          type: 'string'\n        },\n        aggregate: {\n          type: 'string',\n          enum: ['avg', 'sum', 'min', 'max', 'count']\n        },\n        reverse: {\n          type: 'boolean',\n          default: false\n        }\n      }\n    }\n  }\n};\n\nvar bandMixin = {\n  type: 'object',\n  properties: {\n    band: schema.band\n  }\n};\n\nvar legendMixin = {\n  type: 'object',\n  properties: {\n    legend: {\n      type: 'boolean',\n      default: true\n    }\n  }\n};\n\nvar textMixin = {\n  type: 'object',\n  supportedMarktypes: {'text': true},\n  properties: {\n    text: {\n      type: 'object',\n      properties: {\n        align: {\n          type: 'string',\n          default: 'left'\n        },\n        baseline: {\n          type: 'string',\n          default: 'middle'\n        },\n        margin: {\n          type: 'integer',\n          default: 4,\n          minimum: 0\n        }\n      }\n    },\n    font: {\n      type: 'object',\n      properties: {\n        weight: {\n          type: 'string',\n          enum: ['normal', 'bold'],\n          default: 'normal'\n        },\n        size: {\n          type: 'integer',\n          default: 10,\n          minimum: 0\n        },\n        family: {\n          type: 'string',\n          default: 'Helvetica Neue'\n        },\n        style: {\n          type: 'string',\n          default: 'normal',\n          enum: ['normal', 'italic']\n        }\n      }\n    }\n  }\n};\n\nvar sizeMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, bar: true, circle: true, square: true, text: true},\n  properties: {\n    value: {\n      type: 'integer',\n      default: 30,\n      minimum: 0\n    }\n  }\n};\n\nvar colorMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, 'text': true},\n  properties: {\n    value: {\n      type: 'string',\n      role: 'color',\n      default: 'steelblue'\n    },\n    scale: {\n      type: 'object',\n      properties: {\n        range: {\n          type: ['string', 'array']\n        }\n      }\n    }\n  }\n};\n\nvar alphaMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, 'text': true},\n  properties: {\n    value: {\n      type: 'number',\n      default: undefined,  // auto\n      minimum: 0,\n      maximum: 1\n    }\n  }\n};\n\nvar shapeMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, circle: true, square: true},\n  properties: {\n    value: {\n      type: 'string',\n      enum: ['circle', 'square', 'cross', 'diamond', 'triangle-up', 'triangle-down'],\n      default: 'circle'\n    }\n  }\n};\n\nvar detailMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, line: true, circle: true, square: true}\n};\n\nvar rowMixin = {\n  properties: {\n    height: {\n      type: 'number',\n      minimum: 0,\n      default: 150\n    },\n    grid: {\n      type: 'boolean',\n      default: true,\n      description: 'A flag indicate if gridlines should be created in addition to ticks.'\n    },\n  }\n};\n\nvar colMixin = {\n  properties: {\n    width: {\n      type: 'number',\n      minimum: 0,\n      default: 150\n    },\n    axis: {\n      properties: {\n        maxLabelLength: {\n          type: 'integer',\n          default: 12,\n          minimum: 0,\n          description: 'Truncate labels that are too long.'\n        }\n      }\n    }\n  }\n};\n\nvar facetMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, text: true},\n  properties: {\n    padding: {\n      type: 'number',\n      minimum: 0,\n      maximum: 1,\n      default: 0.1\n    }\n  }\n};\n\nvar requiredNameType = {\n  required: ['name', 'type']\n};\n\nvar multiRoleField = merge(clone(typicalField), {\n  supportedRole: {\n    measure: true,\n    dimension: true\n  }\n});\n\nvar quantitativeField = merge(clone(typicalField), {\n  supportedRole: {\n    measure: true,\n    dimension: 'ordinal-only' // using alpha / size to encoding category lead to order interpretation\n  }\n});\n\nvar onlyQuantitativeField = merge(clone(typicalField), {\n  supportedRole: {\n    measure: true\n  }\n});\n\nvar x = merge(clone(multiRoleField), axisMixin, bandMixin, requiredNameType, sortMixin);\nvar y = clone(x);\n\nvar facet = merge(clone(onlyOrdinalField), requiredNameType, facetMixin, sortMixin);\nvar row = merge(clone(facet), axisMixin, rowMixin);\nvar col = merge(clone(facet), axisMixin, colMixin);\n\nvar size = merge(clone(quantitativeField), legendMixin, sizeMixin, sortMixin);\nvar color = merge(clone(multiRoleField), legendMixin, colorMixin, sortMixin);\nvar alpha = merge(clone(quantitativeField), alphaMixin, sortMixin);\nvar shape = merge(clone(onlyOrdinalField), legendMixin, shapeMixin, sortMixin);\nvar detail = merge(clone(onlyOrdinalField), detailMixin, sortMixin);\n\n// we only put aggregated measure in pivot table\nvar text = merge(clone(onlyQuantitativeField), textMixin, sortMixin);\n\n// TODO add label\n\nvar filter = {\n  type: 'array',\n  items: {\n    type: 'object',\n    properties: {\n      operands: {\n        type: 'array',\n        items: {\n          type: ['string', 'boolean', 'integer', 'number']\n        }\n      },\n      operator: {\n        type: 'string',\n        enum: ['>', '>=', '=', '!=', '<', '<=', 'notNull']\n      }\n    }\n  }\n};\n\nvar data = {\n  type: 'object',\n  properties: {\n    // data source\n    formatType: {\n      type: 'string',\n      enum: ['json', 'csv'],\n      default: 'json'\n    },\n    url: {\n      type: 'string',\n      default: undefined\n    },\n    values: {\n      type: 'array',\n      description: 'Pass array of objects instead of a url to a file.',\n      items: {\n        type: 'object',\n        additionalProperties: true\n      }\n    }\n  }\n};\n\nvar config = {\n  type: 'object',\n  properties: {\n    // template\n    width: {\n      type: 'integer',\n      default: undefined\n    },\n    height: {\n      type: 'integer',\n      default: undefined\n    },\n    viewport: {\n      type: 'array',\n      items: {\n        type: 'integer'\n      },\n      default: undefined\n    },\n    gridColor: {\n      type: 'string',\n      role: 'color',\n      default: 'black'\n    },\n    gridOpacity: {\n      type: 'number',\n      minimum: 0,\n      maximum: 1,\n      default: 0.08\n    },\n\n    // filter null\n    filterNull: {\n      type: 'object',\n      properties: {\n        O: {type:'boolean', default: false},\n        Q: {type:'boolean', default: true},\n        T: {type:'boolean', default: true}\n      }\n    },\n    toggleSort: {\n      type: 'string',\n      default: O\n    },\n\n    // single plot\n    singleHeight: {\n      // will be overwritten by bandWidth * (cardinality + padding)\n      type: 'integer',\n      default: 200,\n      minimum: 0\n    },\n    singleWidth: {\n      // will be overwritten by bandWidth * (cardinality + padding)\n      type: 'integer',\n      default: 200,\n      minimum: 0\n    },\n    // band size\n    largeBandSize: {\n      type: 'integer',\n      default: 21,\n      minimum: 0\n    },\n    smallBandSize: {\n      //small multiples or single plot with high cardinality\n      type: 'integer',\n      default: 12,\n      minimum: 0\n    },\n    largeBandMaxCardinality: {\n      type: 'integer',\n      default: 10\n    },\n    // small multiples\n    cellPadding: {\n      type: 'number',\n      default: 0.1\n    },\n    cellGridColor: {\n      type: 'string',\n      role: 'color',\n      default: 'black'\n    },\n    cellGridOpacity: {\n      type: 'number',\n      minimum: 0,\n      maximum: 1,\n      default: 0.15\n    },\n    cellBackgroundColor: {\n      type: 'string',\n      role: 'color',\n      default: 'transparent'\n    },\n    textCellWidth: {\n      type: 'integer',\n      default: 90,\n      minimum: 0\n    },\n\n    // marks\n    strokeWidth: {\n      type: 'integer',\n      default: 2,\n      minimum: 0\n    },\n    singleBarOffset: {\n      type: 'integer',\n      default: 5,\n      minimum: 0\n    },\n\n    // color\n    c10palette: {\n      type: 'string',\n      default: 'category10-k',\n      enum: [\n        // Tableau\n        'category10', 'category10-k',\n        // Color Brewer\n        'Pastel1', 'Pastel2', 'Set1', 'Set2', 'Set3'\n      ]\n    },\n    c20palette: {\n      type: 'string',\n      default: 'category20',\n      enum: ['category20', 'category20b', 'category20c']\n    },\n    ordinalPalette: {\n      type: 'string',\n      default: 'BuGn',\n      enum: util.keys(colorbrewer)\n    },\n\n    // scales\n    timeScaleLabelLength: {\n      type: 'integer',\n      default: 3,\n      minimum: 0\n    },\n    // other\n    characterWidth: {\n      type: 'integer',\n      default: 6\n    }\n  }\n};\n\n/** @type Object Schema of a vega-lite specification */\nschema.schema = {\n  $schema: 'http://json-schema.org/draft-04/schema#',\n  description: 'Schema for Vega-lite specification',\n  type: 'object',\n  required: ['marktype', 'encoding', 'data'],\n  properties: {\n    data: data,\n    marktype: schema.marktype,\n    encoding: {\n      type: 'object',\n      properties: {\n        x: x,\n        y: y,\n        row: row,\n        col: col,\n        size: size,\n        color: color,\n        alpha: alpha,\n        shape: shape,\n        text: text,\n        detail: detail\n      }\n    },\n    filter: filter,\n    config: config\n  }\n};\n\nschema.encTypes = util.keys(schema.schema.properties.encoding.properties);\n\n/** Instantiate a verbose vl spec from the schema */\nschema.instantiate = function() {\n  return schema.util.instantiate(schema.schema);\n};\n","'use strict';\n\nvar schemautil = module.exports = {},\n  util = require('../util');\n\nvar isEmpty = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\nschemautil.extend = function(instance, schema) {\n  return schemautil.merge(schemautil.instantiate(schema), instance);\n};\n\n// instantiate a schema\nschemautil.instantiate = function(schema) {\n  var val;\n  if (schema === undefined) {\n    return undefined;\n  } else if ('default' in schema) {\n    val = schema.default;\n    return util.isObject(val) ? util.duplicate(val) : val;\n  } else if (schema.type === 'object') {\n    var instance = {};\n    for (var name in schema.properties) {\n      val = schemautil.instantiate(schema.properties[name]);\n      if (val !== undefined) {\n        instance[name] = val;\n      }\n    }\n    return instance;\n  } else if (schema.type === 'array') {\n    return [];\n  }\n  return undefined;\n};\n\n// remove all defaults from an instance\nschemautil.subtract = function(instance, defaults) {\n  var changes = {};\n  for (var prop in instance) {\n    var def = defaults[prop];\n    var ins = instance[prop];\n    // Note: does not properly subtract arrays\n    if (!defaults || def !== ins) {\n      if (typeof ins === 'object' && !util.isArray(ins) && def) {\n        var c = schemautil.subtract(ins, def);\n        if (!isEmpty(c))\n          changes[prop] = c;\n      } else if (!util.isArray(ins) || ins.length > 0) {\n        changes[prop] = ins;\n      }\n    }\n  }\n  return changes;\n};\n\nschemautil.merge = function(/*dest*, src0, src1, ...*/){\n  var dest = arguments[0];\n  for (var i=1 ; i<arguments.length; i++) {\n    dest = merge(dest, arguments[i]);\n  }\n  return dest;\n};\n\n// recursively merges src into dest\nfunction merge(dest, src) {\n  if (typeof src !== 'object' || src === null) {\n    return dest;\n  }\n\n  for (var p in src) {\n    if (!src.hasOwnProperty(p)) {\n      continue;\n    }\n    if (src[p] === undefined) {\n      continue;\n    }\n    if (typeof src[p] !== 'object' || src[p] === null) {\n      dest[p] = src[p];\n    } else if (typeof dest[p] !== 'object' || dest[p] === null) {\n      dest[p] = merge(src[p].constructor === Array ? [] : {}, src[p]);\n    } else {\n      merge(dest[p], src[p]);\n    }\n  }\n  return dest;\n}","'use strict';\n\nvar util = module.exports = require('datalib/src/util');\n\nutil.extend(util, require('datalib/src/generate'));\nutil.bin = require('datalib/src/bins/bins');\n\nutil.isin = function(item, array) {\n  return array.indexOf(item) !== -1;\n};\n\nutil.forEach = function(obj, f, thisArg) {\n  if (obj.forEach) {\n    obj.forEach.call(thisArg, f);\n  } else {\n    for (var k in obj) {\n      f.call(thisArg, obj[k], k , obj);\n    }\n  }\n};\n\nutil.reduce = function(obj, f, init, thisArg) {\n  if (obj.reduce) {\n    return obj.reduce.call(thisArg, f, init);\n  } else {\n    for (var k in obj) {\n      init = f.call(thisArg, init, obj[k], k, obj);\n    }\n    return init;\n  }\n};\n\nutil.map = function(obj, f, thisArg) {\n  if (obj.map) {\n    return obj.map.call(thisArg, f);\n  } else {\n    var output = [];\n    for (var k in obj) {\n      output.push( f.call(thisArg, obj[k], k, obj));\n    }\n  }\n};\n\nutil.any = function(arr, f) {\n  var i = 0, k;\n  for (k in arr) {\n    if (f(arr[k], k, i++)) return true;\n  }\n  return false;\n};\n\nutil.all = function(arr, f) {\n  var i = 0, k;\n  for (k in arr) {\n    if (!f(arr[k], k, i++)) return false;\n  }\n  return true;\n};\n\nutil.getbins = function(stats, maxbins) {\n  return util.bin({\n    min: stats.min,\n    max: stats.max,\n    maxbins: maxbins\n  });\n};\n\n/**\n * x[p[0]]...[p[n]] = val\n * @param noaugment determine whether new object should be added f\n * or non-existing properties along the path\n */\nutil.setter = function(x, p, val, noaugment) {\n  for (var i=0; i<p.length-1; ++i) {\n    if (!noaugment && !(p[i] in x)){\n      x = x[p[i]] = {};\n    } else {\n      x = x[p[i]];\n    }\n  }\n  x[p[i]] = val;\n};\n\n\n/**\n * returns x[p[0]]...[p[n]]\n * @param augment determine whether new object should be added f\n * or non-existing properties along the path\n */\nutil.getter = function(x, p, noaugment) {\n  for (var i=0; i<p.length; ++i) {\n    if (!noaugment && !(p[i] in x)){\n      x = x[p[i]] = {};\n    } else {\n      x = x[p[i]];\n    }\n  }\n  return x;\n};\n\nutil.error = function(msg) {\n  console.error('[VL Error]', msg);\n};\n\n"],"sourceRoot":"/source/"}